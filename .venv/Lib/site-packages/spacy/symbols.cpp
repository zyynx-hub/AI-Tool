/* Generated by Cython 3.1.1 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "extra_compile_args": [
            "-std=c++11"
        ],
        "include_dirs": [
            "C:\\Users\\runneradmin\\AppData\\Local\\Temp\\pip-build-env-t7rb21zd\\overlay\\Lib\\site-packages\\numpy\\_core\\include",
            "C:\\Users\\runneradmin\\AppData\\Local\\pypa\\cibuildwheel\\Cache\\nuget-cpython\\python.3.11.9\\tools\\Include"
        ],
        "language": "c++",
        "name": "spacy.symbols",
        "sources": [
            "spacy/symbols.pyx"
        ]
    },
    "module_name": "spacy.symbols"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
/* InitLimitedAPI */
#if defined(Py_LIMITED_API) && !defined(CYTHON_LIMITED_API)
  #define CYTHON_LIMITED_API 1
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x03080000
    #error Cython requires Python 3.8+.
#else
#define __PYX_ABI_VERSION "3_1_1"
#define CYTHON_HEX_VERSION 0x030101F0
#define CYTHON_FUTURE_DIVISION 0
/* CModulePreamble */
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_ASSUME_SAFE_SIZE
  #define CYTHON_ASSUME_SAFE_SIZE 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_AM_SEND
  #define CYTHON_USE_AM_SEND 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 1
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 1
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #ifndef CYTHON_ASSUME_SAFE_SIZE
    #define CYTHON_ASSUME_SAFE_SIZE 1
  #endif
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PYPY_VERSION_NUM >= 0x07030C00)
  #endif
  #undef CYTHON_USE_AM_SEND
  #define CYTHON_USE_AM_SEND 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_NUM >= 0x07031100)
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_ASSUME_SAFE_SIZE
  #define CYTHON_ASSUME_SAFE_SIZE 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #ifndef CYTHON_USE_AM_SEND
    #define CYTHON_USE_AM_SEND (__PYX_LIMITED_VERSION_HEX >= 0x030A0000)
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #ifdef Py_GIL_DISABLED
    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 1
  #else
    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #endif
  #if PY_VERSION_HEX < 0x030A0000
    #undef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #elif !defined(CYTHON_USE_TYPE_SLOTS)
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLIST_INTERNALS)
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #elif !defined(CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS)
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_ASSUME_SAFE_SIZE
    #define CYTHON_ASSUME_SAFE_SIZE 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL 0
  #elif !defined(CYTHON_FAST_GIL)
    #define CYTHON_FAST_GIL (PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_SYS_MONITORING
    #define CYTHON_USE_SYS_MONITORING (PY_VERSION_HEX >= 0x030d00B1)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #ifndef CYTHON_USE_AM_SEND
    #define CYTHON_USE_AM_SEND 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5 && !CYTHON_USE_MODULE_STATE)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS (!CYTHON_COMPILING_IN_CPYTHON_FREETHREADING)
  #endif
#endif
#ifndef CYTHON_FAST_PYCCALL
#define CYTHON_FAST_PYCCALL  CYTHON_FAST_PYCALL
#endif
#ifndef CYTHON_VECTORCALL
#if CYTHON_COMPILING_IN_LIMITED_API
#define CYTHON_VECTORCALL  (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)
#else
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifndef Py_UNREACHABLE
  #define Py_UNREACHABLE()  assert(0); abort()
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

/* CppInitCode */
#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

/* PythonCompatibility */
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#define __Pyx_BUILTIN_MODULE_NAME "builtins"
#define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    #ifndef CO_OPTIMIZED
    static int CO_OPTIMIZED;
    #endif
    #ifndef CO_NEWLOCALS
    static int CO_NEWLOCALS;
    #endif
    #ifndef CO_VARARGS
    static int CO_VARARGS;
    #endif
    #ifndef CO_VARKEYWORDS
    static int CO_VARKEYWORDS;
    #endif
    #ifndef CO_ASYNC_GENERATOR
    static int CO_ASYNC_GENERATOR;
    #endif
    #ifndef CO_GENERATOR
    static int CO_GENERATOR;
    #endif
    #ifndef CO_COROUTINE
    static int CO_COROUTINE;
    #endif
#else
    #ifndef CO_COROUTINE
      #define CO_COROUTINE 0x80
    #endif
    #ifndef CO_ASYNC_GENERATOR
      #define CO_ASYNC_GENERATOR 0x200
    #endif
#endif
static int __Pyx_init_co_variables(void);
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#ifndef METH_FASTCALL
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void (*cfunc)(void)) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x03090000
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#elif CYTHON_COMPILING_IN_GRAAL
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) _PyFrame_SetLineNumber((frame), (lineno))
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#endif
#if CYTHON_USE_MODULE_STATE
static CYTHON_INLINE void *__Pyx__PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#define __Pyx_PyModule_GetState(o) (__pyx_mstatetype *)__Pyx__PyModule_GetState(o)
#else
#define __Pyx_PyModule_GetState(op) ((void)op,__pyx_mstate_global)
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE((PyObject *) obj), name, func_ctype)
#define __Pyx_PyObject_TryGetSlot(obj, name, func_ctype) __Pyx_PyType_TryGetSlot(Py_TYPE(obj), name, func_ctype)
#define __Pyx_PyObject_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(Py_TYPE(obj), sub, name, func_ctype)
#define __Pyx_PyObject_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSubSlot(Py_TYPE(obj), sub, name, func_ctype)
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype) __Pyx_PyType_GetSlot(type, name, func_ctype)
  #define __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype) (((type)->sub) ? ((type)->sub->name) : NULL)
  #define __Pyx_PyType_TryGetSubSlot(type, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype)
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype)\
    ((__PYX_LIMITED_VERSION_HEX >= 0x030A0000 ||\
     (PyType_GetFlags(type) & Py_TPFLAGS_HEAPTYPE) || __Pyx_get_runtime_version() >= 0x030A0000) ?\
     __Pyx_PyType_GetSlot(type, name, func_ctype) : NULL)
  #define __Pyx_PyType_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSlot(obj, name, func_ctype)
  #define __Pyx_PyType_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSlot(obj, name, func_ctype)
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
#define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif !CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
#endif
#define __Pyx_PyObject_GetIterNextFunc(iterator)  __Pyx_PyObject_GetSlot(iterator, tp_iternext, iternextfunc)
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#else
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains)
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS || !CYTHON_ASSUME_SAFE_MACROS
  #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    #define __Pyx_PyList_GetItemRef(o, i) PyList_GetItemRef(o, i)
  #else
    #define __Pyx_PyList_GetItemRef(o, i) PySequence_GetItem(o, i)
  #endif
#else
  #define __Pyx_PyList_GetItemRef(o, i) __Pyx_NewRef(PyList_GET_ITEM(o, i))
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_PyDict_GetItemRef(dict, key, result) PyDict_GetItemRef(dict, key, result)
#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
static CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {
  *result = PyObject_GetItem(dict, key);
  if (*result == NULL) {
    if (PyErr_ExceptionMatches(PyExc_KeyError)) {
      PyErr_Clear();
      return 0;
    }
    return -1;
  }
  return 1;
}
#else
static CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {
  *result = PyDict_GetItemWithError(dict, key);
  if (*result == NULL) {
    return PyErr_Occurred() ? -1 : 0;
  }
  Py_INCREF(*result);
  return 1;
}
#endif
#if defined(CYTHON_DEBUG_VISIT_CONST) && CYTHON_DEBUG_VISIT_CONST
  #define __Pyx_VISIT_CONST(obj)  Py_VISIT(obj)
#else
  #define __Pyx_VISIT_CONST(obj)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GET_ITEM(o, i)
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GET_ITEM(o, i)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GetItem(o, i)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GetItem(o, i)
#endif
#if CYTHON_ASSUME_SAFE_SIZE
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GET_LENGTH(o)
#else
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GetLength(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_InternFromString)
  #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
#endif
#define __Pyx_PyLong_FromHash_t PyLong_FromSsize_t
#define __Pyx_PyLong_AsHash_t   __Pyx_PyIndex_AsSsize_t
#if __PYX_LIMITED_VERSION_HEX >= 0x030A0000
    #define __Pyx_PySendResult PySendResult
#else
    typedef enum {
        PYGEN_RETURN = 0,
        PYGEN_ERROR = -1,
        PYGEN_NEXT = 1,
    } __Pyx_PySendResult;
#endif
#if CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX < 0x030A00A3
  typedef __Pyx_PySendResult (*__Pyx_pyiter_sendfunc)(PyObject *iter, PyObject *value, PyObject **result);
#else
  #define __Pyx_pyiter_sendfunc sendfunc
#endif
#if !CYTHON_USE_AM_SEND
#define __PYX_HAS_PY_AM_SEND 0
#elif __PYX_LIMITED_VERSION_HEX >= 0x030A0000
#define __PYX_HAS_PY_AM_SEND 1
#else
#define __PYX_HAS_PY_AM_SEND 2  // our own backported implementation
#endif
#if __PYX_HAS_PY_AM_SEND < 2
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#else
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
        __Pyx_pyiter_sendfunc am_send;
    } __Pyx_PyAsyncMethodsStruct;
    #define __Pyx_SlotTpAsAsync(s) ((PyAsyncMethods*)(s))
#endif
#if CYTHON_USE_AM_SEND && PY_VERSION_HEX < 0x030A00F0
    #define __Pyx_TPFLAGS_HAVE_AM_SEND (1UL << 21)
#else
    #define __Pyx_TPFLAGS_HAVE_AM_SEND (0)
#endif
#if PY_VERSION_HEX >= 0x03090000
#define __Pyx_PyInterpreterState_Get() PyInterpreterState_Get()
#else
#define __Pyx_PyInterpreterState_Get() PyThreadState_Get()->interp
#endif
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030A0000
#ifdef __cplusplus
extern "C"
#endif
PyAPI_FUNC(void *) PyMem_Calloc(size_t nelem, size_t elsize);
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_init_co_variable(PyObject *inspect, const char* name, int *write_to) {
    int value;
    PyObject *py_value = PyObject_GetAttrString(inspect, name);
    if (!py_value) return 0;
    value = (int) PyLong_AsLong(py_value);
    Py_DECREF(py_value);
    *write_to = value;
    return value != -1 || !PyErr_Occurred();
}
static int __Pyx_init_co_variables(void) {
    PyObject *inspect;
    int result;
    inspect = PyImport_ImportModule("inspect");
    result =
#if !defined(CO_OPTIMIZED)
        __Pyx_init_co_variable(inspect, "CO_OPTIMIZED", &CO_OPTIMIZED) &&
#endif
#if !defined(CO_NEWLOCALS)
        __Pyx_init_co_variable(inspect, "CO_NEWLOCALS", &CO_NEWLOCALS) &&
#endif
#if !defined(CO_VARARGS)
        __Pyx_init_co_variable(inspect, "CO_VARARGS", &CO_VARARGS) &&
#endif
#if !defined(CO_VARKEYWORDS)
        __Pyx_init_co_variable(inspect, "CO_VARKEYWORDS", &CO_VARKEYWORDS) &&
#endif
#if !defined(CO_ASYNC_GENERATOR)
        __Pyx_init_co_variable(inspect, "CO_ASYNC_GENERATOR", &CO_ASYNC_GENERATOR) &&
#endif
#if !defined(CO_GENERATOR)
        __Pyx_init_co_variable(inspect, "CO_GENERATOR", &CO_GENERATOR) &&
#endif
#if !defined(CO_COROUTINE)
        __Pyx_init_co_variable(inspect, "CO_COROUTINE", &CO_COROUTINE) &&
#endif
        1;
    Py_DECREF(inspect);
    return result ? 0 : -1;
}
#else
static int __Pyx_init_co_variables(void) {
    return 0;  // It's a limited API-only feature
}
#endif

/* MathInitCode */
#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #ifndef _USE_MATH_DEFINES
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#ifndef CYTHON_CLINE_IN_TRACEBACK_RUNTIME
#define CYTHON_CLINE_IN_TRACEBACK_RUNTIME 0
#endif
#ifndef CYTHON_CLINE_IN_TRACEBACK
#define CYTHON_CLINE_IN_TRACEBACK CYTHON_CLINE_IN_TRACEBACK_RUNTIME
#endif
#if CYTHON_CLINE_IN_TRACEBACK
#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; __pyx_clineno = __LINE__; (void) __pyx_clineno; }
#else
#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; (void) __pyx_clineno; }
#endif
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__spacy__symbols
#define __PYX_HAVE_API__spacy__symbols
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AS_STRING(s)
#else
    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AsString(s))
    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AsString(s)
#endif
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
static CYTHON_INLINE PyObject *__Pyx_NewRef(PyObject *obj) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_NewRef)
    return Py_NewRef(obj);
#else
    Py_INCREF(obj);
    return obj;
#endif
}
static CYTHON_INLINE PyObject *__Pyx_XNewRef(PyObject *obj) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_XNewRef)
    return Py_XNewRef(obj);
#else
    Py_XINCREF(obj);
    return obj;
#endif
}
static CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b);
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __Pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AS_DOUBLE(x)
#else
#define __Pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AsDouble(x)
#endif
#define __Pyx_PyFloat_AsFloat(x) ((float) __Pyx_PyFloat_AsDouble(x))
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#elif __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeASCII(c_str, size, NULL)
#else
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
/* PretendToInitialize */
#ifdef __cplusplus
#include <type_traits>
template <typename T>
static void __Pyx_pretend_to_initialize(T* ptr) {
#if __cplusplus > 201103L
    if ((std::is_trivially_default_constructible<T>::value))
#endif
        *ptr = T();
    (void)ptr;
}
#else
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }
#endif


#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * const __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char* const __pyx_f[] = {
  "spacy/symbols.pyx",
};
/* #### Code section: utility_code_proto_before_types ### */
/* Atomics.proto */
#include <pythread.h>
#ifndef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 1
#endif
#define __PYX_CYTHON_ATOMICS_ENABLED() CYTHON_ATOMICS
#define __PYX_GET_CYTHON_COMPILING_IN_CPYTHON_FREETHREADING() CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
#define __pyx_atomic_int_type int
#define __pyx_nonatomic_int_type int
#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\
                        (__STDC_VERSION__ >= 201112L) &&\
                        !defined(__STDC_NO_ATOMICS__))
    #include <stdatomic.h>
#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\
                    (__cplusplus >= 201103L) ||\
                    (defined(_MSC_VER) && _MSC_VER >= 1700)))
    #include <atomic>
#endif
#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\
                        (__STDC_VERSION__ >= 201112L) &&\
                        !defined(__STDC_NO_ATOMICS__) &&\
                       ATOMIC_INT_LOCK_FREE == 2)
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type atomic_int
    #define __pyx_atomic_ptr_type atomic_uintptr_t
    #define __pyx_nonatomic_ptr_type uintptr_t
    #define __pyx_atomic_incr_relaxed(value) atomic_fetch_add_explicit(value, 1, memory_order_relaxed)
    #define __pyx_atomic_incr_acq_rel(value) atomic_fetch_add_explicit(value, 1, memory_order_acq_rel)
    #define __pyx_atomic_decr_acq_rel(value) atomic_fetch_sub_explicit(value, 1, memory_order_acq_rel)
    #define __pyx_atomic_sub(value, arg) atomic_fetch_sub(value, arg)
    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) atomic_compare_exchange_strong(value, expected, desired)
    #define __pyx_atomic_load(value) atomic_load(value)
    #define __pyx_atomic_store(value, new_value) atomic_store(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) atomic_load_explicit(value, memory_order_relaxed)
    #define __pyx_atomic_pointer_load_acquire(value) atomic_load_explicit(value, memory_order_acquire)
    #define __pyx_atomic_pointer_exchange(value, new_value) atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)
    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)
        #pragma message ("Using standard C atomics")
    #elif defined(__PYX_DEBUG_ATOMICS)
        #warning "Using standard C atomics"
    #endif
#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\
                    (__cplusplus >= 201103L) ||\
\
                    (defined(_MSC_VER) && _MSC_VER >= 1700)) &&\
                    ATOMIC_INT_LOCK_FREE == 2)
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type std::atomic_int
    #define __pyx_atomic_ptr_type std::atomic_uintptr_t
    #define __pyx_nonatomic_ptr_type uintptr_t
    #define __pyx_atomic_incr_relaxed(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_relaxed)
    #define __pyx_atomic_incr_acq_rel(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_acq_rel)
    #define __pyx_atomic_decr_acq_rel(value) std::atomic_fetch_sub_explicit(value, 1, std::memory_order_acq_rel)
    #define __pyx_atomic_sub(value, arg) std::atomic_fetch_sub(value, arg)
    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) std::atomic_compare_exchange_strong(value, expected, desired)
    #define __pyx_atomic_load(value) std::atomic_load(value)
    #define __pyx_atomic_store(value, new_value) std::atomic_store(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) std::atomic_load_explicit(value, std::memory_order_relaxed)
    #define __pyx_atomic_pointer_load_acquire(value) std::atomic_load_explicit(value, std::memory_order_acquire)
    #define __pyx_atomic_pointer_exchange(value, new_value) std::atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)
    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)
        #pragma message ("Using standard C++ atomics")
    #elif defined(__PYX_DEBUG_ATOMICS)
        #warning "Using standard C++ atomics"
    #endif
#elif CYTHON_ATOMICS && (__GNUC__ >= 5 || (__GNUC__ == 4 &&\
                    (__GNUC_MINOR__ > 1 ||\
                    (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL__ >= 2))))
    #define __pyx_atomic_ptr_type void*
    #define __pyx_atomic_incr_relaxed(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_incr_acq_rel(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_decr_acq_rel(value) __sync_fetch_and_sub(value, 1)
    #define __pyx_atomic_sub(value, arg) __sync_fetch_and_sub(value, arg)
    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {
        __pyx_nonatomic_int_type old = __sync_val_compare_and_swap(value, *expected, desired);
        int result = old == *expected;
        *expected = old;
        return result;
    }
    #define __pyx_atomic_load(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_store(value, new_value) __sync_lock_test_and_set(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_pointer_load_acquire(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_pointer_exchange(value, new_value) __sync_lock_test_and_set(value, (__pyx_atomic_ptr_type)new_value)
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Using GNU atomics"
    #endif
#elif CYTHON_ATOMICS && defined(_MSC_VER)
    #include <intrin.h>
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type long
    #define __pyx_atomic_ptr_type void*
    #undef __pyx_nonatomic_int_type
    #define __pyx_nonatomic_int_type long
    #pragma intrinsic (_InterlockedExchangeAdd, _InterlockedExchange, _InterlockedCompareExchange, _InterlockedCompareExchangePointer, _InterlockedExchangePointer)
    #define __pyx_atomic_incr_relaxed(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_incr_acq_rel(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_decr_acq_rel(value) _InterlockedExchangeAdd(value, -1)
    #define __pyx_atomic_sub(value, arg) _InterlockedExchangeAdd(value, -arg)
    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {
        __pyx_nonatomic_int_type old = _InterlockedCompareExchange(value, desired, *expected);
        int result = old == *expected;
        *expected = old;
        return result;
    }
    #define __pyx_atomic_load(value) _InterlockedExchangeAdd(value, 0)
    #define __pyx_atomic_store(value, new_value) _InterlockedExchange(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) *(void * volatile *)value
    #define __pyx_atomic_pointer_load_acquire(value) _InterlockedCompareExchangePointer(value, 0, 0)
    #define __pyx_atomic_pointer_exchange(value, new_value) _InterlockedExchangePointer(value, (__pyx_atomic_ptr_type)new_value)
    #ifdef __PYX_DEBUG_ATOMICS
        #pragma message ("Using MSVC atomics")
    #endif
#else
    #undef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 0
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Not using atomics"
    #endif
#endif
#if CYTHON_ATOMICS
    #define __pyx_add_acquisition_count(memview)\
             __pyx_atomic_incr_relaxed(__pyx_get_slice_count_pointer(memview))
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_atomic_decr_acq_rel(__pyx_get_slice_count_pointer(memview))
#else
    #define __pyx_add_acquisition_count(memview)\
            __pyx_add_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_sub_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
#endif

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* CriticalSections.proto */
#if !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
#define __Pyx_PyCriticalSection void*
#define __Pyx_PyCriticalSection2 void*
#define __Pyx_PyCriticalSection_Begin1(cs, arg) (void)cs
#define __Pyx_PyCriticalSection_Begin2(cs, arg1, arg2) (void)cs
#define __Pyx_PyCriticalSection_End1(cs)
#define __Pyx_PyCriticalSection_End2(cs)
#else
#define __Pyx_PyCriticalSection PyCriticalSection
#define __Pyx_PyCriticalSection2 PyCriticalSection2
#define __Pyx_PyCriticalSection_Begin1 PyCriticalSection_Begin
#define __Pyx_PyCriticalSection_Begin2 PyCriticalSection2_Begin
#define __Pyx_PyCriticalSection_End1 PyCriticalSection_End
#define __Pyx_PyCriticalSection_End2 PyCriticalSection2_End
#endif
#if PY_VERSION_HEX < 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_BEGIN_CRITICAL_SECTION(o) {
#define __Pyx_END_CRITICAL_SECTION() }
#else
#define __Pyx_BEGIN_CRITICAL_SECTION Py_BEGIN_CRITICAL_SECTION
#define __Pyx_END_CRITICAL_SECTION Py_END_CRITICAL_SECTION
#endif

/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/

/* "spacy/symbols.pxd":1
 * cdef enum symbol_t:             # <<<<<<<<<<<<<<
 *     NIL
 *     IS_ALPHA
*/
enum __pyx_t_5spacy_7symbols_symbol_t {
  __pyx_e_5spacy_7symbols_NIL,
  __pyx_e_5spacy_7symbols_IS_ALPHA,
  __pyx_e_5spacy_7symbols_IS_ASCII,
  __pyx_e_5spacy_7symbols_IS_DIGIT,
  __pyx_e_5spacy_7symbols_IS_LOWER,
  __pyx_e_5spacy_7symbols_IS_PUNCT,
  __pyx_e_5spacy_7symbols_IS_SPACE,
  __pyx_e_5spacy_7symbols_IS_TITLE,
  __pyx_e_5spacy_7symbols_IS_UPPER,
  __pyx_e_5spacy_7symbols_LIKE_URL,
  __pyx_e_5spacy_7symbols_LIKE_NUM,
  __pyx_e_5spacy_7symbols_LIKE_EMAIL,
  __pyx_e_5spacy_7symbols_IS_STOP,
  __pyx_e_5spacy_7symbols_IS_OOV_DEPRECATED,
  __pyx_e_5spacy_7symbols_IS_BRACKET,
  __pyx_e_5spacy_7symbols_IS_QUOTE,
  __pyx_e_5spacy_7symbols_IS_LEFT_PUNCT,
  __pyx_e_5spacy_7symbols_IS_RIGHT_PUNCT,
  __pyx_e_5spacy_7symbols_IS_CURRENCY,
  __pyx_e_5spacy_7symbols_FLAG19 = 19,
  __pyx_e_5spacy_7symbols_FLAG20,
  __pyx_e_5spacy_7symbols_FLAG21,
  __pyx_e_5spacy_7symbols_FLAG22,
  __pyx_e_5spacy_7symbols_FLAG23,
  __pyx_e_5spacy_7symbols_FLAG24,
  __pyx_e_5spacy_7symbols_FLAG25,
  __pyx_e_5spacy_7symbols_FLAG26,
  __pyx_e_5spacy_7symbols_FLAG27,
  __pyx_e_5spacy_7symbols_FLAG28,
  __pyx_e_5spacy_7symbols_FLAG29,
  __pyx_e_5spacy_7symbols_FLAG30,
  __pyx_e_5spacy_7symbols_FLAG31,
  __pyx_e_5spacy_7symbols_FLAG32,
  __pyx_e_5spacy_7symbols_FLAG33,
  __pyx_e_5spacy_7symbols_FLAG34,
  __pyx_e_5spacy_7symbols_FLAG35,
  __pyx_e_5spacy_7symbols_FLAG36,
  __pyx_e_5spacy_7symbols_FLAG37,
  __pyx_e_5spacy_7symbols_FLAG38,
  __pyx_e_5spacy_7symbols_FLAG39,
  __pyx_e_5spacy_7symbols_FLAG40,
  __pyx_e_5spacy_7symbols_FLAG41,
  __pyx_e_5spacy_7symbols_FLAG42,
  __pyx_e_5spacy_7symbols_FLAG43,
  __pyx_e_5spacy_7symbols_FLAG44,
  __pyx_e_5spacy_7symbols_FLAG45,
  __pyx_e_5spacy_7symbols_FLAG46,
  __pyx_e_5spacy_7symbols_FLAG47,
  __pyx_e_5spacy_7symbols_FLAG48,
  __pyx_e_5spacy_7symbols_FLAG49,
  __pyx_e_5spacy_7symbols_FLAG50,
  __pyx_e_5spacy_7symbols_FLAG51,
  __pyx_e_5spacy_7symbols_FLAG52,
  __pyx_e_5spacy_7symbols_FLAG53,
  __pyx_e_5spacy_7symbols_FLAG54,
  __pyx_e_5spacy_7symbols_FLAG55,
  __pyx_e_5spacy_7symbols_FLAG56,
  __pyx_e_5spacy_7symbols_FLAG57,
  __pyx_e_5spacy_7symbols_FLAG58,
  __pyx_e_5spacy_7symbols_FLAG59,
  __pyx_e_5spacy_7symbols_FLAG60,
  __pyx_e_5spacy_7symbols_FLAG61,
  __pyx_e_5spacy_7symbols_FLAG62,
  __pyx_e_5spacy_7symbols_FLAG63,
  __pyx_e_5spacy_7symbols_ID,
  __pyx_e_5spacy_7symbols_ORTH,
  __pyx_e_5spacy_7symbols_LOWER,
  __pyx_e_5spacy_7symbols_NORM,
  __pyx_e_5spacy_7symbols_SHAPE,
  __pyx_e_5spacy_7symbols_PREFIX,
  __pyx_e_5spacy_7symbols_SUFFIX,
  __pyx_e_5spacy_7symbols_LENGTH,
  __pyx_e_5spacy_7symbols_CLUSTER,
  __pyx_e_5spacy_7symbols_LEMMA,
  __pyx_e_5spacy_7symbols_POS,
  __pyx_e_5spacy_7symbols_TAG,
  __pyx_e_5spacy_7symbols_DEP,
  __pyx_e_5spacy_7symbols_ENT_IOB,
  __pyx_e_5spacy_7symbols_ENT_TYPE,
  __pyx_e_5spacy_7symbols_HEAD,
  __pyx_e_5spacy_7symbols_SENT_START,
  __pyx_e_5spacy_7symbols_SPACY,
  __pyx_e_5spacy_7symbols_PROB,
  __pyx_e_5spacy_7symbols_LANG,
  __pyx_e_5spacy_7symbols_ADJ,
  __pyx_e_5spacy_7symbols_ADP,
  __pyx_e_5spacy_7symbols_ADV,
  __pyx_e_5spacy_7symbols_AUX,
  __pyx_e_5spacy_7symbols_CONJ,
  __pyx_e_5spacy_7symbols_CCONJ,
  __pyx_e_5spacy_7symbols_DET,
  __pyx_e_5spacy_7symbols_INTJ,
  __pyx_e_5spacy_7symbols_NOUN,
  __pyx_e_5spacy_7symbols_NUM,
  __pyx_e_5spacy_7symbols_PART,
  __pyx_e_5spacy_7symbols_PRON,
  __pyx_e_5spacy_7symbols_PROPN,
  __pyx_e_5spacy_7symbols_PUNCT,
  __pyx_e_5spacy_7symbols_SCONJ,
  __pyx_e_5spacy_7symbols_SYM,
  __pyx_e_5spacy_7symbols_VERB,
  __pyx_e_5spacy_7symbols_X,
  __pyx_e_5spacy_7symbols_EOL,
  __pyx_e_5spacy_7symbols_SPACE,
  __pyx_e_5spacy_7symbols_DEPRECATED001,
  __pyx_e_5spacy_7symbols_DEPRECATED002,
  __pyx_e_5spacy_7symbols_DEPRECATED003,
  __pyx_e_5spacy_7symbols_DEPRECATED004,
  __pyx_e_5spacy_7symbols_DEPRECATED005,
  __pyx_e_5spacy_7symbols_DEPRECATED006,
  __pyx_e_5spacy_7symbols_DEPRECATED007,
  __pyx_e_5spacy_7symbols_DEPRECATED008,
  __pyx_e_5spacy_7symbols_DEPRECATED009,
  __pyx_e_5spacy_7symbols_DEPRECATED010,
  __pyx_e_5spacy_7symbols_DEPRECATED011,
  __pyx_e_5spacy_7symbols_DEPRECATED012,
  __pyx_e_5spacy_7symbols_DEPRECATED013,
  __pyx_e_5spacy_7symbols_DEPRECATED014,
  __pyx_e_5spacy_7symbols_DEPRECATED015,
  __pyx_e_5spacy_7symbols_DEPRECATED016,
  __pyx_e_5spacy_7symbols_DEPRECATED017,
  __pyx_e_5spacy_7symbols_DEPRECATED018,
  __pyx_e_5spacy_7symbols_DEPRECATED019,
  __pyx_e_5spacy_7symbols_DEPRECATED020,
  __pyx_e_5spacy_7symbols_DEPRECATED021,
  __pyx_e_5spacy_7symbols_DEPRECATED022,
  __pyx_e_5spacy_7symbols_DEPRECATED023,
  __pyx_e_5spacy_7symbols_DEPRECATED024,
  __pyx_e_5spacy_7symbols_DEPRECATED025,
  __pyx_e_5spacy_7symbols_DEPRECATED026,
  __pyx_e_5spacy_7symbols_DEPRECATED027,
  __pyx_e_5spacy_7symbols_DEPRECATED028,
  __pyx_e_5spacy_7symbols_DEPRECATED029,
  __pyx_e_5spacy_7symbols_DEPRECATED030,
  __pyx_e_5spacy_7symbols_DEPRECATED031,
  __pyx_e_5spacy_7symbols_DEPRECATED032,
  __pyx_e_5spacy_7symbols_DEPRECATED033,
  __pyx_e_5spacy_7symbols_DEPRECATED034,
  __pyx_e_5spacy_7symbols_DEPRECATED035,
  __pyx_e_5spacy_7symbols_DEPRECATED036,
  __pyx_e_5spacy_7symbols_DEPRECATED037,
  __pyx_e_5spacy_7symbols_DEPRECATED038,
  __pyx_e_5spacy_7symbols_DEPRECATED039,
  __pyx_e_5spacy_7symbols_DEPRECATED040,
  __pyx_e_5spacy_7symbols_DEPRECATED041,
  __pyx_e_5spacy_7symbols_DEPRECATED042,
  __pyx_e_5spacy_7symbols_DEPRECATED043,
  __pyx_e_5spacy_7symbols_DEPRECATED044,
  __pyx_e_5spacy_7symbols_DEPRECATED045,
  __pyx_e_5spacy_7symbols_DEPRECATED046,
  __pyx_e_5spacy_7symbols_DEPRECATED047,
  __pyx_e_5spacy_7symbols_DEPRECATED048,
  __pyx_e_5spacy_7symbols_DEPRECATED049,
  __pyx_e_5spacy_7symbols_DEPRECATED050,
  __pyx_e_5spacy_7symbols_DEPRECATED051,
  __pyx_e_5spacy_7symbols_DEPRECATED052,
  __pyx_e_5spacy_7symbols_DEPRECATED053,
  __pyx_e_5spacy_7symbols_DEPRECATED054,
  __pyx_e_5spacy_7symbols_DEPRECATED055,
  __pyx_e_5spacy_7symbols_DEPRECATED056,
  __pyx_e_5spacy_7symbols_DEPRECATED057,
  __pyx_e_5spacy_7symbols_DEPRECATED058,
  __pyx_e_5spacy_7symbols_DEPRECATED059,
  __pyx_e_5spacy_7symbols_DEPRECATED060,
  __pyx_e_5spacy_7symbols_DEPRECATED061,
  __pyx_e_5spacy_7symbols_DEPRECATED062,
  __pyx_e_5spacy_7symbols_DEPRECATED063,
  __pyx_e_5spacy_7symbols_DEPRECATED064,
  __pyx_e_5spacy_7symbols_DEPRECATED065,
  __pyx_e_5spacy_7symbols_DEPRECATED066,
  __pyx_e_5spacy_7symbols_DEPRECATED067,
  __pyx_e_5spacy_7symbols_DEPRECATED068,
  __pyx_e_5spacy_7symbols_DEPRECATED069,
  __pyx_e_5spacy_7symbols_DEPRECATED070,
  __pyx_e_5spacy_7symbols_DEPRECATED071,
  __pyx_e_5spacy_7symbols_DEPRECATED072,
  __pyx_e_5spacy_7symbols_DEPRECATED073,
  __pyx_e_5spacy_7symbols_DEPRECATED074,
  __pyx_e_5spacy_7symbols_DEPRECATED075,
  __pyx_e_5spacy_7symbols_DEPRECATED076,
  __pyx_e_5spacy_7symbols_DEPRECATED077,
  __pyx_e_5spacy_7symbols_DEPRECATED078,
  __pyx_e_5spacy_7symbols_DEPRECATED079,
  __pyx_e_5spacy_7symbols_DEPRECATED080,
  __pyx_e_5spacy_7symbols_DEPRECATED081,
  __pyx_e_5spacy_7symbols_DEPRECATED082,
  __pyx_e_5spacy_7symbols_DEPRECATED083,
  __pyx_e_5spacy_7symbols_DEPRECATED084,
  __pyx_e_5spacy_7symbols_DEPRECATED085,
  __pyx_e_5spacy_7symbols_DEPRECATED086,
  __pyx_e_5spacy_7symbols_DEPRECATED087,
  __pyx_e_5spacy_7symbols_DEPRECATED088,
  __pyx_e_5spacy_7symbols_DEPRECATED089,
  __pyx_e_5spacy_7symbols_DEPRECATED090,
  __pyx_e_5spacy_7symbols_DEPRECATED091,
  __pyx_e_5spacy_7symbols_DEPRECATED092,
  __pyx_e_5spacy_7symbols_DEPRECATED093,
  __pyx_e_5spacy_7symbols_DEPRECATED094,
  __pyx_e_5spacy_7symbols_DEPRECATED095,
  __pyx_e_5spacy_7symbols_DEPRECATED096,
  __pyx_e_5spacy_7symbols_DEPRECATED097,
  __pyx_e_5spacy_7symbols_DEPRECATED098,
  __pyx_e_5spacy_7symbols_DEPRECATED099,
  __pyx_e_5spacy_7symbols_DEPRECATED100,
  __pyx_e_5spacy_7symbols_DEPRECATED101,
  __pyx_e_5spacy_7symbols_DEPRECATED102,
  __pyx_e_5spacy_7symbols_DEPRECATED103,
  __pyx_e_5spacy_7symbols_DEPRECATED104,
  __pyx_e_5spacy_7symbols_DEPRECATED105,
  __pyx_e_5spacy_7symbols_DEPRECATED106,
  __pyx_e_5spacy_7symbols_DEPRECATED107,
  __pyx_e_5spacy_7symbols_DEPRECATED108,
  __pyx_e_5spacy_7symbols_DEPRECATED109,
  __pyx_e_5spacy_7symbols_DEPRECATED110,
  __pyx_e_5spacy_7symbols_DEPRECATED111,
  __pyx_e_5spacy_7symbols_DEPRECATED112,
  __pyx_e_5spacy_7symbols_DEPRECATED113,
  __pyx_e_5spacy_7symbols_DEPRECATED114,
  __pyx_e_5spacy_7symbols_DEPRECATED115,
  __pyx_e_5spacy_7symbols_DEPRECATED116,
  __pyx_e_5spacy_7symbols_DEPRECATED117,
  __pyx_e_5spacy_7symbols_DEPRECATED118,
  __pyx_e_5spacy_7symbols_DEPRECATED119,
  __pyx_e_5spacy_7symbols_DEPRECATED120,
  __pyx_e_5spacy_7symbols_DEPRECATED121,
  __pyx_e_5spacy_7symbols_DEPRECATED122,
  __pyx_e_5spacy_7symbols_DEPRECATED123,
  __pyx_e_5spacy_7symbols_DEPRECATED124,
  __pyx_e_5spacy_7symbols_DEPRECATED125,
  __pyx_e_5spacy_7symbols_DEPRECATED126,
  __pyx_e_5spacy_7symbols_DEPRECATED127,
  __pyx_e_5spacy_7symbols_DEPRECATED128,
  __pyx_e_5spacy_7symbols_DEPRECATED129,
  __pyx_e_5spacy_7symbols_DEPRECATED130,
  __pyx_e_5spacy_7symbols_DEPRECATED131,
  __pyx_e_5spacy_7symbols_DEPRECATED132,
  __pyx_e_5spacy_7symbols_DEPRECATED133,
  __pyx_e_5spacy_7symbols_DEPRECATED134,
  __pyx_e_5spacy_7symbols_DEPRECATED135,
  __pyx_e_5spacy_7symbols_DEPRECATED136,
  __pyx_e_5spacy_7symbols_DEPRECATED137,
  __pyx_e_5spacy_7symbols_DEPRECATED138,
  __pyx_e_5spacy_7symbols_DEPRECATED139,
  __pyx_e_5spacy_7symbols_DEPRECATED140,
  __pyx_e_5spacy_7symbols_DEPRECATED141,
  __pyx_e_5spacy_7symbols_DEPRECATED142,
  __pyx_e_5spacy_7symbols_DEPRECATED143,
  __pyx_e_5spacy_7symbols_DEPRECATED144,
  __pyx_e_5spacy_7symbols_DEPRECATED145,
  __pyx_e_5spacy_7symbols_DEPRECATED146,
  __pyx_e_5spacy_7symbols_DEPRECATED147,
  __pyx_e_5spacy_7symbols_DEPRECATED148,
  __pyx_e_5spacy_7symbols_DEPRECATED149,
  __pyx_e_5spacy_7symbols_DEPRECATED150,
  __pyx_e_5spacy_7symbols_DEPRECATED151,
  __pyx_e_5spacy_7symbols_DEPRECATED152,
  __pyx_e_5spacy_7symbols_DEPRECATED153,
  __pyx_e_5spacy_7symbols_DEPRECATED154,
  __pyx_e_5spacy_7symbols_DEPRECATED155,
  __pyx_e_5spacy_7symbols_DEPRECATED156,
  __pyx_e_5spacy_7symbols_DEPRECATED157,
  __pyx_e_5spacy_7symbols_DEPRECATED158,
  __pyx_e_5spacy_7symbols_DEPRECATED159,
  __pyx_e_5spacy_7symbols_DEPRECATED160,
  __pyx_e_5spacy_7symbols_DEPRECATED161,
  __pyx_e_5spacy_7symbols_DEPRECATED162,
  __pyx_e_5spacy_7symbols_DEPRECATED163,
  __pyx_e_5spacy_7symbols_DEPRECATED164,
  __pyx_e_5spacy_7symbols_DEPRECATED165,
  __pyx_e_5spacy_7symbols_DEPRECATED166,
  __pyx_e_5spacy_7symbols_DEPRECATED167,
  __pyx_e_5spacy_7symbols_DEPRECATED168,
  __pyx_e_5spacy_7symbols_DEPRECATED169,
  __pyx_e_5spacy_7symbols_DEPRECATED170,
  __pyx_e_5spacy_7symbols_DEPRECATED171,
  __pyx_e_5spacy_7symbols_DEPRECATED172,
  __pyx_e_5spacy_7symbols_DEPRECATED173,
  __pyx_e_5spacy_7symbols_DEPRECATED174,
  __pyx_e_5spacy_7symbols_DEPRECATED175,
  __pyx_e_5spacy_7symbols_DEPRECATED176,
  __pyx_e_5spacy_7symbols_DEPRECATED177,
  __pyx_e_5spacy_7symbols_DEPRECATED178,
  __pyx_e_5spacy_7symbols_DEPRECATED179,
  __pyx_e_5spacy_7symbols_DEPRECATED180,
  __pyx_e_5spacy_7symbols_DEPRECATED181,
  __pyx_e_5spacy_7symbols_DEPRECATED182,
  __pyx_e_5spacy_7symbols_DEPRECATED183,
  __pyx_e_5spacy_7symbols_DEPRECATED184,
  __pyx_e_5spacy_7symbols_DEPRECATED185,
  __pyx_e_5spacy_7symbols_DEPRECATED186,
  __pyx_e_5spacy_7symbols_DEPRECATED187,
  __pyx_e_5spacy_7symbols_DEPRECATED188,
  __pyx_e_5spacy_7symbols_DEPRECATED189,
  __pyx_e_5spacy_7symbols_DEPRECATED190,
  __pyx_e_5spacy_7symbols_DEPRECATED191,
  __pyx_e_5spacy_7symbols_DEPRECATED192,
  __pyx_e_5spacy_7symbols_DEPRECATED193,
  __pyx_e_5spacy_7symbols_DEPRECATED194,
  __pyx_e_5spacy_7symbols_DEPRECATED195,
  __pyx_e_5spacy_7symbols_DEPRECATED196,
  __pyx_e_5spacy_7symbols_DEPRECATED197,
  __pyx_e_5spacy_7symbols_DEPRECATED198,
  __pyx_e_5spacy_7symbols_DEPRECATED199,
  __pyx_e_5spacy_7symbols_DEPRECATED200,
  __pyx_e_5spacy_7symbols_DEPRECATED201,
  __pyx_e_5spacy_7symbols_DEPRECATED202,
  __pyx_e_5spacy_7symbols_DEPRECATED203,
  __pyx_e_5spacy_7symbols_DEPRECATED204,
  __pyx_e_5spacy_7symbols_DEPRECATED205,
  __pyx_e_5spacy_7symbols_DEPRECATED206,
  __pyx_e_5spacy_7symbols_DEPRECATED207,
  __pyx_e_5spacy_7symbols_DEPRECATED208,
  __pyx_e_5spacy_7symbols_DEPRECATED209,
  __pyx_e_5spacy_7symbols_DEPRECATED210,
  __pyx_e_5spacy_7symbols_DEPRECATED211,
  __pyx_e_5spacy_7symbols_DEPRECATED212,
  __pyx_e_5spacy_7symbols_DEPRECATED213,
  __pyx_e_5spacy_7symbols_DEPRECATED214,
  __pyx_e_5spacy_7symbols_DEPRECATED215,
  __pyx_e_5spacy_7symbols_DEPRECATED216,
  __pyx_e_5spacy_7symbols_DEPRECATED217,
  __pyx_e_5spacy_7symbols_DEPRECATED218,
  __pyx_e_5spacy_7symbols_DEPRECATED219,
  __pyx_e_5spacy_7symbols_DEPRECATED220,
  __pyx_e_5spacy_7symbols_DEPRECATED221,
  __pyx_e_5spacy_7symbols_DEPRECATED222,
  __pyx_e_5spacy_7symbols_DEPRECATED223,
  __pyx_e_5spacy_7symbols_DEPRECATED224,
  __pyx_e_5spacy_7symbols_DEPRECATED225,
  __pyx_e_5spacy_7symbols_DEPRECATED226,
  __pyx_e_5spacy_7symbols_DEPRECATED227,
  __pyx_e_5spacy_7symbols_DEPRECATED228,
  __pyx_e_5spacy_7symbols_DEPRECATED229,
  __pyx_e_5spacy_7symbols_DEPRECATED230,
  __pyx_e_5spacy_7symbols_DEPRECATED231,
  __pyx_e_5spacy_7symbols_DEPRECATED232,
  __pyx_e_5spacy_7symbols_DEPRECATED233,
  __pyx_e_5spacy_7symbols_DEPRECATED234,
  __pyx_e_5spacy_7symbols_DEPRECATED235,
  __pyx_e_5spacy_7symbols_DEPRECATED236,
  __pyx_e_5spacy_7symbols_DEPRECATED237,
  __pyx_e_5spacy_7symbols_DEPRECATED238,
  __pyx_e_5spacy_7symbols_DEPRECATED239,
  __pyx_e_5spacy_7symbols_DEPRECATED240,
  __pyx_e_5spacy_7symbols_DEPRECATED241,
  __pyx_e_5spacy_7symbols_DEPRECATED242,
  __pyx_e_5spacy_7symbols_DEPRECATED243,
  __pyx_e_5spacy_7symbols_DEPRECATED244,
  __pyx_e_5spacy_7symbols_DEPRECATED245,
  __pyx_e_5spacy_7symbols_DEPRECATED246,
  __pyx_e_5spacy_7symbols_DEPRECATED247,
  __pyx_e_5spacy_7symbols_DEPRECATED248,
  __pyx_e_5spacy_7symbols_DEPRECATED249,
  __pyx_e_5spacy_7symbols_DEPRECATED250,
  __pyx_e_5spacy_7symbols_DEPRECATED251,
  __pyx_e_5spacy_7symbols_DEPRECATED252,
  __pyx_e_5spacy_7symbols_DEPRECATED253,
  __pyx_e_5spacy_7symbols_DEPRECATED254,
  __pyx_e_5spacy_7symbols_DEPRECATED255,
  __pyx_e_5spacy_7symbols_DEPRECATED256,
  __pyx_e_5spacy_7symbols_DEPRECATED257,
  __pyx_e_5spacy_7symbols_DEPRECATED258,
  __pyx_e_5spacy_7symbols_DEPRECATED259,
  __pyx_e_5spacy_7symbols_DEPRECATED260,
  __pyx_e_5spacy_7symbols_DEPRECATED261,
  __pyx_e_5spacy_7symbols_DEPRECATED262,
  __pyx_e_5spacy_7symbols_DEPRECATED263,
  __pyx_e_5spacy_7symbols_DEPRECATED264,
  __pyx_e_5spacy_7symbols_DEPRECATED265,
  __pyx_e_5spacy_7symbols_DEPRECATED266,
  __pyx_e_5spacy_7symbols_DEPRECATED267,
  __pyx_e_5spacy_7symbols_DEPRECATED268,
  __pyx_e_5spacy_7symbols_DEPRECATED269,
  __pyx_e_5spacy_7symbols_DEPRECATED270,
  __pyx_e_5spacy_7symbols_DEPRECATED271,
  __pyx_e_5spacy_7symbols_DEPRECATED272,
  __pyx_e_5spacy_7symbols_DEPRECATED273,
  __pyx_e_5spacy_7symbols_DEPRECATED274,
  __pyx_e_5spacy_7symbols_DEPRECATED275,
  __pyx_e_5spacy_7symbols_DEPRECATED276,
  __pyx_e_5spacy_7symbols_PERSON,
  __pyx_e_5spacy_7symbols_NORP,
  __pyx_e_5spacy_7symbols_FACILITY,
  __pyx_e_5spacy_7symbols_ORG,
  __pyx_e_5spacy_7symbols_GPE,
  __pyx_e_5spacy_7symbols_LOC,
  __pyx_e_5spacy_7symbols_PRODUCT,
  __pyx_e_5spacy_7symbols_EVENT,
  __pyx_e_5spacy_7symbols_WORK_OF_ART,
  __pyx_e_5spacy_7symbols_LANGUAGE,
  __pyx_e_5spacy_7symbols_LAW,
  __pyx_e_5spacy_7symbols_DATE,
  __pyx_e_5spacy_7symbols_TIME,
  __pyx_e_5spacy_7symbols_PERCENT,
  __pyx_e_5spacy_7symbols_MONEY,
  __pyx_e_5spacy_7symbols_QUANTITY,
  __pyx_e_5spacy_7symbols_ORDINAL,
  __pyx_e_5spacy_7symbols_CARDINAL,
  __pyx_e_5spacy_7symbols_acomp,
  __pyx_e_5spacy_7symbols_advcl,
  __pyx_e_5spacy_7symbols_advmod,
  __pyx_e_5spacy_7symbols_agent,
  __pyx_e_5spacy_7symbols_amod,
  __pyx_e_5spacy_7symbols_appos,
  __pyx_e_5spacy_7symbols_attr,
  __pyx_e_5spacy_7symbols_aux,
  __pyx_e_5spacy_7symbols_auxpass,
  __pyx_e_5spacy_7symbols_cc,
  __pyx_e_5spacy_7symbols_ccomp,
  __pyx_e_5spacy_7symbols_complm,
  __pyx_e_5spacy_7symbols_conj,
  __pyx_e_5spacy_7symbols_cop,
  __pyx_e_5spacy_7symbols_csubj,
  __pyx_e_5spacy_7symbols_csubjpass,
  __pyx_e_5spacy_7symbols_dep,
  __pyx_e_5spacy_7symbols_det,
  __pyx_e_5spacy_7symbols_dobj,
  __pyx_e_5spacy_7symbols_expl,
  __pyx_e_5spacy_7symbols_hmod,
  __pyx_e_5spacy_7symbols_hyph,
  __pyx_e_5spacy_7symbols_infmod,
  __pyx_e_5spacy_7symbols_intj,
  __pyx_e_5spacy_7symbols_iobj,
  __pyx_e_5spacy_7symbols_mark,
  __pyx_e_5spacy_7symbols_meta,
  __pyx_e_5spacy_7symbols_neg,
  __pyx_e_5spacy_7symbols_nmod,
  __pyx_e_5spacy_7symbols_nn,
  __pyx_e_5spacy_7symbols_npadvmod,
  __pyx_e_5spacy_7symbols_nsubj,
  __pyx_e_5spacy_7symbols_nsubjpass,
  __pyx_e_5spacy_7symbols_num,
  __pyx_e_5spacy_7symbols_number,
  __pyx_e_5spacy_7symbols_oprd,
  __pyx_e_5spacy_7symbols_obj,
  __pyx_e_5spacy_7symbols_obl,
  __pyx_e_5spacy_7symbols_parataxis,
  __pyx_e_5spacy_7symbols_partmod,
  __pyx_e_5spacy_7symbols_pcomp,
  __pyx_e_5spacy_7symbols_pobj,
  __pyx_e_5spacy_7symbols_poss,
  __pyx_e_5spacy_7symbols_possessive,
  __pyx_e_5spacy_7symbols_preconj,
  __pyx_e_5spacy_7symbols_prep,
  __pyx_e_5spacy_7symbols_prt,
  __pyx_e_5spacy_7symbols_punct,
  __pyx_e_5spacy_7symbols_quantmod,
  __pyx_e_5spacy_7symbols_relcl,
  __pyx_e_5spacy_7symbols_rcmod,
  __pyx_e_5spacy_7symbols_root,
  __pyx_e_5spacy_7symbols_xcomp,
  __pyx_e_5spacy_7symbols_acl,
  __pyx_e_5spacy_7symbols_ENT_KB_ID,
  __pyx_e_5spacy_7symbols_MORPH,
  __pyx_e_5spacy_7symbols_ENT_ID,
  __pyx_e_5spacy_7symbols_IDX,
  __pyx_e_5spacy_7symbols__
};
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
#endif
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_ArgRef_VARARGS(args, i) __Pyx_PySequence_ITEM(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_ArgRef_VARARGS(args, i) __Pyx_NewRef(__Pyx_PyTuple_GET_ITEM(args, i))
#else
    #define __Pyx_ArgRef_VARARGS(args, i) __Pyx_XNewRef(PyTuple_GetItem(args, i))
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_ArgRef_FASTCALL(args, i) __Pyx_NewRef(args[i])
    #define __Pyx_NumKwargs_FASTCALL(kwds) __Pyx_PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
#else
    #define __Pyx_ArgRef_FASTCALL __Pyx_ArgRef_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
#endif
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#if CYTHON_METH_FASTCALL || (CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(args + start, stop - start)
#else
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static CYTHON_INLINE int __Pyx_ParseKeywords(
    PyObject *kwds, PyObject *const *kwvalues, PyObject ** const argnames[],
    PyObject *kwds2, PyObject *values[],
    Py_ssize_t num_pos_args, Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs
);

/* CallCFunction.proto */
#define __Pyx_CallCFunction(cfunc, self, args)\
    ((PyCFunction)(void(*)(void))(cfunc)->func)(self, args)
#define __Pyx_CallCFunctionWithKeywords(cfunc, self, args, kwargs)\
    ((PyCFunctionWithKeywords)(void(*)(void))(cfunc)->func)(self, args, kwargs)
#define __Pyx_CallCFunctionFast(cfunc, self, args, nargs)\
    ((__Pyx_PyCFunctionFast)(void(*)(void))(PyCFunction)(cfunc)->func)(self, args, nargs)
#define __Pyx_CallCFunctionFastWithKeywords(cfunc, self, args, nargs, kwnames)\
    ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))(PyCFunction)(cfunc)->func)(self, args, nargs, kwnames)

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && CYTHON_ATOMICS
    __pyx_atomic_int_type initialized;
#endif
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
static CYTHON_INLINE int __Pyx_CachedCFunction_GetAndSetInitializing(__Pyx_CachedCFunction *cfunc) {
#if !CYTHON_ATOMICS
    return 1;
#else
    __pyx_nonatomic_int_type expected = 0;
    if (__pyx_atomic_int_cmp_exchange(&cfunc->initialized, &expected, 1)) {
        return 0;
    }
    return expected;
#endif
}
static CYTHON_INLINE void __Pyx_CachedCFunction_SetFinishedInitializing(__Pyx_CachedCFunction *cfunc) {
#if CYTHON_ATOMICS
    __pyx_atomic_store(&cfunc->initialized, 2);
#endif
}
#else
#define __Pyx_CachedCFunction_GetAndSetInitializing(cfunc) 2
#define __Pyx_CachedCFunction_SetFinishedInitializing(cfunc)
#endif

/* CallUnboundCMethod2.proto */
CYTHON_UNUSED
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* FixUpExtensionType.proto */
static CYTHON_INLINE int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* dict_setdefault.proto */
static CYTHON_INLINE PyObject *__Pyx_PyDict_SetDefault(PyObject *d, PyObject *key, PyObject *default_value, int is_safe_type);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);

/* CallTypeTraverse.proto */
#if !CYTHON_USE_TYPE_SPECS || (!CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x03090000)
#define __Pyx_call_type_traverse(o, always_call, visit, arg) 0
#else
static int __Pyx_call_type_traverse(PyObject *o, int always_call, visitproc visit, void *arg);
#endif

/* PyMethodNew.proto */
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ);

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL ||\
        (CYTHON_COMPILING_IN_LIMITED_API && CYTHON_METH_FASTCALL)
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    PyObject *defaults;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_mstate_global->__pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_mstate_global->__pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_mstate_global->__pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void (*cfunc)(void));
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE PyObject *__Pyx_CyFunction_InitDefaults(PyObject *func,
                                                         PyTypeObject *defaults_type);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_mstate_global->__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectVectorCallKwBuilder.proto */
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);
#if CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03090000
#define __Pyx_Object_Vectorcall_CallFromBuilder PyObject_Vectorcall
#else
#define __Pyx_Object_Vectorcall_CallFromBuilder _PyObject_Vectorcall
#endif
#define __Pyx_MakeVectorcallBuilderKwds(n) PyTuple_New(n)
static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);
static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n);
#else
#define __Pyx_Object_Vectorcall_CallFromBuilder __Pyx_PyObject_FastCallDict
#define __Pyx_MakeVectorcallBuilderKwds(n) __Pyx_PyDict_NewPresized(n)
#define __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n) PyDict_SetItem(builder, key, value)
#define __Pyx_VectorcallBuilder_AddArgStr(key, value, builder, args, n) PyDict_SetItemString(builder, key, value)
#endif

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectFastCallMethod.proto */
#if CYTHON_VECTORCALL && PY_VERSION_HEX >= 0x03090000
#define __Pyx_PyObject_FastCallMethod(name, args, nargsf) PyObject_VectorcallMethod(name, args, nargsf, NULL)
#else
static PyObject *__Pyx_PyObject_FastCallMethod(PyObject *name, PyObject *const *args, size_t nargsf);
#endif

/* CLineInTraceback.proto */
#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#else
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#endif

/* CodeObjectCache.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject __Pyx_CachedCodeObjectType;
#else
typedef PyCodeObject __Pyx_CachedCodeObjectType;
#endif
typedef struct {
    __Pyx_CachedCodeObjectType* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_int_type accessor_count;
  #endif
};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(enum __pyx_t_5spacy_7symbols_symbol_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_PyType_GetFullyQualifiedName PyType_GetFullyQualifiedName
#else
static __Pyx_TypeName __Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp);
#endif
#else  // !LIMITED_API
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetFullyQualifiedName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2) {
    return PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2);
}
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#ifdef PyExceptionInstance_Check
  #define __Pyx_PyBaseException_Check(obj) PyExceptionInstance_Check(obj)
#else
  #define __Pyx_PyBaseException_Check(obj) __Pyx_TypeCheck(obj, PyExc_BaseException)
#endif

/* GetRuntimeVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* MultiPhaseInitModuleState.proto */
#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE
static PyObject *__Pyx_State_FindModule(void*);
static int __Pyx_State_AddModule(PyObject* module, void*);
static int __Pyx_State_RemoveModule(void*);
#elif CYTHON_USE_MODULE_STATE
#define __Pyx_State_FindModule PyState_FindModule
#define __Pyx_State_AddModule PyState_AddModule
#define __Pyx_State_RemoveModule PyState_RemoveModule
#endif

/* #### Code section: module_declarations ### */
/* CythonABIVersion.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
    #if CYTHON_METH_FASTCALL
        #define __PYX_FASTCALL_ABI_SUFFIX  "_fastcall"
    #else
        #define __PYX_FASTCALL_ABI_SUFFIX
    #endif
    #define __PYX_LIMITED_ABI_SUFFIX "limited" __PYX_FASTCALL_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX
#else
    #define __PYX_LIMITED_ABI_SUFFIX
#endif
#if __PYX_HAS_PY_AM_SEND == 1
    #define __PYX_AM_SEND_ABI_SUFFIX
#elif __PYX_HAS_PY_AM_SEND == 2
    #define __PYX_AM_SEND_ABI_SUFFIX "amsendbackport"
#else
    #define __PYX_AM_SEND_ABI_SUFFIX "noamsend"
#endif
#ifndef __PYX_MONITORING_ABI_SUFFIX
    #define __PYX_MONITORING_ABI_SUFFIX
#endif
#if CYTHON_USE_TP_FINALIZE
    #define __PYX_TP_FINALIZE_ABI_SUFFIX
#else
    #define __PYX_TP_FINALIZE_ABI_SUFFIX "nofinalize"
#endif
#if CYTHON_USE_FREELISTS || !defined(__Pyx_AsyncGen_USED)
    #define __PYX_FREELISTS_ABI_SUFFIX
#else
    #define __PYX_FREELISTS_ABI_SUFFIX "nofreelists"
#endif
#define CYTHON_ABI  __PYX_ABI_VERSION __PYX_LIMITED_ABI_SUFFIX __PYX_MONITORING_ABI_SUFFIX __PYX_TP_FINALIZE_ABI_SUFFIX __PYX_FREELISTS_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."


/* Module declarations from "spacy.symbols" */
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "spacy.symbols"
extern int __pyx_module_is_main_spacy__symbols;
int __pyx_module_is_main_spacy__symbols = 0;

/* Implementation of "spacy.symbols" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_sorted;
/* #### Code section: string_decls ### */
static const char __pyx_k_[] = "";
static const char __pyx_k_X[] = "X";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_ID[] = "ID";
static const char __pyx_k__2[] = "_";
static const char __pyx_k__3[] = "?";
static const char __pyx_k_cc[] = "cc";
static const char __pyx_k_it[] = "it";
static const char __pyx_k_nn[] = "nn";
static const char __pyx_k_1AQ[] = "\200\001\330\004\013\2101\210A\210Q";
static const char __pyx_k_ADJ[] = "ADJ";
static const char __pyx_k_ADP[] = "ADP";
static const char __pyx_k_ADV[] = "ADV";
static const char __pyx_k_AUX[] = "AUX";
static const char __pyx_k_DEP[] = "DEP";
static const char __pyx_k_DET[] = "DET";
static const char __pyx_k_EOL[] = "EOL";
static const char __pyx_k_GPE[] = "GPE";
static const char __pyx_k_IDS[] = "IDS";
static const char __pyx_k_IDX[] = "IDX";
static const char __pyx_k_LAW[] = "LAW";
static const char __pyx_k_LOC[] = "LOC";
static const char __pyx_k_NUM[] = "NUM";
static const char __pyx_k_ORG[] = "ORG";
static const char __pyx_k_POS[] = "POS";
static const char __pyx_k_SYM[] = "SYM";
static const char __pyx_k_TAG[] = "TAG";
static const char __pyx_k_acl[] = "acl";
static const char __pyx_k_aux[] = "aux";
static const char __pyx_k_cop[] = "cop";
static const char __pyx_k_dep[] = "dep";
static const char __pyx_k_det[] = "det";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_neg[] = "neg";
static const char __pyx_k_num[] = "num";
static const char __pyx_k_obj[] = "obj";
static const char __pyx_k_obl[] = "obl";
static const char __pyx_k_pop[] = "pop";
static const char __pyx_k_prt[] = "prt";
static const char __pyx_k_CONJ[] = "CONJ";
static const char __pyx_k_DATE[] = "DATE";
static const char __pyx_k_HEAD[] = "HEAD";
static const char __pyx_k_INTJ[] = "INTJ";
static const char __pyx_k_LANG[] = "LANG";
static const char __pyx_k_NORM[] = "NORM";
static const char __pyx_k_NORP[] = "NORP";
static const char __pyx_k_NOUN[] = "NOUN";
static const char __pyx_k_ORTH[] = "ORTH";
static const char __pyx_k_PART[] = "PART";
static const char __pyx_k_PROB[] = "PROB";
static const char __pyx_k_PRON[] = "PRON";
static const char __pyx_k_TIME[] = "TIME";
static const char __pyx_k_VERB[] = "VERB";
static const char __pyx_k_amod[] = "amod";
static const char __pyx_k_attr[] = "attr";
static const char __pyx_k_conj[] = "conj";
static const char __pyx_k_dobj[] = "dobj";
static const char __pyx_k_expl[] = "expl";
static const char __pyx_k_func[] = "__func__";
static const char __pyx_k_hmod[] = "hmod";
static const char __pyx_k_hyph[] = "hyph";
static const char __pyx_k_intj[] = "intj";
static const char __pyx_k_iobj[] = "iobj";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mark[] = "mark";
static const char __pyx_k_meta[] = "meta";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_nmod[] = "nmod";
static const char __pyx_k_oprd[] = "oprd";
static const char __pyx_k_pobj[] = "pobj";
static const char __pyx_k_poss[] = "poss";
static const char __pyx_k_prep[] = "prep";
static const char __pyx_k_root[] = "root";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_CCONJ[] = "CCONJ";
static const char __pyx_k_EVENT[] = "EVENT";
static const char __pyx_k_LEMMA[] = "LEMMA";
static const char __pyx_k_LOWER[] = "LOWER";
static const char __pyx_k_MONEY[] = "MONEY";
static const char __pyx_k_MORPH[] = "MORPH";
static const char __pyx_k_NAMES[] = "NAMES";
static const char __pyx_k_PROPN[] = "PROPN";
static const char __pyx_k_PUNCT[] = "PUNCT";
static const char __pyx_k_SCONJ[] = "SCONJ";
static const char __pyx_k_SHAPE[] = "SHAPE";
static const char __pyx_k_SPACE[] = "SPACE";
static const char __pyx_k_SPACY[] = "SPACY";
static const char __pyx_k_acomp[] = "acomp";
static const char __pyx_k_advcl[] = "advcl";
static const char __pyx_k_agent[] = "agent";
static const char __pyx_k_appos[] = "appos";
static const char __pyx_k_ccomp[] = "ccomp";
static const char __pyx_k_csubj[] = "csubj";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_nsubj[] = "nsubj";
static const char __pyx_k_pcomp[] = "pcomp";
static const char __pyx_k_punct[] = "punct";
static const char __pyx_k_rcmod[] = "rcmod";
static const char __pyx_k_relcl[] = "relcl";
static const char __pyx_k_xcomp[] = "xcomp";
static const char __pyx_k_ENT_ID[] = "ENT_ID";
static const char __pyx_k_FLAG19[] = "FLAG19";
static const char __pyx_k_FLAG20[] = "FLAG20";
static const char __pyx_k_FLAG21[] = "FLAG21";
static const char __pyx_k_FLAG22[] = "FLAG22";
static const char __pyx_k_FLAG23[] = "FLAG23";
static const char __pyx_k_FLAG24[] = "FLAG24";
static const char __pyx_k_FLAG25[] = "FLAG25";
static const char __pyx_k_FLAG26[] = "FLAG26";
static const char __pyx_k_FLAG27[] = "FLAG27";
static const char __pyx_k_FLAG28[] = "FLAG28";
static const char __pyx_k_FLAG29[] = "FLAG29";
static const char __pyx_k_FLAG30[] = "FLAG30";
static const char __pyx_k_FLAG31[] = "FLAG31";
static const char __pyx_k_FLAG32[] = "FLAG32";
static const char __pyx_k_FLAG33[] = "FLAG33";
static const char __pyx_k_FLAG34[] = "FLAG34";
static const char __pyx_k_FLAG35[] = "FLAG35";
static const char __pyx_k_FLAG36[] = "FLAG36";
static const char __pyx_k_FLAG37[] = "FLAG37";
static const char __pyx_k_FLAG38[] = "FLAG38";
static const char __pyx_k_FLAG39[] = "FLAG39";
static const char __pyx_k_FLAG40[] = "FLAG40";
static const char __pyx_k_FLAG41[] = "FLAG41";
static const char __pyx_k_FLAG42[] = "FLAG42";
static const char __pyx_k_FLAG43[] = "FLAG43";
static const char __pyx_k_FLAG44[] = "FLAG44";
static const char __pyx_k_FLAG45[] = "FLAG45";
static const char __pyx_k_FLAG46[] = "FLAG46";
static const char __pyx_k_FLAG47[] = "FLAG47";
static const char __pyx_k_FLAG48[] = "FLAG48";
static const char __pyx_k_FLAG49[] = "FLAG49";
static const char __pyx_k_FLAG50[] = "FLAG50";
static const char __pyx_k_FLAG51[] = "FLAG51";
static const char __pyx_k_FLAG52[] = "FLAG52";
static const char __pyx_k_FLAG53[] = "FLAG53";
static const char __pyx_k_FLAG54[] = "FLAG54";
static const char __pyx_k_FLAG55[] = "FLAG55";
static const char __pyx_k_FLAG56[] = "FLAG56";
static const char __pyx_k_FLAG57[] = "FLAG57";
static const char __pyx_k_FLAG58[] = "FLAG58";
static const char __pyx_k_FLAG59[] = "FLAG59";
static const char __pyx_k_FLAG60[] = "FLAG60";
static const char __pyx_k_FLAG61[] = "FLAG61";
static const char __pyx_k_FLAG62[] = "FLAG62";
static const char __pyx_k_FLAG63[] = "FLAG63";
static const char __pyx_k_LENGTH[] = "LENGTH";
static const char __pyx_k_PERSON[] = "PERSON";
static const char __pyx_k_PREFIX[] = "PREFIX";
static const char __pyx_k_SUFFIX[] = "SUFFIX";
static const char __pyx_k_advmod[] = "advmod";
static const char __pyx_k_complm[] = "complm";
static const char __pyx_k_infmod[] = "infmod";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_number[] = "number";
static const char __pyx_k_sorted[] = "sorted";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_CLUSTER[] = "CLUSTER";
static const char __pyx_k_ENT_IOB[] = "ENT_IOB";
static const char __pyx_k_IS_STOP[] = "IS_STOP";
static const char __pyx_k_ORDINAL[] = "ORDINAL";
static const char __pyx_k_PERCENT[] = "PERCENT";
static const char __pyx_k_PRODUCT[] = "PRODUCT";
static const char __pyx_k_auxpass[] = "auxpass";
static const char __pyx_k_partmod[] = "partmod";
static const char __pyx_k_preconj[] = "preconj";
static const char __pyx_k_CARDINAL[] = "CARDINAL";
static const char __pyx_k_ENT_TYPE[] = "ENT_TYPE";
static const char __pyx_k_FACILITY[] = "FACILITY";
static const char __pyx_k_IS_ALPHA[] = "IS_ALPHA";
static const char __pyx_k_IS_ASCII[] = "IS_ASCII";
static const char __pyx_k_IS_DIGIT[] = "IS_DIGIT";
static const char __pyx_k_IS_LOWER[] = "IS_LOWER";
static const char __pyx_k_IS_PUNCT[] = "IS_PUNCT";
static const char __pyx_k_IS_QUOTE[] = "IS_QUOTE";
static const char __pyx_k_IS_SPACE[] = "IS_SPACE";
static const char __pyx_k_IS_TITLE[] = "IS_TITLE";
static const char __pyx_k_IS_UPPER[] = "IS_UPPER";
static const char __pyx_k_LANGUAGE[] = "LANGUAGE";
static const char __pyx_k_LIKE_NUM[] = "LIKE_NUM";
static const char __pyx_k_LIKE_URL[] = "LIKE_URL";
static const char __pyx_k_QUANTITY[] = "QUANTITY";
static const char __pyx_k_npadvmod[] = "npadvmod";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_quantmod[] = "quantmod";
static const char __pyx_k_ENT_KB_ID[] = "ENT_KB_ID";
static const char __pyx_k_csubjpass[] = "csubjpass";
static const char __pyx_k_nsubjpass[] = "nsubjpass";
static const char __pyx_k_parataxis[] = "parataxis";
static const char __pyx_k_sort_nums[] = "sort_nums";
static const char __pyx_k_IS_BRACKET[] = "IS_BRACKET";
static const char __pyx_k_LIKE_EMAIL[] = "LIKE_EMAIL";
static const char __pyx_k_SENT_START[] = "SENT_START";
static const char __pyx_k_possessive[] = "possessive";
static const char __pyx_k_IS_CURRENCY[] = "IS_CURRENCY";
static const char __pyx_k_WORK_OF_ART[] = "WORK_OF_ART";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_DEPRECATED001[] = "DEPRECATED001";
static const char __pyx_k_DEPRECATED002[] = "DEPRECATED002";
static const char __pyx_k_DEPRECATED003[] = "DEPRECATED003";
static const char __pyx_k_DEPRECATED004[] = "DEPRECATED004";
static const char __pyx_k_DEPRECATED005[] = "DEPRECATED005";
static const char __pyx_k_DEPRECATED006[] = "DEPRECATED006";
static const char __pyx_k_DEPRECATED007[] = "DEPRECATED007";
static const char __pyx_k_DEPRECATED008[] = "DEPRECATED008";
static const char __pyx_k_DEPRECATED009[] = "DEPRECATED009";
static const char __pyx_k_DEPRECATED010[] = "DEPRECATED010";
static const char __pyx_k_DEPRECATED011[] = "DEPRECATED011";
static const char __pyx_k_DEPRECATED012[] = "DEPRECATED012";
static const char __pyx_k_DEPRECATED013[] = "DEPRECATED013";
static const char __pyx_k_DEPRECATED014[] = "DEPRECATED014";
static const char __pyx_k_DEPRECATED015[] = "DEPRECATED015";
static const char __pyx_k_DEPRECATED016[] = "DEPRECATED016";
static const char __pyx_k_DEPRECATED017[] = "DEPRECATED017";
static const char __pyx_k_DEPRECATED018[] = "DEPRECATED018";
static const char __pyx_k_DEPRECATED019[] = "DEPRECATED019";
static const char __pyx_k_DEPRECATED020[] = "DEPRECATED020";
static const char __pyx_k_DEPRECATED021[] = "DEPRECATED021";
static const char __pyx_k_DEPRECATED022[] = "DEPRECATED022";
static const char __pyx_k_DEPRECATED023[] = "DEPRECATED023";
static const char __pyx_k_DEPRECATED024[] = "DEPRECATED024";
static const char __pyx_k_DEPRECATED025[] = "DEPRECATED025";
static const char __pyx_k_DEPRECATED026[] = "DEPRECATED026";
static const char __pyx_k_DEPRECATED027[] = "DEPRECATED027";
static const char __pyx_k_DEPRECATED028[] = "DEPRECATED028";
static const char __pyx_k_DEPRECATED029[] = "DEPRECATED029";
static const char __pyx_k_DEPRECATED030[] = "DEPRECATED030";
static const char __pyx_k_DEPRECATED031[] = "DEPRECATED031";
static const char __pyx_k_DEPRECATED032[] = "DEPRECATED032";
static const char __pyx_k_DEPRECATED033[] = "DEPRECATED033";
static const char __pyx_k_DEPRECATED034[] = "DEPRECATED034";
static const char __pyx_k_DEPRECATED035[] = "DEPRECATED035";
static const char __pyx_k_DEPRECATED036[] = "DEPRECATED036";
static const char __pyx_k_DEPRECATED037[] = "DEPRECATED037";
static const char __pyx_k_DEPRECATED038[] = "DEPRECATED038";
static const char __pyx_k_DEPRECATED039[] = "DEPRECATED039";
static const char __pyx_k_DEPRECATED040[] = "DEPRECATED040";
static const char __pyx_k_DEPRECATED041[] = "DEPRECATED041";
static const char __pyx_k_DEPRECATED042[] = "DEPRECATED042";
static const char __pyx_k_DEPRECATED043[] = "DEPRECATED043";
static const char __pyx_k_DEPRECATED044[] = "DEPRECATED044";
static const char __pyx_k_DEPRECATED045[] = "DEPRECATED045";
static const char __pyx_k_DEPRECATED046[] = "DEPRECATED046";
static const char __pyx_k_DEPRECATED047[] = "DEPRECATED047";
static const char __pyx_k_DEPRECATED048[] = "DEPRECATED048";
static const char __pyx_k_DEPRECATED049[] = "DEPRECATED049";
static const char __pyx_k_DEPRECATED050[] = "DEPRECATED050";
static const char __pyx_k_DEPRECATED051[] = "DEPRECATED051";
static const char __pyx_k_DEPRECATED052[] = "DEPRECATED052";
static const char __pyx_k_DEPRECATED053[] = "DEPRECATED053";
static const char __pyx_k_DEPRECATED054[] = "DEPRECATED054";
static const char __pyx_k_DEPRECATED055[] = "DEPRECATED055";
static const char __pyx_k_DEPRECATED056[] = "DEPRECATED056";
static const char __pyx_k_DEPRECATED057[] = "DEPRECATED057";
static const char __pyx_k_DEPRECATED058[] = "DEPRECATED058";
static const char __pyx_k_DEPRECATED059[] = "DEPRECATED059";
static const char __pyx_k_DEPRECATED060[] = "DEPRECATED060";
static const char __pyx_k_DEPRECATED061[] = "DEPRECATED061";
static const char __pyx_k_DEPRECATED062[] = "DEPRECATED062";
static const char __pyx_k_DEPRECATED063[] = "DEPRECATED063";
static const char __pyx_k_DEPRECATED064[] = "DEPRECATED064";
static const char __pyx_k_DEPRECATED065[] = "DEPRECATED065";
static const char __pyx_k_DEPRECATED066[] = "DEPRECATED066";
static const char __pyx_k_DEPRECATED067[] = "DEPRECATED067";
static const char __pyx_k_DEPRECATED068[] = "DEPRECATED068";
static const char __pyx_k_DEPRECATED069[] = "DEPRECATED069";
static const char __pyx_k_DEPRECATED070[] = "DEPRECATED070";
static const char __pyx_k_DEPRECATED071[] = "DEPRECATED071";
static const char __pyx_k_DEPRECATED072[] = "DEPRECATED072";
static const char __pyx_k_DEPRECATED073[] = "DEPRECATED073";
static const char __pyx_k_DEPRECATED074[] = "DEPRECATED074";
static const char __pyx_k_DEPRECATED075[] = "DEPRECATED075";
static const char __pyx_k_DEPRECATED076[] = "DEPRECATED076";
static const char __pyx_k_DEPRECATED077[] = "DEPRECATED077";
static const char __pyx_k_DEPRECATED078[] = "DEPRECATED078";
static const char __pyx_k_DEPRECATED079[] = "DEPRECATED079";
static const char __pyx_k_DEPRECATED080[] = "DEPRECATED080";
static const char __pyx_k_DEPRECATED081[] = "DEPRECATED081";
static const char __pyx_k_DEPRECATED082[] = "DEPRECATED082";
static const char __pyx_k_DEPRECATED083[] = "DEPRECATED083";
static const char __pyx_k_DEPRECATED084[] = "DEPRECATED084";
static const char __pyx_k_DEPRECATED085[] = "DEPRECATED085";
static const char __pyx_k_DEPRECATED086[] = "DEPRECATED086";
static const char __pyx_k_DEPRECATED087[] = "DEPRECATED087";
static const char __pyx_k_DEPRECATED088[] = "DEPRECATED088";
static const char __pyx_k_DEPRECATED089[] = "DEPRECATED089";
static const char __pyx_k_DEPRECATED090[] = "DEPRECATED090";
static const char __pyx_k_DEPRECATED091[] = "DEPRECATED091";
static const char __pyx_k_DEPRECATED092[] = "DEPRECATED092";
static const char __pyx_k_DEPRECATED093[] = "DEPRECATED093";
static const char __pyx_k_DEPRECATED094[] = "DEPRECATED094";
static const char __pyx_k_DEPRECATED095[] = "DEPRECATED095";
static const char __pyx_k_DEPRECATED096[] = "DEPRECATED096";
static const char __pyx_k_DEPRECATED097[] = "DEPRECATED097";
static const char __pyx_k_DEPRECATED098[] = "DEPRECATED098";
static const char __pyx_k_DEPRECATED099[] = "DEPRECATED099";
static const char __pyx_k_DEPRECATED100[] = "DEPRECATED100";
static const char __pyx_k_DEPRECATED101[] = "DEPRECATED101";
static const char __pyx_k_DEPRECATED102[] = "DEPRECATED102";
static const char __pyx_k_DEPRECATED103[] = "DEPRECATED103";
static const char __pyx_k_DEPRECATED104[] = "DEPRECATED104";
static const char __pyx_k_DEPRECATED105[] = "DEPRECATED105";
static const char __pyx_k_DEPRECATED106[] = "DEPRECATED106";
static const char __pyx_k_DEPRECATED107[] = "DEPRECATED107";
static const char __pyx_k_DEPRECATED108[] = "DEPRECATED108";
static const char __pyx_k_DEPRECATED109[] = "DEPRECATED109";
static const char __pyx_k_DEPRECATED110[] = "DEPRECATED110";
static const char __pyx_k_DEPRECATED111[] = "DEPRECATED111";
static const char __pyx_k_DEPRECATED112[] = "DEPRECATED112";
static const char __pyx_k_DEPRECATED113[] = "DEPRECATED113";
static const char __pyx_k_DEPRECATED114[] = "DEPRECATED114";
static const char __pyx_k_DEPRECATED115[] = "DEPRECATED115";
static const char __pyx_k_DEPRECATED116[] = "DEPRECATED116";
static const char __pyx_k_DEPRECATED117[] = "DEPRECATED117";
static const char __pyx_k_DEPRECATED118[] = "DEPRECATED118";
static const char __pyx_k_DEPRECATED119[] = "DEPRECATED119";
static const char __pyx_k_DEPRECATED120[] = "DEPRECATED120";
static const char __pyx_k_DEPRECATED121[] = "DEPRECATED121";
static const char __pyx_k_DEPRECATED122[] = "DEPRECATED122";
static const char __pyx_k_DEPRECATED123[] = "DEPRECATED123";
static const char __pyx_k_DEPRECATED124[] = "DEPRECATED124";
static const char __pyx_k_DEPRECATED125[] = "DEPRECATED125";
static const char __pyx_k_DEPRECATED126[] = "DEPRECATED126";
static const char __pyx_k_DEPRECATED127[] = "DEPRECATED127";
static const char __pyx_k_DEPRECATED128[] = "DEPRECATED128";
static const char __pyx_k_DEPRECATED129[] = "DEPRECATED129";
static const char __pyx_k_DEPRECATED130[] = "DEPRECATED130";
static const char __pyx_k_DEPRECATED131[] = "DEPRECATED131";
static const char __pyx_k_DEPRECATED132[] = "DEPRECATED132";
static const char __pyx_k_DEPRECATED133[] = "DEPRECATED133";
static const char __pyx_k_DEPRECATED134[] = "DEPRECATED134";
static const char __pyx_k_DEPRECATED135[] = "DEPRECATED135";
static const char __pyx_k_DEPRECATED136[] = "DEPRECATED136";
static const char __pyx_k_DEPRECATED137[] = "DEPRECATED137";
static const char __pyx_k_DEPRECATED138[] = "DEPRECATED138";
static const char __pyx_k_DEPRECATED139[] = "DEPRECATED139";
static const char __pyx_k_DEPRECATED140[] = "DEPRECATED140";
static const char __pyx_k_DEPRECATED141[] = "DEPRECATED141";
static const char __pyx_k_DEPRECATED142[] = "DEPRECATED142";
static const char __pyx_k_DEPRECATED143[] = "DEPRECATED143";
static const char __pyx_k_DEPRECATED144[] = "DEPRECATED144";
static const char __pyx_k_DEPRECATED145[] = "DEPRECATED145";
static const char __pyx_k_DEPRECATED146[] = "DEPRECATED146";
static const char __pyx_k_DEPRECATED147[] = "DEPRECATED147";
static const char __pyx_k_DEPRECATED148[] = "DEPRECATED148";
static const char __pyx_k_DEPRECATED149[] = "DEPRECATED149";
static const char __pyx_k_DEPRECATED150[] = "DEPRECATED150";
static const char __pyx_k_DEPRECATED151[] = "DEPRECATED151";
static const char __pyx_k_DEPRECATED152[] = "DEPRECATED152";
static const char __pyx_k_DEPRECATED153[] = "DEPRECATED153";
static const char __pyx_k_DEPRECATED154[] = "DEPRECATED154";
static const char __pyx_k_DEPRECATED155[] = "DEPRECATED155";
static const char __pyx_k_DEPRECATED156[] = "DEPRECATED156";
static const char __pyx_k_DEPRECATED157[] = "DEPRECATED157";
static const char __pyx_k_DEPRECATED158[] = "DEPRECATED158";
static const char __pyx_k_DEPRECATED159[] = "DEPRECATED159";
static const char __pyx_k_DEPRECATED160[] = "DEPRECATED160";
static const char __pyx_k_DEPRECATED161[] = "DEPRECATED161";
static const char __pyx_k_DEPRECATED162[] = "DEPRECATED162";
static const char __pyx_k_DEPRECATED163[] = "DEPRECATED163";
static const char __pyx_k_DEPRECATED164[] = "DEPRECATED164";
static const char __pyx_k_DEPRECATED165[] = "DEPRECATED165";
static const char __pyx_k_DEPRECATED166[] = "DEPRECATED166";
static const char __pyx_k_DEPRECATED167[] = "DEPRECATED167";
static const char __pyx_k_DEPRECATED168[] = "DEPRECATED168";
static const char __pyx_k_DEPRECATED169[] = "DEPRECATED169";
static const char __pyx_k_DEPRECATED170[] = "DEPRECATED170";
static const char __pyx_k_DEPRECATED171[] = "DEPRECATED171";
static const char __pyx_k_DEPRECATED172[] = "DEPRECATED172";
static const char __pyx_k_DEPRECATED173[] = "DEPRECATED173";
static const char __pyx_k_DEPRECATED174[] = "DEPRECATED174";
static const char __pyx_k_DEPRECATED175[] = "DEPRECATED175";
static const char __pyx_k_DEPRECATED176[] = "DEPRECATED176";
static const char __pyx_k_DEPRECATED177[] = "DEPRECATED177";
static const char __pyx_k_DEPRECATED178[] = "DEPRECATED178";
static const char __pyx_k_DEPRECATED179[] = "DEPRECATED179";
static const char __pyx_k_DEPRECATED180[] = "DEPRECATED180";
static const char __pyx_k_DEPRECATED181[] = "DEPRECATED181";
static const char __pyx_k_DEPRECATED182[] = "DEPRECATED182";
static const char __pyx_k_DEPRECATED183[] = "DEPRECATED183";
static const char __pyx_k_DEPRECATED184[] = "DEPRECATED184";
static const char __pyx_k_DEPRECATED185[] = "DEPRECATED185";
static const char __pyx_k_DEPRECATED186[] = "DEPRECATED186";
static const char __pyx_k_DEPRECATED187[] = "DEPRECATED187";
static const char __pyx_k_DEPRECATED188[] = "DEPRECATED188";
static const char __pyx_k_DEPRECATED189[] = "DEPRECATED189";
static const char __pyx_k_DEPRECATED190[] = "DEPRECATED190";
static const char __pyx_k_DEPRECATED191[] = "DEPRECATED191";
static const char __pyx_k_DEPRECATED192[] = "DEPRECATED192";
static const char __pyx_k_DEPRECATED193[] = "DEPRECATED193";
static const char __pyx_k_DEPRECATED194[] = "DEPRECATED194";
static const char __pyx_k_DEPRECATED195[] = "DEPRECATED195";
static const char __pyx_k_DEPRECATED196[] = "DEPRECATED196";
static const char __pyx_k_DEPRECATED197[] = "DEPRECATED197";
static const char __pyx_k_DEPRECATED198[] = "DEPRECATED198";
static const char __pyx_k_DEPRECATED199[] = "DEPRECATED199";
static const char __pyx_k_DEPRECATED200[] = "DEPRECATED200";
static const char __pyx_k_DEPRECATED201[] = "DEPRECATED201";
static const char __pyx_k_DEPRECATED202[] = "DEPRECATED202";
static const char __pyx_k_DEPRECATED203[] = "DEPRECATED203";
static const char __pyx_k_DEPRECATED204[] = "DEPRECATED204";
static const char __pyx_k_DEPRECATED205[] = "DEPRECATED205";
static const char __pyx_k_DEPRECATED206[] = "DEPRECATED206";
static const char __pyx_k_DEPRECATED207[] = "DEPRECATED207";
static const char __pyx_k_DEPRECATED208[] = "DEPRECATED208";
static const char __pyx_k_DEPRECATED209[] = "DEPRECATED209";
static const char __pyx_k_DEPRECATED210[] = "DEPRECATED210";
static const char __pyx_k_DEPRECATED211[] = "DEPRECATED211";
static const char __pyx_k_DEPRECATED212[] = "DEPRECATED212";
static const char __pyx_k_DEPRECATED213[] = "DEPRECATED213";
static const char __pyx_k_DEPRECATED214[] = "DEPRECATED214";
static const char __pyx_k_DEPRECATED215[] = "DEPRECATED215";
static const char __pyx_k_DEPRECATED216[] = "DEPRECATED216";
static const char __pyx_k_DEPRECATED217[] = "DEPRECATED217";
static const char __pyx_k_DEPRECATED218[] = "DEPRECATED218";
static const char __pyx_k_DEPRECATED219[] = "DEPRECATED219";
static const char __pyx_k_DEPRECATED220[] = "DEPRECATED220";
static const char __pyx_k_DEPRECATED221[] = "DEPRECATED221";
static const char __pyx_k_DEPRECATED222[] = "DEPRECATED222";
static const char __pyx_k_DEPRECATED223[] = "DEPRECATED223";
static const char __pyx_k_DEPRECATED224[] = "DEPRECATED224";
static const char __pyx_k_DEPRECATED225[] = "DEPRECATED225";
static const char __pyx_k_DEPRECATED226[] = "DEPRECATED226";
static const char __pyx_k_DEPRECATED227[] = "DEPRECATED227";
static const char __pyx_k_DEPRECATED228[] = "DEPRECATED228";
static const char __pyx_k_DEPRECATED229[] = "DEPRECATED229";
static const char __pyx_k_DEPRECATED230[] = "DEPRECATED230";
static const char __pyx_k_DEPRECATED231[] = "DEPRECATED231";
static const char __pyx_k_DEPRECATED232[] = "DEPRECATED232";
static const char __pyx_k_DEPRECATED233[] = "DEPRECATED233";
static const char __pyx_k_DEPRECATED234[] = "DEPRECATED234";
static const char __pyx_k_DEPRECATED235[] = "DEPRECATED235";
static const char __pyx_k_DEPRECATED236[] = "DEPRECATED236";
static const char __pyx_k_DEPRECATED237[] = "DEPRECATED237";
static const char __pyx_k_DEPRECATED238[] = "DEPRECATED238";
static const char __pyx_k_DEPRECATED239[] = "DEPRECATED239";
static const char __pyx_k_DEPRECATED240[] = "DEPRECATED240";
static const char __pyx_k_DEPRECATED241[] = "DEPRECATED241";
static const char __pyx_k_DEPRECATED242[] = "DEPRECATED242";
static const char __pyx_k_DEPRECATED243[] = "DEPRECATED243";
static const char __pyx_k_DEPRECATED244[] = "DEPRECATED244";
static const char __pyx_k_DEPRECATED245[] = "DEPRECATED245";
static const char __pyx_k_DEPRECATED246[] = "DEPRECATED246";
static const char __pyx_k_DEPRECATED247[] = "DEPRECATED247";
static const char __pyx_k_DEPRECATED248[] = "DEPRECATED248";
static const char __pyx_k_DEPRECATED249[] = "DEPRECATED249";
static const char __pyx_k_DEPRECATED250[] = "DEPRECATED250";
static const char __pyx_k_DEPRECATED251[] = "DEPRECATED251";
static const char __pyx_k_DEPRECATED252[] = "DEPRECATED252";
static const char __pyx_k_DEPRECATED253[] = "DEPRECATED253";
static const char __pyx_k_DEPRECATED254[] = "DEPRECATED254";
static const char __pyx_k_DEPRECATED255[] = "DEPRECATED255";
static const char __pyx_k_DEPRECATED256[] = "DEPRECATED256";
static const char __pyx_k_DEPRECATED257[] = "DEPRECATED257";
static const char __pyx_k_DEPRECATED258[] = "DEPRECATED258";
static const char __pyx_k_DEPRECATED259[] = "DEPRECATED259";
static const char __pyx_k_DEPRECATED260[] = "DEPRECATED260";
static const char __pyx_k_DEPRECATED261[] = "DEPRECATED261";
static const char __pyx_k_DEPRECATED262[] = "DEPRECATED262";
static const char __pyx_k_DEPRECATED263[] = "DEPRECATED263";
static const char __pyx_k_DEPRECATED264[] = "DEPRECATED264";
static const char __pyx_k_DEPRECATED265[] = "DEPRECATED265";
static const char __pyx_k_DEPRECATED266[] = "DEPRECATED266";
static const char __pyx_k_DEPRECATED267[] = "DEPRECATED267";
static const char __pyx_k_DEPRECATED268[] = "DEPRECATED268";
static const char __pyx_k_DEPRECATED269[] = "DEPRECATED269";
static const char __pyx_k_DEPRECATED270[] = "DEPRECATED270";
static const char __pyx_k_DEPRECATED271[] = "DEPRECATED271";
static const char __pyx_k_DEPRECATED272[] = "DEPRECATED272";
static const char __pyx_k_DEPRECATED273[] = "DEPRECATED273";
static const char __pyx_k_DEPRECATED274[] = "DEPRECATED274";
static const char __pyx_k_DEPRECATED275[] = "DEPRECATED275";
static const char __pyx_k_DEPRECATED276[] = "DEPRECATED276";
static const char __pyx_k_IS_LEFT_PUNCT[] = "IS_LEFT_PUNCT";
static const char __pyx_k_spacy_symbols[] = "spacy.symbols";
static const char __pyx_k_IS_RIGHT_PUNCT[] = "IS_RIGHT_PUNCT";
static const char __pyx_k_IS_OOV_DEPRECATED[] = "IS_OOV_DEPRECATED";
static const char __pyx_k_spacy_symbols_pyx[] = "spacy/symbols.pyx";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
/* #### Code section: decls ### */
static PyObject *__pyx_pf_5spacy_7symbols_sort_nums(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
/* SmallCodeConfig */
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_pop;
  PyObject *__pyx_codeobj_tab[1];
  PyObject *__pyx_string_tab[479];
/* #### Code section: module_state_contents ### */
/* CachedMethodType.module_state_decls */
#if CYTHON_COMPILING_IN_LIMITED_API
PyObject *__Pyx_CachedMethodType;
#endif

/* CodeObjectCache.module_state_decls */
struct __Pyx_CodeObjectCache __pyx_code_cache;

/* #### Code section: module_state_end ### */
} __pyx_mstatetype;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate_global (__Pyx_PyModule_GetState(__Pyx_State_FindModule(&__pyx_moduledef)))

#define __pyx_m (__Pyx_State_FindModule(&__pyx_moduledef))
#else
static __pyx_mstatetype __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstatetype * const __pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: constant_name_defines ### */
#define __pyx_kp_u_ __pyx_string_tab[0]
#define __pyx_n_u_ADJ __pyx_string_tab[1]
#define __pyx_n_u_ADP __pyx_string_tab[2]
#define __pyx_n_u_ADV __pyx_string_tab[3]
#define __pyx_n_u_AUX __pyx_string_tab[4]
#define __pyx_n_u_CARDINAL __pyx_string_tab[5]
#define __pyx_n_u_CCONJ __pyx_string_tab[6]
#define __pyx_n_u_CLUSTER __pyx_string_tab[7]
#define __pyx_n_u_CONJ __pyx_string_tab[8]
#define __pyx_n_u_DATE __pyx_string_tab[9]
#define __pyx_n_u_DEP __pyx_string_tab[10]
#define __pyx_n_u_DEPRECATED001 __pyx_string_tab[11]
#define __pyx_n_u_DEPRECATED002 __pyx_string_tab[12]
#define __pyx_n_u_DEPRECATED003 __pyx_string_tab[13]
#define __pyx_n_u_DEPRECATED004 __pyx_string_tab[14]
#define __pyx_n_u_DEPRECATED005 __pyx_string_tab[15]
#define __pyx_n_u_DEPRECATED006 __pyx_string_tab[16]
#define __pyx_n_u_DEPRECATED007 __pyx_string_tab[17]
#define __pyx_n_u_DEPRECATED008 __pyx_string_tab[18]
#define __pyx_n_u_DEPRECATED009 __pyx_string_tab[19]
#define __pyx_n_u_DEPRECATED010 __pyx_string_tab[20]
#define __pyx_n_u_DEPRECATED011 __pyx_string_tab[21]
#define __pyx_n_u_DEPRECATED012 __pyx_string_tab[22]
#define __pyx_n_u_DEPRECATED013 __pyx_string_tab[23]
#define __pyx_n_u_DEPRECATED014 __pyx_string_tab[24]
#define __pyx_n_u_DEPRECATED015 __pyx_string_tab[25]
#define __pyx_n_u_DEPRECATED016 __pyx_string_tab[26]
#define __pyx_n_u_DEPRECATED017 __pyx_string_tab[27]
#define __pyx_n_u_DEPRECATED018 __pyx_string_tab[28]
#define __pyx_n_u_DEPRECATED019 __pyx_string_tab[29]
#define __pyx_n_u_DEPRECATED020 __pyx_string_tab[30]
#define __pyx_n_u_DEPRECATED021 __pyx_string_tab[31]
#define __pyx_n_u_DEPRECATED022 __pyx_string_tab[32]
#define __pyx_n_u_DEPRECATED023 __pyx_string_tab[33]
#define __pyx_n_u_DEPRECATED024 __pyx_string_tab[34]
#define __pyx_n_u_DEPRECATED025 __pyx_string_tab[35]
#define __pyx_n_u_DEPRECATED026 __pyx_string_tab[36]
#define __pyx_n_u_DEPRECATED027 __pyx_string_tab[37]
#define __pyx_n_u_DEPRECATED028 __pyx_string_tab[38]
#define __pyx_n_u_DEPRECATED029 __pyx_string_tab[39]
#define __pyx_n_u_DEPRECATED030 __pyx_string_tab[40]
#define __pyx_n_u_DEPRECATED031 __pyx_string_tab[41]
#define __pyx_n_u_DEPRECATED032 __pyx_string_tab[42]
#define __pyx_n_u_DEPRECATED033 __pyx_string_tab[43]
#define __pyx_n_u_DEPRECATED034 __pyx_string_tab[44]
#define __pyx_n_u_DEPRECATED035 __pyx_string_tab[45]
#define __pyx_n_u_DEPRECATED036 __pyx_string_tab[46]
#define __pyx_n_u_DEPRECATED037 __pyx_string_tab[47]
#define __pyx_n_u_DEPRECATED038 __pyx_string_tab[48]
#define __pyx_n_u_DEPRECATED039 __pyx_string_tab[49]
#define __pyx_n_u_DEPRECATED040 __pyx_string_tab[50]
#define __pyx_n_u_DEPRECATED041 __pyx_string_tab[51]
#define __pyx_n_u_DEPRECATED042 __pyx_string_tab[52]
#define __pyx_n_u_DEPRECATED043 __pyx_string_tab[53]
#define __pyx_n_u_DEPRECATED044 __pyx_string_tab[54]
#define __pyx_n_u_DEPRECATED045 __pyx_string_tab[55]
#define __pyx_n_u_DEPRECATED046 __pyx_string_tab[56]
#define __pyx_n_u_DEPRECATED047 __pyx_string_tab[57]
#define __pyx_n_u_DEPRECATED048 __pyx_string_tab[58]
#define __pyx_n_u_DEPRECATED049 __pyx_string_tab[59]
#define __pyx_n_u_DEPRECATED050 __pyx_string_tab[60]
#define __pyx_n_u_DEPRECATED051 __pyx_string_tab[61]
#define __pyx_n_u_DEPRECATED052 __pyx_string_tab[62]
#define __pyx_n_u_DEPRECATED053 __pyx_string_tab[63]
#define __pyx_n_u_DEPRECATED054 __pyx_string_tab[64]
#define __pyx_n_u_DEPRECATED055 __pyx_string_tab[65]
#define __pyx_n_u_DEPRECATED056 __pyx_string_tab[66]
#define __pyx_n_u_DEPRECATED057 __pyx_string_tab[67]
#define __pyx_n_u_DEPRECATED058 __pyx_string_tab[68]
#define __pyx_n_u_DEPRECATED059 __pyx_string_tab[69]
#define __pyx_n_u_DEPRECATED060 __pyx_string_tab[70]
#define __pyx_n_u_DEPRECATED061 __pyx_string_tab[71]
#define __pyx_n_u_DEPRECATED062 __pyx_string_tab[72]
#define __pyx_n_u_DEPRECATED063 __pyx_string_tab[73]
#define __pyx_n_u_DEPRECATED064 __pyx_string_tab[74]
#define __pyx_n_u_DEPRECATED065 __pyx_string_tab[75]
#define __pyx_n_u_DEPRECATED066 __pyx_string_tab[76]
#define __pyx_n_u_DEPRECATED067 __pyx_string_tab[77]
#define __pyx_n_u_DEPRECATED068 __pyx_string_tab[78]
#define __pyx_n_u_DEPRECATED069 __pyx_string_tab[79]
#define __pyx_n_u_DEPRECATED070 __pyx_string_tab[80]
#define __pyx_n_u_DEPRECATED071 __pyx_string_tab[81]
#define __pyx_n_u_DEPRECATED072 __pyx_string_tab[82]
#define __pyx_n_u_DEPRECATED073 __pyx_string_tab[83]
#define __pyx_n_u_DEPRECATED074 __pyx_string_tab[84]
#define __pyx_n_u_DEPRECATED075 __pyx_string_tab[85]
#define __pyx_n_u_DEPRECATED076 __pyx_string_tab[86]
#define __pyx_n_u_DEPRECATED077 __pyx_string_tab[87]
#define __pyx_n_u_DEPRECATED078 __pyx_string_tab[88]
#define __pyx_n_u_DEPRECATED079 __pyx_string_tab[89]
#define __pyx_n_u_DEPRECATED080 __pyx_string_tab[90]
#define __pyx_n_u_DEPRECATED081 __pyx_string_tab[91]
#define __pyx_n_u_DEPRECATED082 __pyx_string_tab[92]
#define __pyx_n_u_DEPRECATED083 __pyx_string_tab[93]
#define __pyx_n_u_DEPRECATED084 __pyx_string_tab[94]
#define __pyx_n_u_DEPRECATED085 __pyx_string_tab[95]
#define __pyx_n_u_DEPRECATED086 __pyx_string_tab[96]
#define __pyx_n_u_DEPRECATED087 __pyx_string_tab[97]
#define __pyx_n_u_DEPRECATED088 __pyx_string_tab[98]
#define __pyx_n_u_DEPRECATED089 __pyx_string_tab[99]
#define __pyx_n_u_DEPRECATED090 __pyx_string_tab[100]
#define __pyx_n_u_DEPRECATED091 __pyx_string_tab[101]
#define __pyx_n_u_DEPRECATED092 __pyx_string_tab[102]
#define __pyx_n_u_DEPRECATED093 __pyx_string_tab[103]
#define __pyx_n_u_DEPRECATED094 __pyx_string_tab[104]
#define __pyx_n_u_DEPRECATED095 __pyx_string_tab[105]
#define __pyx_n_u_DEPRECATED096 __pyx_string_tab[106]
#define __pyx_n_u_DEPRECATED097 __pyx_string_tab[107]
#define __pyx_n_u_DEPRECATED098 __pyx_string_tab[108]
#define __pyx_n_u_DEPRECATED099 __pyx_string_tab[109]
#define __pyx_n_u_DEPRECATED100 __pyx_string_tab[110]
#define __pyx_n_u_DEPRECATED101 __pyx_string_tab[111]
#define __pyx_n_u_DEPRECATED102 __pyx_string_tab[112]
#define __pyx_n_u_DEPRECATED103 __pyx_string_tab[113]
#define __pyx_n_u_DEPRECATED104 __pyx_string_tab[114]
#define __pyx_n_u_DEPRECATED105 __pyx_string_tab[115]
#define __pyx_n_u_DEPRECATED106 __pyx_string_tab[116]
#define __pyx_n_u_DEPRECATED107 __pyx_string_tab[117]
#define __pyx_n_u_DEPRECATED108 __pyx_string_tab[118]
#define __pyx_n_u_DEPRECATED109 __pyx_string_tab[119]
#define __pyx_n_u_DEPRECATED110 __pyx_string_tab[120]
#define __pyx_n_u_DEPRECATED111 __pyx_string_tab[121]
#define __pyx_n_u_DEPRECATED112 __pyx_string_tab[122]
#define __pyx_n_u_DEPRECATED113 __pyx_string_tab[123]
#define __pyx_n_u_DEPRECATED114 __pyx_string_tab[124]
#define __pyx_n_u_DEPRECATED115 __pyx_string_tab[125]
#define __pyx_n_u_DEPRECATED116 __pyx_string_tab[126]
#define __pyx_n_u_DEPRECATED117 __pyx_string_tab[127]
#define __pyx_n_u_DEPRECATED118 __pyx_string_tab[128]
#define __pyx_n_u_DEPRECATED119 __pyx_string_tab[129]
#define __pyx_n_u_DEPRECATED120 __pyx_string_tab[130]
#define __pyx_n_u_DEPRECATED121 __pyx_string_tab[131]
#define __pyx_n_u_DEPRECATED122 __pyx_string_tab[132]
#define __pyx_n_u_DEPRECATED123 __pyx_string_tab[133]
#define __pyx_n_u_DEPRECATED124 __pyx_string_tab[134]
#define __pyx_n_u_DEPRECATED125 __pyx_string_tab[135]
#define __pyx_n_u_DEPRECATED126 __pyx_string_tab[136]
#define __pyx_n_u_DEPRECATED127 __pyx_string_tab[137]
#define __pyx_n_u_DEPRECATED128 __pyx_string_tab[138]
#define __pyx_n_u_DEPRECATED129 __pyx_string_tab[139]
#define __pyx_n_u_DEPRECATED130 __pyx_string_tab[140]
#define __pyx_n_u_DEPRECATED131 __pyx_string_tab[141]
#define __pyx_n_u_DEPRECATED132 __pyx_string_tab[142]
#define __pyx_n_u_DEPRECATED133 __pyx_string_tab[143]
#define __pyx_n_u_DEPRECATED134 __pyx_string_tab[144]
#define __pyx_n_u_DEPRECATED135 __pyx_string_tab[145]
#define __pyx_n_u_DEPRECATED136 __pyx_string_tab[146]
#define __pyx_n_u_DEPRECATED137 __pyx_string_tab[147]
#define __pyx_n_u_DEPRECATED138 __pyx_string_tab[148]
#define __pyx_n_u_DEPRECATED139 __pyx_string_tab[149]
#define __pyx_n_u_DEPRECATED140 __pyx_string_tab[150]
#define __pyx_n_u_DEPRECATED141 __pyx_string_tab[151]
#define __pyx_n_u_DEPRECATED142 __pyx_string_tab[152]
#define __pyx_n_u_DEPRECATED143 __pyx_string_tab[153]
#define __pyx_n_u_DEPRECATED144 __pyx_string_tab[154]
#define __pyx_n_u_DEPRECATED145 __pyx_string_tab[155]
#define __pyx_n_u_DEPRECATED146 __pyx_string_tab[156]
#define __pyx_n_u_DEPRECATED147 __pyx_string_tab[157]
#define __pyx_n_u_DEPRECATED148 __pyx_string_tab[158]
#define __pyx_n_u_DEPRECATED149 __pyx_string_tab[159]
#define __pyx_n_u_DEPRECATED150 __pyx_string_tab[160]
#define __pyx_n_u_DEPRECATED151 __pyx_string_tab[161]
#define __pyx_n_u_DEPRECATED152 __pyx_string_tab[162]
#define __pyx_n_u_DEPRECATED153 __pyx_string_tab[163]
#define __pyx_n_u_DEPRECATED154 __pyx_string_tab[164]
#define __pyx_n_u_DEPRECATED155 __pyx_string_tab[165]
#define __pyx_n_u_DEPRECATED156 __pyx_string_tab[166]
#define __pyx_n_u_DEPRECATED157 __pyx_string_tab[167]
#define __pyx_n_u_DEPRECATED158 __pyx_string_tab[168]
#define __pyx_n_u_DEPRECATED159 __pyx_string_tab[169]
#define __pyx_n_u_DEPRECATED160 __pyx_string_tab[170]
#define __pyx_n_u_DEPRECATED161 __pyx_string_tab[171]
#define __pyx_n_u_DEPRECATED162 __pyx_string_tab[172]
#define __pyx_n_u_DEPRECATED163 __pyx_string_tab[173]
#define __pyx_n_u_DEPRECATED164 __pyx_string_tab[174]
#define __pyx_n_u_DEPRECATED165 __pyx_string_tab[175]
#define __pyx_n_u_DEPRECATED166 __pyx_string_tab[176]
#define __pyx_n_u_DEPRECATED167 __pyx_string_tab[177]
#define __pyx_n_u_DEPRECATED168 __pyx_string_tab[178]
#define __pyx_n_u_DEPRECATED169 __pyx_string_tab[179]
#define __pyx_n_u_DEPRECATED170 __pyx_string_tab[180]
#define __pyx_n_u_DEPRECATED171 __pyx_string_tab[181]
#define __pyx_n_u_DEPRECATED172 __pyx_string_tab[182]
#define __pyx_n_u_DEPRECATED173 __pyx_string_tab[183]
#define __pyx_n_u_DEPRECATED174 __pyx_string_tab[184]
#define __pyx_n_u_DEPRECATED175 __pyx_string_tab[185]
#define __pyx_n_u_DEPRECATED176 __pyx_string_tab[186]
#define __pyx_n_u_DEPRECATED177 __pyx_string_tab[187]
#define __pyx_n_u_DEPRECATED178 __pyx_string_tab[188]
#define __pyx_n_u_DEPRECATED179 __pyx_string_tab[189]
#define __pyx_n_u_DEPRECATED180 __pyx_string_tab[190]
#define __pyx_n_u_DEPRECATED181 __pyx_string_tab[191]
#define __pyx_n_u_DEPRECATED182 __pyx_string_tab[192]
#define __pyx_n_u_DEPRECATED183 __pyx_string_tab[193]
#define __pyx_n_u_DEPRECATED184 __pyx_string_tab[194]
#define __pyx_n_u_DEPRECATED185 __pyx_string_tab[195]
#define __pyx_n_u_DEPRECATED186 __pyx_string_tab[196]
#define __pyx_n_u_DEPRECATED187 __pyx_string_tab[197]
#define __pyx_n_u_DEPRECATED188 __pyx_string_tab[198]
#define __pyx_n_u_DEPRECATED189 __pyx_string_tab[199]
#define __pyx_n_u_DEPRECATED190 __pyx_string_tab[200]
#define __pyx_n_u_DEPRECATED191 __pyx_string_tab[201]
#define __pyx_n_u_DEPRECATED192 __pyx_string_tab[202]
#define __pyx_n_u_DEPRECATED193 __pyx_string_tab[203]
#define __pyx_n_u_DEPRECATED194 __pyx_string_tab[204]
#define __pyx_n_u_DEPRECATED195 __pyx_string_tab[205]
#define __pyx_n_u_DEPRECATED196 __pyx_string_tab[206]
#define __pyx_n_u_DEPRECATED197 __pyx_string_tab[207]
#define __pyx_n_u_DEPRECATED198 __pyx_string_tab[208]
#define __pyx_n_u_DEPRECATED199 __pyx_string_tab[209]
#define __pyx_n_u_DEPRECATED200 __pyx_string_tab[210]
#define __pyx_n_u_DEPRECATED201 __pyx_string_tab[211]
#define __pyx_n_u_DEPRECATED202 __pyx_string_tab[212]
#define __pyx_n_u_DEPRECATED203 __pyx_string_tab[213]
#define __pyx_n_u_DEPRECATED204 __pyx_string_tab[214]
#define __pyx_n_u_DEPRECATED205 __pyx_string_tab[215]
#define __pyx_n_u_DEPRECATED206 __pyx_string_tab[216]
#define __pyx_n_u_DEPRECATED207 __pyx_string_tab[217]
#define __pyx_n_u_DEPRECATED208 __pyx_string_tab[218]
#define __pyx_n_u_DEPRECATED209 __pyx_string_tab[219]
#define __pyx_n_u_DEPRECATED210 __pyx_string_tab[220]
#define __pyx_n_u_DEPRECATED211 __pyx_string_tab[221]
#define __pyx_n_u_DEPRECATED212 __pyx_string_tab[222]
#define __pyx_n_u_DEPRECATED213 __pyx_string_tab[223]
#define __pyx_n_u_DEPRECATED214 __pyx_string_tab[224]
#define __pyx_n_u_DEPRECATED215 __pyx_string_tab[225]
#define __pyx_n_u_DEPRECATED216 __pyx_string_tab[226]
#define __pyx_n_u_DEPRECATED217 __pyx_string_tab[227]
#define __pyx_n_u_DEPRECATED218 __pyx_string_tab[228]
#define __pyx_n_u_DEPRECATED219 __pyx_string_tab[229]
#define __pyx_n_u_DEPRECATED220 __pyx_string_tab[230]
#define __pyx_n_u_DEPRECATED221 __pyx_string_tab[231]
#define __pyx_n_u_DEPRECATED222 __pyx_string_tab[232]
#define __pyx_n_u_DEPRECATED223 __pyx_string_tab[233]
#define __pyx_n_u_DEPRECATED224 __pyx_string_tab[234]
#define __pyx_n_u_DEPRECATED225 __pyx_string_tab[235]
#define __pyx_n_u_DEPRECATED226 __pyx_string_tab[236]
#define __pyx_n_u_DEPRECATED227 __pyx_string_tab[237]
#define __pyx_n_u_DEPRECATED228 __pyx_string_tab[238]
#define __pyx_n_u_DEPRECATED229 __pyx_string_tab[239]
#define __pyx_n_u_DEPRECATED230 __pyx_string_tab[240]
#define __pyx_n_u_DEPRECATED231 __pyx_string_tab[241]
#define __pyx_n_u_DEPRECATED232 __pyx_string_tab[242]
#define __pyx_n_u_DEPRECATED233 __pyx_string_tab[243]
#define __pyx_n_u_DEPRECATED234 __pyx_string_tab[244]
#define __pyx_n_u_DEPRECATED235 __pyx_string_tab[245]
#define __pyx_n_u_DEPRECATED236 __pyx_string_tab[246]
#define __pyx_n_u_DEPRECATED237 __pyx_string_tab[247]
#define __pyx_n_u_DEPRECATED238 __pyx_string_tab[248]
#define __pyx_n_u_DEPRECATED239 __pyx_string_tab[249]
#define __pyx_n_u_DEPRECATED240 __pyx_string_tab[250]
#define __pyx_n_u_DEPRECATED241 __pyx_string_tab[251]
#define __pyx_n_u_DEPRECATED242 __pyx_string_tab[252]
#define __pyx_n_u_DEPRECATED243 __pyx_string_tab[253]
#define __pyx_n_u_DEPRECATED244 __pyx_string_tab[254]
#define __pyx_n_u_DEPRECATED245 __pyx_string_tab[255]
#define __pyx_n_u_DEPRECATED246 __pyx_string_tab[256]
#define __pyx_n_u_DEPRECATED247 __pyx_string_tab[257]
#define __pyx_n_u_DEPRECATED248 __pyx_string_tab[258]
#define __pyx_n_u_DEPRECATED249 __pyx_string_tab[259]
#define __pyx_n_u_DEPRECATED250 __pyx_string_tab[260]
#define __pyx_n_u_DEPRECATED251 __pyx_string_tab[261]
#define __pyx_n_u_DEPRECATED252 __pyx_string_tab[262]
#define __pyx_n_u_DEPRECATED253 __pyx_string_tab[263]
#define __pyx_n_u_DEPRECATED254 __pyx_string_tab[264]
#define __pyx_n_u_DEPRECATED255 __pyx_string_tab[265]
#define __pyx_n_u_DEPRECATED256 __pyx_string_tab[266]
#define __pyx_n_u_DEPRECATED257 __pyx_string_tab[267]
#define __pyx_n_u_DEPRECATED258 __pyx_string_tab[268]
#define __pyx_n_u_DEPRECATED259 __pyx_string_tab[269]
#define __pyx_n_u_DEPRECATED260 __pyx_string_tab[270]
#define __pyx_n_u_DEPRECATED261 __pyx_string_tab[271]
#define __pyx_n_u_DEPRECATED262 __pyx_string_tab[272]
#define __pyx_n_u_DEPRECATED263 __pyx_string_tab[273]
#define __pyx_n_u_DEPRECATED264 __pyx_string_tab[274]
#define __pyx_n_u_DEPRECATED265 __pyx_string_tab[275]
#define __pyx_n_u_DEPRECATED266 __pyx_string_tab[276]
#define __pyx_n_u_DEPRECATED267 __pyx_string_tab[277]
#define __pyx_n_u_DEPRECATED268 __pyx_string_tab[278]
#define __pyx_n_u_DEPRECATED269 __pyx_string_tab[279]
#define __pyx_n_u_DEPRECATED270 __pyx_string_tab[280]
#define __pyx_n_u_DEPRECATED271 __pyx_string_tab[281]
#define __pyx_n_u_DEPRECATED272 __pyx_string_tab[282]
#define __pyx_n_u_DEPRECATED273 __pyx_string_tab[283]
#define __pyx_n_u_DEPRECATED274 __pyx_string_tab[284]
#define __pyx_n_u_DEPRECATED275 __pyx_string_tab[285]
#define __pyx_n_u_DEPRECATED276 __pyx_string_tab[286]
#define __pyx_n_u_DET __pyx_string_tab[287]
#define __pyx_n_u_ENT_ID __pyx_string_tab[288]
#define __pyx_n_u_ENT_IOB __pyx_string_tab[289]
#define __pyx_n_u_ENT_KB_ID __pyx_string_tab[290]
#define __pyx_n_u_ENT_TYPE __pyx_string_tab[291]
#define __pyx_n_u_EOL __pyx_string_tab[292]
#define __pyx_n_u_EVENT __pyx_string_tab[293]
#define __pyx_n_u_FACILITY __pyx_string_tab[294]
#define __pyx_n_u_FLAG19 __pyx_string_tab[295]
#define __pyx_n_u_FLAG20 __pyx_string_tab[296]
#define __pyx_n_u_FLAG21 __pyx_string_tab[297]
#define __pyx_n_u_FLAG22 __pyx_string_tab[298]
#define __pyx_n_u_FLAG23 __pyx_string_tab[299]
#define __pyx_n_u_FLAG24 __pyx_string_tab[300]
#define __pyx_n_u_FLAG25 __pyx_string_tab[301]
#define __pyx_n_u_FLAG26 __pyx_string_tab[302]
#define __pyx_n_u_FLAG27 __pyx_string_tab[303]
#define __pyx_n_u_FLAG28 __pyx_string_tab[304]
#define __pyx_n_u_FLAG29 __pyx_string_tab[305]
#define __pyx_n_u_FLAG30 __pyx_string_tab[306]
#define __pyx_n_u_FLAG31 __pyx_string_tab[307]
#define __pyx_n_u_FLAG32 __pyx_string_tab[308]
#define __pyx_n_u_FLAG33 __pyx_string_tab[309]
#define __pyx_n_u_FLAG34 __pyx_string_tab[310]
#define __pyx_n_u_FLAG35 __pyx_string_tab[311]
#define __pyx_n_u_FLAG36 __pyx_string_tab[312]
#define __pyx_n_u_FLAG37 __pyx_string_tab[313]
#define __pyx_n_u_FLAG38 __pyx_string_tab[314]
#define __pyx_n_u_FLAG39 __pyx_string_tab[315]
#define __pyx_n_u_FLAG40 __pyx_string_tab[316]
#define __pyx_n_u_FLAG41 __pyx_string_tab[317]
#define __pyx_n_u_FLAG42 __pyx_string_tab[318]
#define __pyx_n_u_FLAG43 __pyx_string_tab[319]
#define __pyx_n_u_FLAG44 __pyx_string_tab[320]
#define __pyx_n_u_FLAG45 __pyx_string_tab[321]
#define __pyx_n_u_FLAG46 __pyx_string_tab[322]
#define __pyx_n_u_FLAG47 __pyx_string_tab[323]
#define __pyx_n_u_FLAG48 __pyx_string_tab[324]
#define __pyx_n_u_FLAG49 __pyx_string_tab[325]
#define __pyx_n_u_FLAG50 __pyx_string_tab[326]
#define __pyx_n_u_FLAG51 __pyx_string_tab[327]
#define __pyx_n_u_FLAG52 __pyx_string_tab[328]
#define __pyx_n_u_FLAG53 __pyx_string_tab[329]
#define __pyx_n_u_FLAG54 __pyx_string_tab[330]
#define __pyx_n_u_FLAG55 __pyx_string_tab[331]
#define __pyx_n_u_FLAG56 __pyx_string_tab[332]
#define __pyx_n_u_FLAG57 __pyx_string_tab[333]
#define __pyx_n_u_FLAG58 __pyx_string_tab[334]
#define __pyx_n_u_FLAG59 __pyx_string_tab[335]
#define __pyx_n_u_FLAG60 __pyx_string_tab[336]
#define __pyx_n_u_FLAG61 __pyx_string_tab[337]
#define __pyx_n_u_FLAG62 __pyx_string_tab[338]
#define __pyx_n_u_FLAG63 __pyx_string_tab[339]
#define __pyx_n_u_GPE __pyx_string_tab[340]
#define __pyx_n_u_HEAD __pyx_string_tab[341]
#define __pyx_n_u_ID __pyx_string_tab[342]
#define __pyx_n_u_IDS __pyx_string_tab[343]
#define __pyx_n_u_IDX __pyx_string_tab[344]
#define __pyx_n_u_INTJ __pyx_string_tab[345]
#define __pyx_n_u_IS_ALPHA __pyx_string_tab[346]
#define __pyx_n_u_IS_ASCII __pyx_string_tab[347]
#define __pyx_n_u_IS_BRACKET __pyx_string_tab[348]
#define __pyx_n_u_IS_CURRENCY __pyx_string_tab[349]
#define __pyx_n_u_IS_DIGIT __pyx_string_tab[350]
#define __pyx_n_u_IS_LEFT_PUNCT __pyx_string_tab[351]
#define __pyx_n_u_IS_LOWER __pyx_string_tab[352]
#define __pyx_n_u_IS_OOV_DEPRECATED __pyx_string_tab[353]
#define __pyx_n_u_IS_PUNCT __pyx_string_tab[354]
#define __pyx_n_u_IS_QUOTE __pyx_string_tab[355]
#define __pyx_n_u_IS_RIGHT_PUNCT __pyx_string_tab[356]
#define __pyx_n_u_IS_SPACE __pyx_string_tab[357]
#define __pyx_n_u_IS_STOP __pyx_string_tab[358]
#define __pyx_n_u_IS_TITLE __pyx_string_tab[359]
#define __pyx_n_u_IS_UPPER __pyx_string_tab[360]
#define __pyx_n_u_LANG __pyx_string_tab[361]
#define __pyx_n_u_LANGUAGE __pyx_string_tab[362]
#define __pyx_n_u_LAW __pyx_string_tab[363]
#define __pyx_n_u_LEMMA __pyx_string_tab[364]
#define __pyx_n_u_LENGTH __pyx_string_tab[365]
#define __pyx_n_u_LIKE_EMAIL __pyx_string_tab[366]
#define __pyx_n_u_LIKE_NUM __pyx_string_tab[367]
#define __pyx_n_u_LIKE_URL __pyx_string_tab[368]
#define __pyx_n_u_LOC __pyx_string_tab[369]
#define __pyx_n_u_LOWER __pyx_string_tab[370]
#define __pyx_n_u_MONEY __pyx_string_tab[371]
#define __pyx_n_u_MORPH __pyx_string_tab[372]
#define __pyx_n_u_NAMES __pyx_string_tab[373]
#define __pyx_n_u_NORM __pyx_string_tab[374]
#define __pyx_n_u_NORP __pyx_string_tab[375]
#define __pyx_n_u_NOUN __pyx_string_tab[376]
#define __pyx_n_u_NUM __pyx_string_tab[377]
#define __pyx_n_u_ORDINAL __pyx_string_tab[378]
#define __pyx_n_u_ORG __pyx_string_tab[379]
#define __pyx_n_u_ORTH __pyx_string_tab[380]
#define __pyx_n_u_PART __pyx_string_tab[381]
#define __pyx_n_u_PERCENT __pyx_string_tab[382]
#define __pyx_n_u_PERSON __pyx_string_tab[383]
#define __pyx_n_u_POS __pyx_string_tab[384]
#define __pyx_n_u_PREFIX __pyx_string_tab[385]
#define __pyx_n_u_PROB __pyx_string_tab[386]
#define __pyx_n_u_PRODUCT __pyx_string_tab[387]
#define __pyx_n_u_PRON __pyx_string_tab[388]
#define __pyx_n_u_PROPN __pyx_string_tab[389]
#define __pyx_n_u_PUNCT __pyx_string_tab[390]
#define __pyx_n_u_QUANTITY __pyx_string_tab[391]
#define __pyx_n_u_SCONJ __pyx_string_tab[392]
#define __pyx_n_u_SENT_START __pyx_string_tab[393]
#define __pyx_n_u_SHAPE __pyx_string_tab[394]
#define __pyx_n_u_SPACE __pyx_string_tab[395]
#define __pyx_n_u_SPACY __pyx_string_tab[396]
#define __pyx_n_u_SUFFIX __pyx_string_tab[397]
#define __pyx_n_u_SYM __pyx_string_tab[398]
#define __pyx_n_u_TAG __pyx_string_tab[399]
#define __pyx_n_u_TIME __pyx_string_tab[400]
#define __pyx_n_u_VERB __pyx_string_tab[401]
#define __pyx_n_u_WORK_OF_ART __pyx_string_tab[402]
#define __pyx_n_u_X __pyx_string_tab[403]
#define __pyx_n_u__2 __pyx_string_tab[404]
#define __pyx_kp_u__3 __pyx_string_tab[405]
#define __pyx_n_u_acl __pyx_string_tab[406]
#define __pyx_n_u_acomp __pyx_string_tab[407]
#define __pyx_n_u_advcl __pyx_string_tab[408]
#define __pyx_n_u_advmod __pyx_string_tab[409]
#define __pyx_n_u_agent __pyx_string_tab[410]
#define __pyx_n_u_amod __pyx_string_tab[411]
#define __pyx_n_u_appos __pyx_string_tab[412]
#define __pyx_n_u_asyncio_coroutines __pyx_string_tab[413]
#define __pyx_n_u_attr __pyx_string_tab[414]
#define __pyx_n_u_aux __pyx_string_tab[415]
#define __pyx_n_u_auxpass __pyx_string_tab[416]
#define __pyx_n_u_cc __pyx_string_tab[417]
#define __pyx_n_u_ccomp __pyx_string_tab[418]
#define __pyx_n_u_cline_in_traceback __pyx_string_tab[419]
#define __pyx_n_u_complm __pyx_string_tab[420]
#define __pyx_n_u_conj __pyx_string_tab[421]
#define __pyx_n_u_cop __pyx_string_tab[422]
#define __pyx_n_u_csubj __pyx_string_tab[423]
#define __pyx_n_u_csubjpass __pyx_string_tab[424]
#define __pyx_n_u_dep __pyx_string_tab[425]
#define __pyx_n_u_det __pyx_string_tab[426]
#define __pyx_n_u_dobj __pyx_string_tab[427]
#define __pyx_n_u_expl __pyx_string_tab[428]
#define __pyx_n_u_func __pyx_string_tab[429]
#define __pyx_n_u_hmod __pyx_string_tab[430]
#define __pyx_n_u_hyph __pyx_string_tab[431]
#define __pyx_n_u_infmod __pyx_string_tab[432]
#define __pyx_n_u_intj __pyx_string_tab[433]
#define __pyx_n_u_iobj __pyx_string_tab[434]
#define __pyx_n_u_is_coroutine __pyx_string_tab[435]
#define __pyx_n_u_it __pyx_string_tab[436]
#define __pyx_n_u_items __pyx_string_tab[437]
#define __pyx_n_u_key __pyx_string_tab[438]
#define __pyx_n_u_main __pyx_string_tab[439]
#define __pyx_n_u_mark __pyx_string_tab[440]
#define __pyx_n_u_meta __pyx_string_tab[441]
#define __pyx_n_u_module __pyx_string_tab[442]
#define __pyx_n_u_name __pyx_string_tab[443]
#define __pyx_n_u_neg __pyx_string_tab[444]
#define __pyx_n_u_nmod __pyx_string_tab[445]
#define __pyx_n_u_nn __pyx_string_tab[446]
#define __pyx_n_u_npadvmod __pyx_string_tab[447]
#define __pyx_n_u_nsubj __pyx_string_tab[448]
#define __pyx_n_u_nsubjpass __pyx_string_tab[449]
#define __pyx_n_u_num __pyx_string_tab[450]
#define __pyx_n_u_number __pyx_string_tab[451]
#define __pyx_n_u_obj __pyx_string_tab[452]
#define __pyx_n_u_obl __pyx_string_tab[453]
#define __pyx_n_u_oprd __pyx_string_tab[454]
#define __pyx_n_u_parataxis __pyx_string_tab[455]
#define __pyx_n_u_partmod __pyx_string_tab[456]
#define __pyx_n_u_pcomp __pyx_string_tab[457]
#define __pyx_n_u_pobj __pyx_string_tab[458]
#define __pyx_n_u_pop __pyx_string_tab[459]
#define __pyx_n_u_poss __pyx_string_tab[460]
#define __pyx_n_u_possessive __pyx_string_tab[461]
#define __pyx_n_u_preconj __pyx_string_tab[462]
#define __pyx_n_u_prep __pyx_string_tab[463]
#define __pyx_n_u_prt __pyx_string_tab[464]
#define __pyx_n_u_punct __pyx_string_tab[465]
#define __pyx_n_u_qualname __pyx_string_tab[466]
#define __pyx_n_u_quantmod __pyx_string_tab[467]
#define __pyx_n_u_rcmod __pyx_string_tab[468]
#define __pyx_n_u_relcl __pyx_string_tab[469]
#define __pyx_n_u_root __pyx_string_tab[470]
#define __pyx_n_u_sort_nums __pyx_string_tab[471]
#define __pyx_n_u_sorted __pyx_string_tab[472]
#define __pyx_n_u_spacy_symbols __pyx_string_tab[473]
#define __pyx_kp_u_spacy_symbols_pyx __pyx_string_tab[474]
#define __pyx_n_u_test __pyx_string_tab[475]
#define __pyx_n_u_update __pyx_string_tab[476]
#define __pyx_n_u_x __pyx_string_tab[477]
#define __pyx_n_u_xcomp __pyx_string_tab[478]
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __pyx_m_clear(PyObject *m) {
  __pyx_mstatetype *clear_module_state = __Pyx_PyModule_GetState(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __Pyx_State_RemoveModule(NULL);
  #endif
  for (int i=0; i<1; ++i) { Py_CLEAR(clear_module_state->__pyx_codeobj_tab[i]); }
  for (int i=0; i<479; ++i) { Py_CLEAR(clear_module_state->__pyx_string_tab[i]); }
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstatetype *traverse_module_state = __Pyx_PyModule_GetState(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_tuple);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_bytes);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  for (int i=0; i<1; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_codeobj_tab[i]); }
  for (int i=0; i<479; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_string_tab[i]); }
  return 0;
}
#endif
/* #### Code section: module_code ### */

/* "spacy/symbols.pyx":473
 * 
 * 
 * def sort_nums(x):             # <<<<<<<<<<<<<<
 *     return x[1]
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_7symbols_1sort_nums(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_5spacy_7symbols_sort_nums, "sort_nums(x)");
static PyMethodDef __pyx_mdef_5spacy_7symbols_1sort_nums = {"sort_nums", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_5spacy_7symbols_1sort_nums, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_5spacy_7symbols_sort_nums};
static PyObject *__pyx_pw_5spacy_7symbols_1sort_nums(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sort_nums (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 473, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 473, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sort_nums", 0) < 0) __PYX_ERR(0, 473, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sort_nums", 1, 1, 1, i); __PYX_ERR(0, 473, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 473, __pyx_L3_error)
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sort_nums", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 473, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("spacy.symbols.sort_nums", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5spacy_7symbols_sort_nums(__pyx_self, __pyx_v_x);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_7symbols_sort_nums(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sort_nums", 0);

  /* "spacy/symbols.pyx":474
 * 
 * def sort_nums(x):
 *     return x[1]             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_x, 1, long, 1, __Pyx_PyLong_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "spacy/symbols.pyx":473
 * 
 * 
 * def sort_nums(x):             # <<<<<<<<<<<<<<
 *     return x[1]
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("spacy.symbols.sort_nums", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
/* #### Code section: module_exttypes ### */

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
/* #### Code section: initfunc_declarations ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate); /*proto*/
/* #### Code section: init_module ### */

static int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_symbols(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_symbols},
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
  {Py_mod_gil, Py_MOD_GIL_USED},
  #endif
  #if PY_VERSION_HEX >= 0x030C0000 && CYTHON_USE_MODULE_STATE
  {Py_mod_multiple_interpreters, Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED},
  #endif
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "symbols",
      0, /* m_doc */
    #if CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstatetype), /* m_size */
    #else
      (CYTHON_PEP489_MULTI_PHASE_INIT) ? 0 : -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif

/* PyModInitFuncType */
#ifndef CYTHON_NO_PYINIT_EXPORT
  #define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#else
  #ifdef __cplusplus
  #define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
  #else
  #define __Pyx_PyMODINIT_FUNC PyObject *
  #endif
#endif

__Pyx_PyMODINIT_FUNC PyInit_symbols(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_symbols(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
/* ModuleCreationPEP489 */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x03090000
static PY_INT64_T __Pyx_GetCurrentInterpreterId(void) {
    {
        PyObject *module = PyImport_ImportModule("_interpreters"); // 3.13+ I think
        if (!module) {
            PyErr_Clear(); // just try the 3.8-3.12 version
            module = PyImport_ImportModule("_xxsubinterpreters");
            if (!module) goto bad;
        }
        PyObject *current = PyObject_CallMethod(module, "get_current", NULL);
        Py_DECREF(module);
        if (!current) goto bad;
        if (PyTuple_Check(current)) {
            PyObject *new_current = PySequence_GetItem(current, 0);
            Py_DECREF(current);
            current = new_current;
            if (!new_current) goto bad;
        }
        long long as_c_int = PyLong_AsLongLong(current);
        Py_DECREF(current);
        return as_c_int;
    }
  bad:
    PySys_WriteStderr("__Pyx_GetCurrentInterpreterId failed. Try setting the C define CYTHON_PEP489_MULTI_PHASE_INIT=0\n");
    return -1;
}
#endif
#if !CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    static PY_INT64_T main_interpreter_id = -1;
#if CYTHON_COMPILING_IN_GRAAL
    PY_INT64_T current_id = PyInterpreterState_GetIDFromThreadState(PyThreadState_Get());
#elif CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX >= 0x03090000
    PY_INT64_T current_id = PyInterpreterState_GetID(PyInterpreterState_Get());
#elif CYTHON_COMPILING_IN_LIMITED_API
    PY_INT64_T current_id = __Pyx_GetCurrentInterpreterId();
#else
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
#endif
    if (unlikely(current_id == -1)) {
        return -1;
    }
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return 0;
    } else if (unlikely(main_interpreter_id != current_id)) {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#endif
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    #if !CYTHON_USE_MODULE_STATE
    if (__Pyx_check_single_interpreter())
        return NULL;
    #endif
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_symbols(PyObject *__pyx_pyinit_module)
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  __pyx_mstatetype *__pyx_mstate = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'symbols' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #else
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_t_1 = __pyx_pyinit_module;
  Py_INCREF(__pyx_t_1);
  #else
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #if CYTHON_USE_MODULE_STATE
  {
    int add_module_result = __Pyx_State_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "symbols" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = __pyx_t_1;
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
  PyUnstable_Module_SetGIL(__pyx_m, Py_MOD_GIL_USED);
  #endif
  __pyx_mstate = __pyx_mstate_global;
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_mstate->__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_mstate->__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_mstate->__pyx_d);
  __pyx_mstate->__pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_mstate->__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_cython_runtime = __Pyx_PyImport_AddModuleRef("cython_runtime"); if (unlikely(!__pyx_mstate->__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_mstate->__pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /* ImportRefnannyAPI */
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif

__Pyx_RefNannySetupContext("PyInit_symbols", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_mstate->__pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_mstate->__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__pyx_module_is_main_spacy__symbols) {
    if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_name, __pyx_mstate_global->__pyx_n_u_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "spacy.symbols")) {
      if (unlikely((PyDict_SetItemString(modules, "spacy.symbols", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_CreateCodeObjects(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code(__pyx_mstate);
  (void)__Pyx_modinit_variable_export_code(__pyx_mstate);
  (void)__Pyx_modinit_function_export_code(__pyx_mstate);
  (void)__Pyx_modinit_type_init_code(__pyx_mstate);
  (void)__Pyx_modinit_type_import_code(__pyx_mstate);
  (void)__Pyx_modinit_variable_import_code(__pyx_mstate);
  (void)__Pyx_modinit_function_import_code(__pyx_mstate);
  /*--- Execution code ---*/

  /* "spacy/symbols.pyx":4
 * # cython: profile=False
 * IDS = {
 *     "": NIL,             # <<<<<<<<<<<<<<
 *     "IS_ALPHA": IS_ALPHA,
 *     "IS_ASCII": IS_ASCII,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(457); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_NIL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_kp_u_, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":5
 * IDS = {
 *     "": NIL,
 *     "IS_ALPHA": IS_ALPHA,             # <<<<<<<<<<<<<<
 *     "IS_ASCII": IS_ASCII,
 *     "IS_DIGIT": IS_DIGIT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_ALPHA); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_ALPHA, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":6
 *     "": NIL,
 *     "IS_ALPHA": IS_ALPHA,
 *     "IS_ASCII": IS_ASCII,             # <<<<<<<<<<<<<<
 *     "IS_DIGIT": IS_DIGIT,
 *     "IS_LOWER": IS_LOWER,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_ASCII); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_ASCII, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":7
 *     "IS_ALPHA": IS_ALPHA,
 *     "IS_ASCII": IS_ASCII,
 *     "IS_DIGIT": IS_DIGIT,             # <<<<<<<<<<<<<<
 *     "IS_LOWER": IS_LOWER,
 *     "IS_PUNCT": IS_PUNCT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_DIGIT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_DIGIT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":8
 *     "IS_ASCII": IS_ASCII,
 *     "IS_DIGIT": IS_DIGIT,
 *     "IS_LOWER": IS_LOWER,             # <<<<<<<<<<<<<<
 *     "IS_PUNCT": IS_PUNCT,
 *     "IS_SPACE": IS_SPACE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_LOWER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_LOWER, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":9
 *     "IS_DIGIT": IS_DIGIT,
 *     "IS_LOWER": IS_LOWER,
 *     "IS_PUNCT": IS_PUNCT,             # <<<<<<<<<<<<<<
 *     "IS_SPACE": IS_SPACE,
 *     "IS_TITLE": IS_TITLE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_PUNCT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_PUNCT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":10
 *     "IS_LOWER": IS_LOWER,
 *     "IS_PUNCT": IS_PUNCT,
 *     "IS_SPACE": IS_SPACE,             # <<<<<<<<<<<<<<
 *     "IS_TITLE": IS_TITLE,
 *     "IS_UPPER": IS_UPPER,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_SPACE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_SPACE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":11
 *     "IS_PUNCT": IS_PUNCT,
 *     "IS_SPACE": IS_SPACE,
 *     "IS_TITLE": IS_TITLE,             # <<<<<<<<<<<<<<
 *     "IS_UPPER": IS_UPPER,
 *     "LIKE_URL": LIKE_URL,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_TITLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_TITLE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":12
 *     "IS_SPACE": IS_SPACE,
 *     "IS_TITLE": IS_TITLE,
 *     "IS_UPPER": IS_UPPER,             # <<<<<<<<<<<<<<
 *     "LIKE_URL": LIKE_URL,
 *     "LIKE_NUM": LIKE_NUM,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_UPPER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_UPPER, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":13
 *     "IS_TITLE": IS_TITLE,
 *     "IS_UPPER": IS_UPPER,
 *     "LIKE_URL": LIKE_URL,             # <<<<<<<<<<<<<<
 *     "LIKE_NUM": LIKE_NUM,
 *     "LIKE_EMAIL": LIKE_EMAIL,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LIKE_URL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LIKE_URL, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":14
 *     "IS_UPPER": IS_UPPER,
 *     "LIKE_URL": LIKE_URL,
 *     "LIKE_NUM": LIKE_NUM,             # <<<<<<<<<<<<<<
 *     "LIKE_EMAIL": LIKE_EMAIL,
 *     "IS_STOP": IS_STOP,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LIKE_NUM); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LIKE_NUM, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":15
 *     "LIKE_URL": LIKE_URL,
 *     "LIKE_NUM": LIKE_NUM,
 *     "LIKE_EMAIL": LIKE_EMAIL,             # <<<<<<<<<<<<<<
 *     "IS_STOP": IS_STOP,
 *     "IS_OOV_DEPRECATED": IS_OOV_DEPRECATED,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LIKE_EMAIL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LIKE_EMAIL, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":16
 *     "LIKE_NUM": LIKE_NUM,
 *     "LIKE_EMAIL": LIKE_EMAIL,
 *     "IS_STOP": IS_STOP,             # <<<<<<<<<<<<<<
 *     "IS_OOV_DEPRECATED": IS_OOV_DEPRECATED,
 *     "IS_BRACKET": IS_BRACKET,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_STOP); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_STOP, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":17
 *     "LIKE_EMAIL": LIKE_EMAIL,
 *     "IS_STOP": IS_STOP,
 *     "IS_OOV_DEPRECATED": IS_OOV_DEPRECATED,             # <<<<<<<<<<<<<<
 *     "IS_BRACKET": IS_BRACKET,
 *     "IS_QUOTE": IS_QUOTE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_OOV_DEPRECATED); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_OOV_DEPRECATED, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":18
 *     "IS_STOP": IS_STOP,
 *     "IS_OOV_DEPRECATED": IS_OOV_DEPRECATED,
 *     "IS_BRACKET": IS_BRACKET,             # <<<<<<<<<<<<<<
 *     "IS_QUOTE": IS_QUOTE,
 *     "IS_LEFT_PUNCT": IS_LEFT_PUNCT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_BRACKET); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_BRACKET, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":19
 *     "IS_OOV_DEPRECATED": IS_OOV_DEPRECATED,
 *     "IS_BRACKET": IS_BRACKET,
 *     "IS_QUOTE": IS_QUOTE,             # <<<<<<<<<<<<<<
 *     "IS_LEFT_PUNCT": IS_LEFT_PUNCT,
 *     "IS_RIGHT_PUNCT": IS_RIGHT_PUNCT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_QUOTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_QUOTE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":20
 *     "IS_BRACKET": IS_BRACKET,
 *     "IS_QUOTE": IS_QUOTE,
 *     "IS_LEFT_PUNCT": IS_LEFT_PUNCT,             # <<<<<<<<<<<<<<
 *     "IS_RIGHT_PUNCT": IS_RIGHT_PUNCT,
 *     "IS_CURRENCY": IS_CURRENCY,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_LEFT_PUNCT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_LEFT_PUNCT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":21
 *     "IS_QUOTE": IS_QUOTE,
 *     "IS_LEFT_PUNCT": IS_LEFT_PUNCT,
 *     "IS_RIGHT_PUNCT": IS_RIGHT_PUNCT,             # <<<<<<<<<<<<<<
 *     "IS_CURRENCY": IS_CURRENCY,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_RIGHT_PUNCT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_RIGHT_PUNCT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":22
 *     "IS_LEFT_PUNCT": IS_LEFT_PUNCT,
 *     "IS_RIGHT_PUNCT": IS_RIGHT_PUNCT,
 *     "IS_CURRENCY": IS_CURRENCY,             # <<<<<<<<<<<<<<
 * 
 *     "FLAG19": FLAG19,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IS_CURRENCY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IS_CURRENCY, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":24
 *     "IS_CURRENCY": IS_CURRENCY,
 * 
 *     "FLAG19": FLAG19,             # <<<<<<<<<<<<<<
 *     "FLAG20": FLAG20,
 *     "FLAG21": FLAG21,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG19); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG19, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":25
 * 
 *     "FLAG19": FLAG19,
 *     "FLAG20": FLAG20,             # <<<<<<<<<<<<<<
 *     "FLAG21": FLAG21,
 *     "FLAG22": FLAG22,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG20); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG20, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":26
 *     "FLAG19": FLAG19,
 *     "FLAG20": FLAG20,
 *     "FLAG21": FLAG21,             # <<<<<<<<<<<<<<
 *     "FLAG22": FLAG22,
 *     "FLAG23": FLAG23,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG21); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG21, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":27
 *     "FLAG20": FLAG20,
 *     "FLAG21": FLAG21,
 *     "FLAG22": FLAG22,             # <<<<<<<<<<<<<<
 *     "FLAG23": FLAG23,
 *     "FLAG24": FLAG24,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG22); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG22, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":28
 *     "FLAG21": FLAG21,
 *     "FLAG22": FLAG22,
 *     "FLAG23": FLAG23,             # <<<<<<<<<<<<<<
 *     "FLAG24": FLAG24,
 *     "FLAG25": FLAG25,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG23); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG23, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":29
 *     "FLAG22": FLAG22,
 *     "FLAG23": FLAG23,
 *     "FLAG24": FLAG24,             # <<<<<<<<<<<<<<
 *     "FLAG25": FLAG25,
 *     "FLAG26": FLAG26,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG24, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":30
 *     "FLAG23": FLAG23,
 *     "FLAG24": FLAG24,
 *     "FLAG25": FLAG25,             # <<<<<<<<<<<<<<
 *     "FLAG26": FLAG26,
 *     "FLAG27": FLAG27,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG25, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":31
 *     "FLAG24": FLAG24,
 *     "FLAG25": FLAG25,
 *     "FLAG26": FLAG26,             # <<<<<<<<<<<<<<
 *     "FLAG27": FLAG27,
 *     "FLAG28": FLAG28,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG26); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG26, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":32
 *     "FLAG25": FLAG25,
 *     "FLAG26": FLAG26,
 *     "FLAG27": FLAG27,             # <<<<<<<<<<<<<<
 *     "FLAG28": FLAG28,
 *     "FLAG29": FLAG29,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG27); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG27, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":33
 *     "FLAG26": FLAG26,
 *     "FLAG27": FLAG27,
 *     "FLAG28": FLAG28,             # <<<<<<<<<<<<<<
 *     "FLAG29": FLAG29,
 *     "FLAG30": FLAG30,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG28); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG28, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":34
 *     "FLAG27": FLAG27,
 *     "FLAG28": FLAG28,
 *     "FLAG29": FLAG29,             # <<<<<<<<<<<<<<
 *     "FLAG30": FLAG30,
 *     "FLAG31": FLAG31,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG29); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG29, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":35
 *     "FLAG28": FLAG28,
 *     "FLAG29": FLAG29,
 *     "FLAG30": FLAG30,             # <<<<<<<<<<<<<<
 *     "FLAG31": FLAG31,
 *     "FLAG32": FLAG32,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG30); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG30, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":36
 *     "FLAG29": FLAG29,
 *     "FLAG30": FLAG30,
 *     "FLAG31": FLAG31,             # <<<<<<<<<<<<<<
 *     "FLAG32": FLAG32,
 *     "FLAG33": FLAG33,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG31); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG31, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":37
 *     "FLAG30": FLAG30,
 *     "FLAG31": FLAG31,
 *     "FLAG32": FLAG32,             # <<<<<<<<<<<<<<
 *     "FLAG33": FLAG33,
 *     "FLAG34": FLAG34,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG32); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG32, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":38
 *     "FLAG31": FLAG31,
 *     "FLAG32": FLAG32,
 *     "FLAG33": FLAG33,             # <<<<<<<<<<<<<<
 *     "FLAG34": FLAG34,
 *     "FLAG35": FLAG35,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG33); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG33, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":39
 *     "FLAG32": FLAG32,
 *     "FLAG33": FLAG33,
 *     "FLAG34": FLAG34,             # <<<<<<<<<<<<<<
 *     "FLAG35": FLAG35,
 *     "FLAG36": FLAG36,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG34); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG34, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":40
 *     "FLAG33": FLAG33,
 *     "FLAG34": FLAG34,
 *     "FLAG35": FLAG35,             # <<<<<<<<<<<<<<
 *     "FLAG36": FLAG36,
 *     "FLAG37": FLAG37,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG35); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG35, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":41
 *     "FLAG34": FLAG34,
 *     "FLAG35": FLAG35,
 *     "FLAG36": FLAG36,             # <<<<<<<<<<<<<<
 *     "FLAG37": FLAG37,
 *     "FLAG38": FLAG38,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG36); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG36, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":42
 *     "FLAG35": FLAG35,
 *     "FLAG36": FLAG36,
 *     "FLAG37": FLAG37,             # <<<<<<<<<<<<<<
 *     "FLAG38": FLAG38,
 *     "FLAG39": FLAG39,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG37); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG37, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":43
 *     "FLAG36": FLAG36,
 *     "FLAG37": FLAG37,
 *     "FLAG38": FLAG38,             # <<<<<<<<<<<<<<
 *     "FLAG39": FLAG39,
 *     "FLAG40": FLAG40,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG38); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG38, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":44
 *     "FLAG37": FLAG37,
 *     "FLAG38": FLAG38,
 *     "FLAG39": FLAG39,             # <<<<<<<<<<<<<<
 *     "FLAG40": FLAG40,
 *     "FLAG41": FLAG41,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG39); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG39, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":45
 *     "FLAG38": FLAG38,
 *     "FLAG39": FLAG39,
 *     "FLAG40": FLAG40,             # <<<<<<<<<<<<<<
 *     "FLAG41": FLAG41,
 *     "FLAG42": FLAG42,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG40); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG40, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":46
 *     "FLAG39": FLAG39,
 *     "FLAG40": FLAG40,
 *     "FLAG41": FLAG41,             # <<<<<<<<<<<<<<
 *     "FLAG42": FLAG42,
 *     "FLAG43": FLAG43,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG41); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG41, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":47
 *     "FLAG40": FLAG40,
 *     "FLAG41": FLAG41,
 *     "FLAG42": FLAG42,             # <<<<<<<<<<<<<<
 *     "FLAG43": FLAG43,
 *     "FLAG44": FLAG44,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG42); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG42, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":48
 *     "FLAG41": FLAG41,
 *     "FLAG42": FLAG42,
 *     "FLAG43": FLAG43,             # <<<<<<<<<<<<<<
 *     "FLAG44": FLAG44,
 *     "FLAG45": FLAG45,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG43); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG43, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":49
 *     "FLAG42": FLAG42,
 *     "FLAG43": FLAG43,
 *     "FLAG44": FLAG44,             # <<<<<<<<<<<<<<
 *     "FLAG45": FLAG45,
 *     "FLAG46": FLAG46,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG44); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG44, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":50
 *     "FLAG43": FLAG43,
 *     "FLAG44": FLAG44,
 *     "FLAG45": FLAG45,             # <<<<<<<<<<<<<<
 *     "FLAG46": FLAG46,
 *     "FLAG47": FLAG47,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG45); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG45, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":51
 *     "FLAG44": FLAG44,
 *     "FLAG45": FLAG45,
 *     "FLAG46": FLAG46,             # <<<<<<<<<<<<<<
 *     "FLAG47": FLAG47,
 *     "FLAG48": FLAG48,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG46); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG46, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":52
 *     "FLAG45": FLAG45,
 *     "FLAG46": FLAG46,
 *     "FLAG47": FLAG47,             # <<<<<<<<<<<<<<
 *     "FLAG48": FLAG48,
 *     "FLAG49": FLAG49,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG47); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG47, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":53
 *     "FLAG46": FLAG46,
 *     "FLAG47": FLAG47,
 *     "FLAG48": FLAG48,             # <<<<<<<<<<<<<<
 *     "FLAG49": FLAG49,
 *     "FLAG50": FLAG50,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG48); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG48, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":54
 *     "FLAG47": FLAG47,
 *     "FLAG48": FLAG48,
 *     "FLAG49": FLAG49,             # <<<<<<<<<<<<<<
 *     "FLAG50": FLAG50,
 *     "FLAG51": FLAG51,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG49); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG49, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":55
 *     "FLAG48": FLAG48,
 *     "FLAG49": FLAG49,
 *     "FLAG50": FLAG50,             # <<<<<<<<<<<<<<
 *     "FLAG51": FLAG51,
 *     "FLAG52": FLAG52,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG50); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG50, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":56
 *     "FLAG49": FLAG49,
 *     "FLAG50": FLAG50,
 *     "FLAG51": FLAG51,             # <<<<<<<<<<<<<<
 *     "FLAG52": FLAG52,
 *     "FLAG53": FLAG53,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG51); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG51, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":57
 *     "FLAG50": FLAG50,
 *     "FLAG51": FLAG51,
 *     "FLAG52": FLAG52,             # <<<<<<<<<<<<<<
 *     "FLAG53": FLAG53,
 *     "FLAG54": FLAG54,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG52); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG52, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":58
 *     "FLAG51": FLAG51,
 *     "FLAG52": FLAG52,
 *     "FLAG53": FLAG53,             # <<<<<<<<<<<<<<
 *     "FLAG54": FLAG54,
 *     "FLAG55": FLAG55,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG53); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG53, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":59
 *     "FLAG52": FLAG52,
 *     "FLAG53": FLAG53,
 *     "FLAG54": FLAG54,             # <<<<<<<<<<<<<<
 *     "FLAG55": FLAG55,
 *     "FLAG56": FLAG56,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG54); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG54, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":60
 *     "FLAG53": FLAG53,
 *     "FLAG54": FLAG54,
 *     "FLAG55": FLAG55,             # <<<<<<<<<<<<<<
 *     "FLAG56": FLAG56,
 *     "FLAG57": FLAG57,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG55); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG55, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":61
 *     "FLAG54": FLAG54,
 *     "FLAG55": FLAG55,
 *     "FLAG56": FLAG56,             # <<<<<<<<<<<<<<
 *     "FLAG57": FLAG57,
 *     "FLAG58": FLAG58,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG56); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG56, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":62
 *     "FLAG55": FLAG55,
 *     "FLAG56": FLAG56,
 *     "FLAG57": FLAG57,             # <<<<<<<<<<<<<<
 *     "FLAG58": FLAG58,
 *     "FLAG59": FLAG59,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG57); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG57, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":63
 *     "FLAG56": FLAG56,
 *     "FLAG57": FLAG57,
 *     "FLAG58": FLAG58,             # <<<<<<<<<<<<<<
 *     "FLAG59": FLAG59,
 *     "FLAG60": FLAG60,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG58); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG58, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":64
 *     "FLAG57": FLAG57,
 *     "FLAG58": FLAG58,
 *     "FLAG59": FLAG59,             # <<<<<<<<<<<<<<
 *     "FLAG60": FLAG60,
 *     "FLAG61": FLAG61,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG59); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG59, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":65
 *     "FLAG58": FLAG58,
 *     "FLAG59": FLAG59,
 *     "FLAG60": FLAG60,             # <<<<<<<<<<<<<<
 *     "FLAG61": FLAG61,
 *     "FLAG62": FLAG62,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG60); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG60, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":66
 *     "FLAG59": FLAG59,
 *     "FLAG60": FLAG60,
 *     "FLAG61": FLAG61,             # <<<<<<<<<<<<<<
 *     "FLAG62": FLAG62,
 *     "FLAG63": FLAG63,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG61); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG61, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":67
 *     "FLAG60": FLAG60,
 *     "FLAG61": FLAG61,
 *     "FLAG62": FLAG62,             # <<<<<<<<<<<<<<
 *     "FLAG63": FLAG63,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG62); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG62, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":68
 *     "FLAG61": FLAG61,
 *     "FLAG62": FLAG62,
 *     "FLAG63": FLAG63,             # <<<<<<<<<<<<<<
 * 
 *     "ID": ID,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FLAG63); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FLAG63, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":70
 *     "FLAG63": FLAG63,
 * 
 *     "ID": ID,             # <<<<<<<<<<<<<<
 *     "ORTH": ORTH,
 *     "LOWER": LOWER,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ID); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ID, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":71
 * 
 *     "ID": ID,
 *     "ORTH": ORTH,             # <<<<<<<<<<<<<<
 *     "LOWER": LOWER,
 *     "NORM": NORM,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ORTH); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ORTH, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":72
 *     "ID": ID,
 *     "ORTH": ORTH,
 *     "LOWER": LOWER,             # <<<<<<<<<<<<<<
 *     "NORM": NORM,
 *     "SHAPE": SHAPE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LOWER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LOWER, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":73
 *     "ORTH": ORTH,
 *     "LOWER": LOWER,
 *     "NORM": NORM,             # <<<<<<<<<<<<<<
 *     "SHAPE": SHAPE,
 *     "PREFIX": PREFIX,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_NORM); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_NORM, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":74
 *     "LOWER": LOWER,
 *     "NORM": NORM,
 *     "SHAPE": SHAPE,             # <<<<<<<<<<<<<<
 *     "PREFIX": PREFIX,
 *     "SUFFIX": SUFFIX,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SHAPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SHAPE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":75
 *     "NORM": NORM,
 *     "SHAPE": SHAPE,
 *     "PREFIX": PREFIX,             # <<<<<<<<<<<<<<
 *     "SUFFIX": SUFFIX,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PREFIX); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PREFIX, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":76
 *     "SHAPE": SHAPE,
 *     "PREFIX": PREFIX,
 *     "SUFFIX": SUFFIX,             # <<<<<<<<<<<<<<
 * 
 *     "LENGTH": LENGTH,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SUFFIX); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SUFFIX, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":78
 *     "SUFFIX": SUFFIX,
 * 
 *     "LENGTH": LENGTH,             # <<<<<<<<<<<<<<
 *     "CLUSTER": CLUSTER,
 *     "LEMMA": LEMMA,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LENGTH); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LENGTH, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":79
 * 
 *     "LENGTH": LENGTH,
 *     "CLUSTER": CLUSTER,             # <<<<<<<<<<<<<<
 *     "LEMMA": LEMMA,
 *     "POS": POS,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_CLUSTER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_CLUSTER, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":80
 *     "LENGTH": LENGTH,
 *     "CLUSTER": CLUSTER,
 *     "LEMMA": LEMMA,             # <<<<<<<<<<<<<<
 *     "POS": POS,
 *     "TAG": TAG,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LEMMA); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LEMMA, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":81
 *     "CLUSTER": CLUSTER,
 *     "LEMMA": LEMMA,
 *     "POS": POS,             # <<<<<<<<<<<<<<
 *     "TAG": TAG,
 *     "DEP": DEP,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_POS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_POS, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":82
 *     "LEMMA": LEMMA,
 *     "POS": POS,
 *     "TAG": TAG,             # <<<<<<<<<<<<<<
 *     "DEP": DEP,
 *     "ENT_IOB": ENT_IOB,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_TAG); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_TAG, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":83
 *     "POS": POS,
 *     "TAG": TAG,
 *     "DEP": DEP,             # <<<<<<<<<<<<<<
 *     "ENT_IOB": ENT_IOB,
 *     "ENT_TYPE": ENT_TYPE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEP); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEP, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":84
 *     "TAG": TAG,
 *     "DEP": DEP,
 *     "ENT_IOB": ENT_IOB,             # <<<<<<<<<<<<<<
 *     "ENT_TYPE": ENT_TYPE,
 *     "ENT_ID": ENT_ID,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ENT_IOB); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ENT_IOB, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":85
 *     "DEP": DEP,
 *     "ENT_IOB": ENT_IOB,
 *     "ENT_TYPE": ENT_TYPE,             # <<<<<<<<<<<<<<
 *     "ENT_ID": ENT_ID,
 *     "ENT_KB_ID": ENT_KB_ID,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ENT_TYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ENT_TYPE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":86
 *     "ENT_IOB": ENT_IOB,
 *     "ENT_TYPE": ENT_TYPE,
 *     "ENT_ID": ENT_ID,             # <<<<<<<<<<<<<<
 *     "ENT_KB_ID": ENT_KB_ID,
 *     "HEAD": HEAD,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ENT_ID); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ENT_ID, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":87
 *     "ENT_TYPE": ENT_TYPE,
 *     "ENT_ID": ENT_ID,
 *     "ENT_KB_ID": ENT_KB_ID,             # <<<<<<<<<<<<<<
 *     "HEAD": HEAD,
 *     "SENT_START": SENT_START,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ENT_KB_ID); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ENT_KB_ID, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":88
 *     "ENT_ID": ENT_ID,
 *     "ENT_KB_ID": ENT_KB_ID,
 *     "HEAD": HEAD,             # <<<<<<<<<<<<<<
 *     "SENT_START": SENT_START,
 *     "SPACY": SPACY,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_HEAD); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_HEAD, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":89
 *     "ENT_KB_ID": ENT_KB_ID,
 *     "HEAD": HEAD,
 *     "SENT_START": SENT_START,             # <<<<<<<<<<<<<<
 *     "SPACY": SPACY,
 *     "PROB": PROB,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SENT_START); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SENT_START, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":90
 *     "HEAD": HEAD,
 *     "SENT_START": SENT_START,
 *     "SPACY": SPACY,             # <<<<<<<<<<<<<<
 *     "PROB": PROB,
 *     "LANG": LANG,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SPACY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SPACY, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":91
 *     "SENT_START": SENT_START,
 *     "SPACY": SPACY,
 *     "PROB": PROB,             # <<<<<<<<<<<<<<
 *     "LANG": LANG,
 *     "IDX": IDX,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PROB); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PROB, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":92
 *     "SPACY": SPACY,
 *     "PROB": PROB,
 *     "LANG": LANG,             # <<<<<<<<<<<<<<
 *     "IDX": IDX,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LANG); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LANG, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":93
 *     "PROB": PROB,
 *     "LANG": LANG,
 *     "IDX": IDX,             # <<<<<<<<<<<<<<
 * 
 *     "ADJ": ADJ,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_IDX); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_IDX, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":95
 *     "IDX": IDX,
 * 
 *     "ADJ": ADJ,             # <<<<<<<<<<<<<<
 *     "ADP": ADP,
 *     "ADV": ADV,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ADJ); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ADJ, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":96
 * 
 *     "ADJ": ADJ,
 *     "ADP": ADP,             # <<<<<<<<<<<<<<
 *     "ADV": ADV,
 *     "AUX": AUX,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ADP); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ADP, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":97
 *     "ADJ": ADJ,
 *     "ADP": ADP,
 *     "ADV": ADV,             # <<<<<<<<<<<<<<
 *     "AUX": AUX,
 *     "CONJ": CONJ,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ADV); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ADV, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":98
 *     "ADP": ADP,
 *     "ADV": ADV,
 *     "AUX": AUX,             # <<<<<<<<<<<<<<
 *     "CONJ": CONJ,
 *     "CCONJ": CCONJ,  # U20
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_AUX); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_AUX, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":99
 *     "ADV": ADV,
 *     "AUX": AUX,
 *     "CONJ": CONJ,             # <<<<<<<<<<<<<<
 *     "CCONJ": CCONJ,  # U20
 *     "DET": DET,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_CONJ); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_CONJ, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":100
 *     "AUX": AUX,
 *     "CONJ": CONJ,
 *     "CCONJ": CCONJ,  # U20             # <<<<<<<<<<<<<<
 *     "DET": DET,
 *     "INTJ": INTJ,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_CCONJ); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_CCONJ, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":101
 *     "CONJ": CONJ,
 *     "CCONJ": CCONJ,  # U20
 *     "DET": DET,             # <<<<<<<<<<<<<<
 *     "INTJ": INTJ,
 *     "NOUN": NOUN,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DET); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DET, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":102
 *     "CCONJ": CCONJ,  # U20
 *     "DET": DET,
 *     "INTJ": INTJ,             # <<<<<<<<<<<<<<
 *     "NOUN": NOUN,
 *     "NUM": NUM,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_INTJ); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_INTJ, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":103
 *     "DET": DET,
 *     "INTJ": INTJ,
 *     "NOUN": NOUN,             # <<<<<<<<<<<<<<
 *     "NUM": NUM,
 *     "PART": PART,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_NOUN); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_NOUN, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":104
 *     "INTJ": INTJ,
 *     "NOUN": NOUN,
 *     "NUM": NUM,             # <<<<<<<<<<<<<<
 *     "PART": PART,
 *     "PRON": PRON,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_NUM); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_NUM, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":105
 *     "NOUN": NOUN,
 *     "NUM": NUM,
 *     "PART": PART,             # <<<<<<<<<<<<<<
 *     "PRON": PRON,
 *     "PROPN": PROPN,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PART); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PART, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":106
 *     "NUM": NUM,
 *     "PART": PART,
 *     "PRON": PRON,             # <<<<<<<<<<<<<<
 *     "PROPN": PROPN,
 *     "PUNCT": PUNCT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PRON); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PRON, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":107
 *     "PART": PART,
 *     "PRON": PRON,
 *     "PROPN": PROPN,             # <<<<<<<<<<<<<<
 *     "PUNCT": PUNCT,
 *     "SCONJ": SCONJ,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PROPN); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PROPN, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":108
 *     "PRON": PRON,
 *     "PROPN": PROPN,
 *     "PUNCT": PUNCT,             # <<<<<<<<<<<<<<
 *     "SCONJ": SCONJ,
 *     "SYM": SYM,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PUNCT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PUNCT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":109
 *     "PROPN": PROPN,
 *     "PUNCT": PUNCT,
 *     "SCONJ": SCONJ,             # <<<<<<<<<<<<<<
 *     "SYM": SYM,
 *     "VERB": VERB,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SCONJ); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SCONJ, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":110
 *     "PUNCT": PUNCT,
 *     "SCONJ": SCONJ,
 *     "SYM": SYM,             # <<<<<<<<<<<<<<
 *     "VERB": VERB,
 *     "X": X,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SYM); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SYM, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":111
 *     "SCONJ": SCONJ,
 *     "SYM": SYM,
 *     "VERB": VERB,             # <<<<<<<<<<<<<<
 *     "X": X,
 *     "EOL": EOL,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_VERB); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_VERB, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":112
 *     "SYM": SYM,
 *     "VERB": VERB,
 *     "X": X,             # <<<<<<<<<<<<<<
 *     "EOL": EOL,
 *     "SPACE": SPACE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_X); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_X, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":113
 *     "VERB": VERB,
 *     "X": X,
 *     "EOL": EOL,             # <<<<<<<<<<<<<<
 *     "SPACE": SPACE,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_EOL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_EOL, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":114
 *     "X": X,
 *     "EOL": EOL,
 *     "SPACE": SPACE,             # <<<<<<<<<<<<<<
 * 
 *     "DEPRECATED001": DEPRECATED001,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_SPACE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_SPACE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":116
 *     "SPACE": SPACE,
 * 
 *     "DEPRECATED001": DEPRECATED001,             # <<<<<<<<<<<<<<
 *     "DEPRECATED002": DEPRECATED002,
 *     "DEPRECATED003": DEPRECATED003,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED001); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED001, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":117
 * 
 *     "DEPRECATED001": DEPRECATED001,
 *     "DEPRECATED002": DEPRECATED002,             # <<<<<<<<<<<<<<
 *     "DEPRECATED003": DEPRECATED003,
 *     "DEPRECATED004": DEPRECATED004,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED002); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED002, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":118
 *     "DEPRECATED001": DEPRECATED001,
 *     "DEPRECATED002": DEPRECATED002,
 *     "DEPRECATED003": DEPRECATED003,             # <<<<<<<<<<<<<<
 *     "DEPRECATED004": DEPRECATED004,
 *     "DEPRECATED005": DEPRECATED005,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED003); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED003, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":119
 *     "DEPRECATED002": DEPRECATED002,
 *     "DEPRECATED003": DEPRECATED003,
 *     "DEPRECATED004": DEPRECATED004,             # <<<<<<<<<<<<<<
 *     "DEPRECATED005": DEPRECATED005,
 *     "DEPRECATED006": DEPRECATED006,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED004); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED004, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":120
 *     "DEPRECATED003": DEPRECATED003,
 *     "DEPRECATED004": DEPRECATED004,
 *     "DEPRECATED005": DEPRECATED005,             # <<<<<<<<<<<<<<
 *     "DEPRECATED006": DEPRECATED006,
 *     "DEPRECATED007": DEPRECATED007,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED005); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED005, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":121
 *     "DEPRECATED004": DEPRECATED004,
 *     "DEPRECATED005": DEPRECATED005,
 *     "DEPRECATED006": DEPRECATED006,             # <<<<<<<<<<<<<<
 *     "DEPRECATED007": DEPRECATED007,
 *     "DEPRECATED008": DEPRECATED008,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED006); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED006, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":122
 *     "DEPRECATED005": DEPRECATED005,
 *     "DEPRECATED006": DEPRECATED006,
 *     "DEPRECATED007": DEPRECATED007,             # <<<<<<<<<<<<<<
 *     "DEPRECATED008": DEPRECATED008,
 *     "DEPRECATED009": DEPRECATED009,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED007); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED007, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":123
 *     "DEPRECATED006": DEPRECATED006,
 *     "DEPRECATED007": DEPRECATED007,
 *     "DEPRECATED008": DEPRECATED008,             # <<<<<<<<<<<<<<
 *     "DEPRECATED009": DEPRECATED009,
 *     "DEPRECATED010": DEPRECATED010,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED008); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED008, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":124
 *     "DEPRECATED007": DEPRECATED007,
 *     "DEPRECATED008": DEPRECATED008,
 *     "DEPRECATED009": DEPRECATED009,             # <<<<<<<<<<<<<<
 *     "DEPRECATED010": DEPRECATED010,
 *     "DEPRECATED011": DEPRECATED011,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED009); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED009, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":125
 *     "DEPRECATED008": DEPRECATED008,
 *     "DEPRECATED009": DEPRECATED009,
 *     "DEPRECATED010": DEPRECATED010,             # <<<<<<<<<<<<<<
 *     "DEPRECATED011": DEPRECATED011,
 *     "DEPRECATED012": DEPRECATED012,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED010); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED010, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":126
 *     "DEPRECATED009": DEPRECATED009,
 *     "DEPRECATED010": DEPRECATED010,
 *     "DEPRECATED011": DEPRECATED011,             # <<<<<<<<<<<<<<
 *     "DEPRECATED012": DEPRECATED012,
 *     "DEPRECATED013": DEPRECATED013,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED011); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED011, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":127
 *     "DEPRECATED010": DEPRECATED010,
 *     "DEPRECATED011": DEPRECATED011,
 *     "DEPRECATED012": DEPRECATED012,             # <<<<<<<<<<<<<<
 *     "DEPRECATED013": DEPRECATED013,
 *     "DEPRECATED014": DEPRECATED014,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED012); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED012, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":128
 *     "DEPRECATED011": DEPRECATED011,
 *     "DEPRECATED012": DEPRECATED012,
 *     "DEPRECATED013": DEPRECATED013,             # <<<<<<<<<<<<<<
 *     "DEPRECATED014": DEPRECATED014,
 *     "DEPRECATED015": DEPRECATED015,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED013); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED013, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":129
 *     "DEPRECATED012": DEPRECATED012,
 *     "DEPRECATED013": DEPRECATED013,
 *     "DEPRECATED014": DEPRECATED014,             # <<<<<<<<<<<<<<
 *     "DEPRECATED015": DEPRECATED015,
 *     "DEPRECATED016": DEPRECATED016,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED014); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED014, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":130
 *     "DEPRECATED013": DEPRECATED013,
 *     "DEPRECATED014": DEPRECATED014,
 *     "DEPRECATED015": DEPRECATED015,             # <<<<<<<<<<<<<<
 *     "DEPRECATED016": DEPRECATED016,
 *     "DEPRECATED017": DEPRECATED017,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED015); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED015, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":131
 *     "DEPRECATED014": DEPRECATED014,
 *     "DEPRECATED015": DEPRECATED015,
 *     "DEPRECATED016": DEPRECATED016,             # <<<<<<<<<<<<<<
 *     "DEPRECATED017": DEPRECATED017,
 *     "DEPRECATED018": DEPRECATED018,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED016); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED016, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":132
 *     "DEPRECATED015": DEPRECATED015,
 *     "DEPRECATED016": DEPRECATED016,
 *     "DEPRECATED017": DEPRECATED017,             # <<<<<<<<<<<<<<
 *     "DEPRECATED018": DEPRECATED018,
 *     "DEPRECATED019": DEPRECATED019,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED017); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED017, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":133
 *     "DEPRECATED016": DEPRECATED016,
 *     "DEPRECATED017": DEPRECATED017,
 *     "DEPRECATED018": DEPRECATED018,             # <<<<<<<<<<<<<<
 *     "DEPRECATED019": DEPRECATED019,
 *     "DEPRECATED020": DEPRECATED020,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED018); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED018, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":134
 *     "DEPRECATED017": DEPRECATED017,
 *     "DEPRECATED018": DEPRECATED018,
 *     "DEPRECATED019": DEPRECATED019,             # <<<<<<<<<<<<<<
 *     "DEPRECATED020": DEPRECATED020,
 *     "DEPRECATED021": DEPRECATED021,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED019); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED019, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":135
 *     "DEPRECATED018": DEPRECATED018,
 *     "DEPRECATED019": DEPRECATED019,
 *     "DEPRECATED020": DEPRECATED020,             # <<<<<<<<<<<<<<
 *     "DEPRECATED021": DEPRECATED021,
 *     "DEPRECATED022": DEPRECATED022,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED020); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED020, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":136
 *     "DEPRECATED019": DEPRECATED019,
 *     "DEPRECATED020": DEPRECATED020,
 *     "DEPRECATED021": DEPRECATED021,             # <<<<<<<<<<<<<<
 *     "DEPRECATED022": DEPRECATED022,
 *     "DEPRECATED023": DEPRECATED023,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED021); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED021, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":137
 *     "DEPRECATED020": DEPRECATED020,
 *     "DEPRECATED021": DEPRECATED021,
 *     "DEPRECATED022": DEPRECATED022,             # <<<<<<<<<<<<<<
 *     "DEPRECATED023": DEPRECATED023,
 *     "DEPRECATED024": DEPRECATED024,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED022); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED022, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":138
 *     "DEPRECATED021": DEPRECATED021,
 *     "DEPRECATED022": DEPRECATED022,
 *     "DEPRECATED023": DEPRECATED023,             # <<<<<<<<<<<<<<
 *     "DEPRECATED024": DEPRECATED024,
 *     "DEPRECATED025": DEPRECATED025,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED023); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED023, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":139
 *     "DEPRECATED022": DEPRECATED022,
 *     "DEPRECATED023": DEPRECATED023,
 *     "DEPRECATED024": DEPRECATED024,             # <<<<<<<<<<<<<<
 *     "DEPRECATED025": DEPRECATED025,
 *     "DEPRECATED026": DEPRECATED026,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED024); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED024, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":140
 *     "DEPRECATED023": DEPRECATED023,
 *     "DEPRECATED024": DEPRECATED024,
 *     "DEPRECATED025": DEPRECATED025,             # <<<<<<<<<<<<<<
 *     "DEPRECATED026": DEPRECATED026,
 *     "DEPRECATED027": DEPRECATED027,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED025); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED025, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":141
 *     "DEPRECATED024": DEPRECATED024,
 *     "DEPRECATED025": DEPRECATED025,
 *     "DEPRECATED026": DEPRECATED026,             # <<<<<<<<<<<<<<
 *     "DEPRECATED027": DEPRECATED027,
 *     "DEPRECATED028": DEPRECATED028,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED026); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED026, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":142
 *     "DEPRECATED025": DEPRECATED025,
 *     "DEPRECATED026": DEPRECATED026,
 *     "DEPRECATED027": DEPRECATED027,             # <<<<<<<<<<<<<<
 *     "DEPRECATED028": DEPRECATED028,
 *     "DEPRECATED029": DEPRECATED029,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED027); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED027, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":143
 *     "DEPRECATED026": DEPRECATED026,
 *     "DEPRECATED027": DEPRECATED027,
 *     "DEPRECATED028": DEPRECATED028,             # <<<<<<<<<<<<<<
 *     "DEPRECATED029": DEPRECATED029,
 *     "DEPRECATED030": DEPRECATED030,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED028); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED028, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":144
 *     "DEPRECATED027": DEPRECATED027,
 *     "DEPRECATED028": DEPRECATED028,
 *     "DEPRECATED029": DEPRECATED029,             # <<<<<<<<<<<<<<
 *     "DEPRECATED030": DEPRECATED030,
 *     "DEPRECATED031": DEPRECATED031,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED029); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED029, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":145
 *     "DEPRECATED028": DEPRECATED028,
 *     "DEPRECATED029": DEPRECATED029,
 *     "DEPRECATED030": DEPRECATED030,             # <<<<<<<<<<<<<<
 *     "DEPRECATED031": DEPRECATED031,
 *     "DEPRECATED032": DEPRECATED032,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED030); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED030, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":146
 *     "DEPRECATED029": DEPRECATED029,
 *     "DEPRECATED030": DEPRECATED030,
 *     "DEPRECATED031": DEPRECATED031,             # <<<<<<<<<<<<<<
 *     "DEPRECATED032": DEPRECATED032,
 *     "DEPRECATED033": DEPRECATED033,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED031); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED031, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":147
 *     "DEPRECATED030": DEPRECATED030,
 *     "DEPRECATED031": DEPRECATED031,
 *     "DEPRECATED032": DEPRECATED032,             # <<<<<<<<<<<<<<
 *     "DEPRECATED033": DEPRECATED033,
 *     "DEPRECATED034": DEPRECATED034,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED032); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED032, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":148
 *     "DEPRECATED031": DEPRECATED031,
 *     "DEPRECATED032": DEPRECATED032,
 *     "DEPRECATED033": DEPRECATED033,             # <<<<<<<<<<<<<<
 *     "DEPRECATED034": DEPRECATED034,
 *     "DEPRECATED035": DEPRECATED035,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED033); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED033, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":149
 *     "DEPRECATED032": DEPRECATED032,
 *     "DEPRECATED033": DEPRECATED033,
 *     "DEPRECATED034": DEPRECATED034,             # <<<<<<<<<<<<<<
 *     "DEPRECATED035": DEPRECATED035,
 *     "DEPRECATED036": DEPRECATED036,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED034); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED034, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":150
 *     "DEPRECATED033": DEPRECATED033,
 *     "DEPRECATED034": DEPRECATED034,
 *     "DEPRECATED035": DEPRECATED035,             # <<<<<<<<<<<<<<
 *     "DEPRECATED036": DEPRECATED036,
 *     "DEPRECATED037": DEPRECATED037,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED035); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED035, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":151
 *     "DEPRECATED034": DEPRECATED034,
 *     "DEPRECATED035": DEPRECATED035,
 *     "DEPRECATED036": DEPRECATED036,             # <<<<<<<<<<<<<<
 *     "DEPRECATED037": DEPRECATED037,
 *     "DEPRECATED038": DEPRECATED038,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED036); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED036, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":152
 *     "DEPRECATED035": DEPRECATED035,
 *     "DEPRECATED036": DEPRECATED036,
 *     "DEPRECATED037": DEPRECATED037,             # <<<<<<<<<<<<<<
 *     "DEPRECATED038": DEPRECATED038,
 *     "DEPRECATED039": DEPRECATED039,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED037); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED037, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":153
 *     "DEPRECATED036": DEPRECATED036,
 *     "DEPRECATED037": DEPRECATED037,
 *     "DEPRECATED038": DEPRECATED038,             # <<<<<<<<<<<<<<
 *     "DEPRECATED039": DEPRECATED039,
 *     "DEPRECATED040": DEPRECATED040,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED038); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED038, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":154
 *     "DEPRECATED037": DEPRECATED037,
 *     "DEPRECATED038": DEPRECATED038,
 *     "DEPRECATED039": DEPRECATED039,             # <<<<<<<<<<<<<<
 *     "DEPRECATED040": DEPRECATED040,
 *     "DEPRECATED041": DEPRECATED041,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED039); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED039, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":155
 *     "DEPRECATED038": DEPRECATED038,
 *     "DEPRECATED039": DEPRECATED039,
 *     "DEPRECATED040": DEPRECATED040,             # <<<<<<<<<<<<<<
 *     "DEPRECATED041": DEPRECATED041,
 *     "DEPRECATED042": DEPRECATED042,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED040); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED040, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":156
 *     "DEPRECATED039": DEPRECATED039,
 *     "DEPRECATED040": DEPRECATED040,
 *     "DEPRECATED041": DEPRECATED041,             # <<<<<<<<<<<<<<
 *     "DEPRECATED042": DEPRECATED042,
 *     "DEPRECATED043": DEPRECATED043,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED041); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED041, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":157
 *     "DEPRECATED040": DEPRECATED040,
 *     "DEPRECATED041": DEPRECATED041,
 *     "DEPRECATED042": DEPRECATED042,             # <<<<<<<<<<<<<<
 *     "DEPRECATED043": DEPRECATED043,
 *     "DEPRECATED044": DEPRECATED044,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED042); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED042, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":158
 *     "DEPRECATED041": DEPRECATED041,
 *     "DEPRECATED042": DEPRECATED042,
 *     "DEPRECATED043": DEPRECATED043,             # <<<<<<<<<<<<<<
 *     "DEPRECATED044": DEPRECATED044,
 *     "DEPRECATED045": DEPRECATED045,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED043); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED043, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":159
 *     "DEPRECATED042": DEPRECATED042,
 *     "DEPRECATED043": DEPRECATED043,
 *     "DEPRECATED044": DEPRECATED044,             # <<<<<<<<<<<<<<
 *     "DEPRECATED045": DEPRECATED045,
 *     "DEPRECATED046": DEPRECATED046,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED044); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED044, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":160
 *     "DEPRECATED043": DEPRECATED043,
 *     "DEPRECATED044": DEPRECATED044,
 *     "DEPRECATED045": DEPRECATED045,             # <<<<<<<<<<<<<<
 *     "DEPRECATED046": DEPRECATED046,
 *     "DEPRECATED047": DEPRECATED047,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED045); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED045, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":161
 *     "DEPRECATED044": DEPRECATED044,
 *     "DEPRECATED045": DEPRECATED045,
 *     "DEPRECATED046": DEPRECATED046,             # <<<<<<<<<<<<<<
 *     "DEPRECATED047": DEPRECATED047,
 *     "DEPRECATED048": DEPRECATED048,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED046); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED046, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":162
 *     "DEPRECATED045": DEPRECATED045,
 *     "DEPRECATED046": DEPRECATED046,
 *     "DEPRECATED047": DEPRECATED047,             # <<<<<<<<<<<<<<
 *     "DEPRECATED048": DEPRECATED048,
 *     "DEPRECATED049": DEPRECATED049,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED047); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED047, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":163
 *     "DEPRECATED046": DEPRECATED046,
 *     "DEPRECATED047": DEPRECATED047,
 *     "DEPRECATED048": DEPRECATED048,             # <<<<<<<<<<<<<<
 *     "DEPRECATED049": DEPRECATED049,
 *     "DEPRECATED050": DEPRECATED050,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED048); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED048, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":164
 *     "DEPRECATED047": DEPRECATED047,
 *     "DEPRECATED048": DEPRECATED048,
 *     "DEPRECATED049": DEPRECATED049,             # <<<<<<<<<<<<<<
 *     "DEPRECATED050": DEPRECATED050,
 *     "DEPRECATED051": DEPRECATED051,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED049); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED049, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":165
 *     "DEPRECATED048": DEPRECATED048,
 *     "DEPRECATED049": DEPRECATED049,
 *     "DEPRECATED050": DEPRECATED050,             # <<<<<<<<<<<<<<
 *     "DEPRECATED051": DEPRECATED051,
 *     "DEPRECATED052": DEPRECATED052,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED050); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED050, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":166
 *     "DEPRECATED049": DEPRECATED049,
 *     "DEPRECATED050": DEPRECATED050,
 *     "DEPRECATED051": DEPRECATED051,             # <<<<<<<<<<<<<<
 *     "DEPRECATED052": DEPRECATED052,
 *     "DEPRECATED053": DEPRECATED053,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED051); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED051, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":167
 *     "DEPRECATED050": DEPRECATED050,
 *     "DEPRECATED051": DEPRECATED051,
 *     "DEPRECATED052": DEPRECATED052,             # <<<<<<<<<<<<<<
 *     "DEPRECATED053": DEPRECATED053,
 *     "DEPRECATED054": DEPRECATED054,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED052); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED052, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":168
 *     "DEPRECATED051": DEPRECATED051,
 *     "DEPRECATED052": DEPRECATED052,
 *     "DEPRECATED053": DEPRECATED053,             # <<<<<<<<<<<<<<
 *     "DEPRECATED054": DEPRECATED054,
 *     "DEPRECATED055": DEPRECATED055,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED053); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED053, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":169
 *     "DEPRECATED052": DEPRECATED052,
 *     "DEPRECATED053": DEPRECATED053,
 *     "DEPRECATED054": DEPRECATED054,             # <<<<<<<<<<<<<<
 *     "DEPRECATED055": DEPRECATED055,
 *     "DEPRECATED056": DEPRECATED056,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED054); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED054, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":170
 *     "DEPRECATED053": DEPRECATED053,
 *     "DEPRECATED054": DEPRECATED054,
 *     "DEPRECATED055": DEPRECATED055,             # <<<<<<<<<<<<<<
 *     "DEPRECATED056": DEPRECATED056,
 *     "DEPRECATED057": DEPRECATED057,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED055); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED055, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":171
 *     "DEPRECATED054": DEPRECATED054,
 *     "DEPRECATED055": DEPRECATED055,
 *     "DEPRECATED056": DEPRECATED056,             # <<<<<<<<<<<<<<
 *     "DEPRECATED057": DEPRECATED057,
 *     "DEPRECATED058": DEPRECATED058,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED056); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED056, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":172
 *     "DEPRECATED055": DEPRECATED055,
 *     "DEPRECATED056": DEPRECATED056,
 *     "DEPRECATED057": DEPRECATED057,             # <<<<<<<<<<<<<<
 *     "DEPRECATED058": DEPRECATED058,
 *     "DEPRECATED059": DEPRECATED059,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED057); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED057, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":173
 *     "DEPRECATED056": DEPRECATED056,
 *     "DEPRECATED057": DEPRECATED057,
 *     "DEPRECATED058": DEPRECATED058,             # <<<<<<<<<<<<<<
 *     "DEPRECATED059": DEPRECATED059,
 *     "DEPRECATED060": DEPRECATED060,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED058); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED058, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":174
 *     "DEPRECATED057": DEPRECATED057,
 *     "DEPRECATED058": DEPRECATED058,
 *     "DEPRECATED059": DEPRECATED059,             # <<<<<<<<<<<<<<
 *     "DEPRECATED060": DEPRECATED060,
 *     "DEPRECATED061": DEPRECATED061,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED059); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED059, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":175
 *     "DEPRECATED058": DEPRECATED058,
 *     "DEPRECATED059": DEPRECATED059,
 *     "DEPRECATED060": DEPRECATED060,             # <<<<<<<<<<<<<<
 *     "DEPRECATED061": DEPRECATED061,
 *     "DEPRECATED062": DEPRECATED062,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED060); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED060, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":176
 *     "DEPRECATED059": DEPRECATED059,
 *     "DEPRECATED060": DEPRECATED060,
 *     "DEPRECATED061": DEPRECATED061,             # <<<<<<<<<<<<<<
 *     "DEPRECATED062": DEPRECATED062,
 *     "DEPRECATED063": DEPRECATED063,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED061); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED061, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":177
 *     "DEPRECATED060": DEPRECATED060,
 *     "DEPRECATED061": DEPRECATED061,
 *     "DEPRECATED062": DEPRECATED062,             # <<<<<<<<<<<<<<
 *     "DEPRECATED063": DEPRECATED063,
 *     "DEPRECATED064": DEPRECATED064,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED062); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED062, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":178
 *     "DEPRECATED061": DEPRECATED061,
 *     "DEPRECATED062": DEPRECATED062,
 *     "DEPRECATED063": DEPRECATED063,             # <<<<<<<<<<<<<<
 *     "DEPRECATED064": DEPRECATED064,
 *     "DEPRECATED065": DEPRECATED065,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED063); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED063, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":179
 *     "DEPRECATED062": DEPRECATED062,
 *     "DEPRECATED063": DEPRECATED063,
 *     "DEPRECATED064": DEPRECATED064,             # <<<<<<<<<<<<<<
 *     "DEPRECATED065": DEPRECATED065,
 *     "DEPRECATED066": DEPRECATED066,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED064); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED064, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":180
 *     "DEPRECATED063": DEPRECATED063,
 *     "DEPRECATED064": DEPRECATED064,
 *     "DEPRECATED065": DEPRECATED065,             # <<<<<<<<<<<<<<
 *     "DEPRECATED066": DEPRECATED066,
 *     "DEPRECATED067": DEPRECATED067,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED065); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED065, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":181
 *     "DEPRECATED064": DEPRECATED064,
 *     "DEPRECATED065": DEPRECATED065,
 *     "DEPRECATED066": DEPRECATED066,             # <<<<<<<<<<<<<<
 *     "DEPRECATED067": DEPRECATED067,
 *     "DEPRECATED068": DEPRECATED068,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED066); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED066, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":182
 *     "DEPRECATED065": DEPRECATED065,
 *     "DEPRECATED066": DEPRECATED066,
 *     "DEPRECATED067": DEPRECATED067,             # <<<<<<<<<<<<<<
 *     "DEPRECATED068": DEPRECATED068,
 *     "DEPRECATED069": DEPRECATED069,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED067); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED067, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":183
 *     "DEPRECATED066": DEPRECATED066,
 *     "DEPRECATED067": DEPRECATED067,
 *     "DEPRECATED068": DEPRECATED068,             # <<<<<<<<<<<<<<
 *     "DEPRECATED069": DEPRECATED069,
 *     "DEPRECATED070": DEPRECATED070,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED068); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED068, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":184
 *     "DEPRECATED067": DEPRECATED067,
 *     "DEPRECATED068": DEPRECATED068,
 *     "DEPRECATED069": DEPRECATED069,             # <<<<<<<<<<<<<<
 *     "DEPRECATED070": DEPRECATED070,
 *     "DEPRECATED071": DEPRECATED071,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED069); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED069, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":185
 *     "DEPRECATED068": DEPRECATED068,
 *     "DEPRECATED069": DEPRECATED069,
 *     "DEPRECATED070": DEPRECATED070,             # <<<<<<<<<<<<<<
 *     "DEPRECATED071": DEPRECATED071,
 *     "DEPRECATED072": DEPRECATED072,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED070); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED070, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":186
 *     "DEPRECATED069": DEPRECATED069,
 *     "DEPRECATED070": DEPRECATED070,
 *     "DEPRECATED071": DEPRECATED071,             # <<<<<<<<<<<<<<
 *     "DEPRECATED072": DEPRECATED072,
 *     "DEPRECATED073": DEPRECATED073,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED071); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED071, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":187
 *     "DEPRECATED070": DEPRECATED070,
 *     "DEPRECATED071": DEPRECATED071,
 *     "DEPRECATED072": DEPRECATED072,             # <<<<<<<<<<<<<<
 *     "DEPRECATED073": DEPRECATED073,
 *     "DEPRECATED074": DEPRECATED074,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED072); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED072, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":188
 *     "DEPRECATED071": DEPRECATED071,
 *     "DEPRECATED072": DEPRECATED072,
 *     "DEPRECATED073": DEPRECATED073,             # <<<<<<<<<<<<<<
 *     "DEPRECATED074": DEPRECATED074,
 *     "DEPRECATED075": DEPRECATED075,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED073); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED073, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":189
 *     "DEPRECATED072": DEPRECATED072,
 *     "DEPRECATED073": DEPRECATED073,
 *     "DEPRECATED074": DEPRECATED074,             # <<<<<<<<<<<<<<
 *     "DEPRECATED075": DEPRECATED075,
 *     "DEPRECATED076": DEPRECATED076,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED074); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED074, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":190
 *     "DEPRECATED073": DEPRECATED073,
 *     "DEPRECATED074": DEPRECATED074,
 *     "DEPRECATED075": DEPRECATED075,             # <<<<<<<<<<<<<<
 *     "DEPRECATED076": DEPRECATED076,
 *     "DEPRECATED077": DEPRECATED077,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED075); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED075, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":191
 *     "DEPRECATED074": DEPRECATED074,
 *     "DEPRECATED075": DEPRECATED075,
 *     "DEPRECATED076": DEPRECATED076,             # <<<<<<<<<<<<<<
 *     "DEPRECATED077": DEPRECATED077,
 *     "DEPRECATED078": DEPRECATED078,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED076); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED076, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":192
 *     "DEPRECATED075": DEPRECATED075,
 *     "DEPRECATED076": DEPRECATED076,
 *     "DEPRECATED077": DEPRECATED077,             # <<<<<<<<<<<<<<
 *     "DEPRECATED078": DEPRECATED078,
 *     "DEPRECATED079": DEPRECATED079,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED077); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED077, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":193
 *     "DEPRECATED076": DEPRECATED076,
 *     "DEPRECATED077": DEPRECATED077,
 *     "DEPRECATED078": DEPRECATED078,             # <<<<<<<<<<<<<<
 *     "DEPRECATED079": DEPRECATED079,
 *     "DEPRECATED080": DEPRECATED080,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED078); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED078, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":194
 *     "DEPRECATED077": DEPRECATED077,
 *     "DEPRECATED078": DEPRECATED078,
 *     "DEPRECATED079": DEPRECATED079,             # <<<<<<<<<<<<<<
 *     "DEPRECATED080": DEPRECATED080,
 *     "DEPRECATED081": DEPRECATED081,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED079); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED079, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":195
 *     "DEPRECATED078": DEPRECATED078,
 *     "DEPRECATED079": DEPRECATED079,
 *     "DEPRECATED080": DEPRECATED080,             # <<<<<<<<<<<<<<
 *     "DEPRECATED081": DEPRECATED081,
 *     "DEPRECATED082": DEPRECATED082,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED080); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED080, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":196
 *     "DEPRECATED079": DEPRECATED079,
 *     "DEPRECATED080": DEPRECATED080,
 *     "DEPRECATED081": DEPRECATED081,             # <<<<<<<<<<<<<<
 *     "DEPRECATED082": DEPRECATED082,
 *     "DEPRECATED083": DEPRECATED083,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED081); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED081, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":197
 *     "DEPRECATED080": DEPRECATED080,
 *     "DEPRECATED081": DEPRECATED081,
 *     "DEPRECATED082": DEPRECATED082,             # <<<<<<<<<<<<<<
 *     "DEPRECATED083": DEPRECATED083,
 *     "DEPRECATED084": DEPRECATED084,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED082); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED082, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":198
 *     "DEPRECATED081": DEPRECATED081,
 *     "DEPRECATED082": DEPRECATED082,
 *     "DEPRECATED083": DEPRECATED083,             # <<<<<<<<<<<<<<
 *     "DEPRECATED084": DEPRECATED084,
 *     "DEPRECATED085": DEPRECATED085,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED083); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED083, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":199
 *     "DEPRECATED082": DEPRECATED082,
 *     "DEPRECATED083": DEPRECATED083,
 *     "DEPRECATED084": DEPRECATED084,             # <<<<<<<<<<<<<<
 *     "DEPRECATED085": DEPRECATED085,
 *     "DEPRECATED086": DEPRECATED086,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED084); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED084, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":200
 *     "DEPRECATED083": DEPRECATED083,
 *     "DEPRECATED084": DEPRECATED084,
 *     "DEPRECATED085": DEPRECATED085,             # <<<<<<<<<<<<<<
 *     "DEPRECATED086": DEPRECATED086,
 *     "DEPRECATED087": DEPRECATED087,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED085); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED085, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":201
 *     "DEPRECATED084": DEPRECATED084,
 *     "DEPRECATED085": DEPRECATED085,
 *     "DEPRECATED086": DEPRECATED086,             # <<<<<<<<<<<<<<
 *     "DEPRECATED087": DEPRECATED087,
 *     "DEPRECATED088": DEPRECATED088,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED086); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED086, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":202
 *     "DEPRECATED085": DEPRECATED085,
 *     "DEPRECATED086": DEPRECATED086,
 *     "DEPRECATED087": DEPRECATED087,             # <<<<<<<<<<<<<<
 *     "DEPRECATED088": DEPRECATED088,
 *     "DEPRECATED089": DEPRECATED089,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED087); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED087, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":203
 *     "DEPRECATED086": DEPRECATED086,
 *     "DEPRECATED087": DEPRECATED087,
 *     "DEPRECATED088": DEPRECATED088,             # <<<<<<<<<<<<<<
 *     "DEPRECATED089": DEPRECATED089,
 *     "DEPRECATED090": DEPRECATED090,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED088); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED088, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":204
 *     "DEPRECATED087": DEPRECATED087,
 *     "DEPRECATED088": DEPRECATED088,
 *     "DEPRECATED089": DEPRECATED089,             # <<<<<<<<<<<<<<
 *     "DEPRECATED090": DEPRECATED090,
 *     "DEPRECATED091": DEPRECATED091,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED089); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED089, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":205
 *     "DEPRECATED088": DEPRECATED088,
 *     "DEPRECATED089": DEPRECATED089,
 *     "DEPRECATED090": DEPRECATED090,             # <<<<<<<<<<<<<<
 *     "DEPRECATED091": DEPRECATED091,
 *     "DEPRECATED092": DEPRECATED092,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED090); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED090, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":206
 *     "DEPRECATED089": DEPRECATED089,
 *     "DEPRECATED090": DEPRECATED090,
 *     "DEPRECATED091": DEPRECATED091,             # <<<<<<<<<<<<<<
 *     "DEPRECATED092": DEPRECATED092,
 *     "DEPRECATED093": DEPRECATED093,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED091); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED091, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":207
 *     "DEPRECATED090": DEPRECATED090,
 *     "DEPRECATED091": DEPRECATED091,
 *     "DEPRECATED092": DEPRECATED092,             # <<<<<<<<<<<<<<
 *     "DEPRECATED093": DEPRECATED093,
 *     "DEPRECATED094": DEPRECATED094,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED092); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED092, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":208
 *     "DEPRECATED091": DEPRECATED091,
 *     "DEPRECATED092": DEPRECATED092,
 *     "DEPRECATED093": DEPRECATED093,             # <<<<<<<<<<<<<<
 *     "DEPRECATED094": DEPRECATED094,
 *     "DEPRECATED095": DEPRECATED095,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED093); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED093, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":209
 *     "DEPRECATED092": DEPRECATED092,
 *     "DEPRECATED093": DEPRECATED093,
 *     "DEPRECATED094": DEPRECATED094,             # <<<<<<<<<<<<<<
 *     "DEPRECATED095": DEPRECATED095,
 *     "DEPRECATED096": DEPRECATED096,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED094); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED094, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":210
 *     "DEPRECATED093": DEPRECATED093,
 *     "DEPRECATED094": DEPRECATED094,
 *     "DEPRECATED095": DEPRECATED095,             # <<<<<<<<<<<<<<
 *     "DEPRECATED096": DEPRECATED096,
 *     "DEPRECATED097": DEPRECATED097,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED095); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED095, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":211
 *     "DEPRECATED094": DEPRECATED094,
 *     "DEPRECATED095": DEPRECATED095,
 *     "DEPRECATED096": DEPRECATED096,             # <<<<<<<<<<<<<<
 *     "DEPRECATED097": DEPRECATED097,
 *     "DEPRECATED098": DEPRECATED098,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED096); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED096, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":212
 *     "DEPRECATED095": DEPRECATED095,
 *     "DEPRECATED096": DEPRECATED096,
 *     "DEPRECATED097": DEPRECATED097,             # <<<<<<<<<<<<<<
 *     "DEPRECATED098": DEPRECATED098,
 *     "DEPRECATED099": DEPRECATED099,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED097); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED097, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":213
 *     "DEPRECATED096": DEPRECATED096,
 *     "DEPRECATED097": DEPRECATED097,
 *     "DEPRECATED098": DEPRECATED098,             # <<<<<<<<<<<<<<
 *     "DEPRECATED099": DEPRECATED099,
 *     "DEPRECATED100": DEPRECATED100,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED098); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED098, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":214
 *     "DEPRECATED097": DEPRECATED097,
 *     "DEPRECATED098": DEPRECATED098,
 *     "DEPRECATED099": DEPRECATED099,             # <<<<<<<<<<<<<<
 *     "DEPRECATED100": DEPRECATED100,
 *     "DEPRECATED101": DEPRECATED101,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED099); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED099, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":215
 *     "DEPRECATED098": DEPRECATED098,
 *     "DEPRECATED099": DEPRECATED099,
 *     "DEPRECATED100": DEPRECATED100,             # <<<<<<<<<<<<<<
 *     "DEPRECATED101": DEPRECATED101,
 *     "DEPRECATED102": DEPRECATED102,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED100); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED100, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":216
 *     "DEPRECATED099": DEPRECATED099,
 *     "DEPRECATED100": DEPRECATED100,
 *     "DEPRECATED101": DEPRECATED101,             # <<<<<<<<<<<<<<
 *     "DEPRECATED102": DEPRECATED102,
 *     "DEPRECATED103": DEPRECATED103,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED101); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED101, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":217
 *     "DEPRECATED100": DEPRECATED100,
 *     "DEPRECATED101": DEPRECATED101,
 *     "DEPRECATED102": DEPRECATED102,             # <<<<<<<<<<<<<<
 *     "DEPRECATED103": DEPRECATED103,
 *     "DEPRECATED104": DEPRECATED104,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED102); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED102, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":218
 *     "DEPRECATED101": DEPRECATED101,
 *     "DEPRECATED102": DEPRECATED102,
 *     "DEPRECATED103": DEPRECATED103,             # <<<<<<<<<<<<<<
 *     "DEPRECATED104": DEPRECATED104,
 *     "DEPRECATED105": DEPRECATED105,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED103); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED103, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":219
 *     "DEPRECATED102": DEPRECATED102,
 *     "DEPRECATED103": DEPRECATED103,
 *     "DEPRECATED104": DEPRECATED104,             # <<<<<<<<<<<<<<
 *     "DEPRECATED105": DEPRECATED105,
 *     "DEPRECATED106": DEPRECATED106,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED104); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED104, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":220
 *     "DEPRECATED103": DEPRECATED103,
 *     "DEPRECATED104": DEPRECATED104,
 *     "DEPRECATED105": DEPRECATED105,             # <<<<<<<<<<<<<<
 *     "DEPRECATED106": DEPRECATED106,
 *     "DEPRECATED107": DEPRECATED107,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED105); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED105, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":221
 *     "DEPRECATED104": DEPRECATED104,
 *     "DEPRECATED105": DEPRECATED105,
 *     "DEPRECATED106": DEPRECATED106,             # <<<<<<<<<<<<<<
 *     "DEPRECATED107": DEPRECATED107,
 *     "DEPRECATED108": DEPRECATED108,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED106); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED106, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":222
 *     "DEPRECATED105": DEPRECATED105,
 *     "DEPRECATED106": DEPRECATED106,
 *     "DEPRECATED107": DEPRECATED107,             # <<<<<<<<<<<<<<
 *     "DEPRECATED108": DEPRECATED108,
 *     "DEPRECATED109": DEPRECATED109,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED107); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED107, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":223
 *     "DEPRECATED106": DEPRECATED106,
 *     "DEPRECATED107": DEPRECATED107,
 *     "DEPRECATED108": DEPRECATED108,             # <<<<<<<<<<<<<<
 *     "DEPRECATED109": DEPRECATED109,
 *     "DEPRECATED110": DEPRECATED110,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED108); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED108, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":224
 *     "DEPRECATED107": DEPRECATED107,
 *     "DEPRECATED108": DEPRECATED108,
 *     "DEPRECATED109": DEPRECATED109,             # <<<<<<<<<<<<<<
 *     "DEPRECATED110": DEPRECATED110,
 *     "DEPRECATED111": DEPRECATED111,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED109); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED109, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":225
 *     "DEPRECATED108": DEPRECATED108,
 *     "DEPRECATED109": DEPRECATED109,
 *     "DEPRECATED110": DEPRECATED110,             # <<<<<<<<<<<<<<
 *     "DEPRECATED111": DEPRECATED111,
 *     "DEPRECATED112": DEPRECATED112,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED110); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED110, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":226
 *     "DEPRECATED109": DEPRECATED109,
 *     "DEPRECATED110": DEPRECATED110,
 *     "DEPRECATED111": DEPRECATED111,             # <<<<<<<<<<<<<<
 *     "DEPRECATED112": DEPRECATED112,
 *     "DEPRECATED113": DEPRECATED113,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED111); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED111, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":227
 *     "DEPRECATED110": DEPRECATED110,
 *     "DEPRECATED111": DEPRECATED111,
 *     "DEPRECATED112": DEPRECATED112,             # <<<<<<<<<<<<<<
 *     "DEPRECATED113": DEPRECATED113,
 *     "DEPRECATED114": DEPRECATED114,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED112); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED112, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":228
 *     "DEPRECATED111": DEPRECATED111,
 *     "DEPRECATED112": DEPRECATED112,
 *     "DEPRECATED113": DEPRECATED113,             # <<<<<<<<<<<<<<
 *     "DEPRECATED114": DEPRECATED114,
 *     "DEPRECATED115": DEPRECATED115,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED113); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED113, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":229
 *     "DEPRECATED112": DEPRECATED112,
 *     "DEPRECATED113": DEPRECATED113,
 *     "DEPRECATED114": DEPRECATED114,             # <<<<<<<<<<<<<<
 *     "DEPRECATED115": DEPRECATED115,
 *     "DEPRECATED116": DEPRECATED116,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED114); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED114, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":230
 *     "DEPRECATED113": DEPRECATED113,
 *     "DEPRECATED114": DEPRECATED114,
 *     "DEPRECATED115": DEPRECATED115,             # <<<<<<<<<<<<<<
 *     "DEPRECATED116": DEPRECATED116,
 *     "DEPRECATED117": DEPRECATED117,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED115); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED115, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":231
 *     "DEPRECATED114": DEPRECATED114,
 *     "DEPRECATED115": DEPRECATED115,
 *     "DEPRECATED116": DEPRECATED116,             # <<<<<<<<<<<<<<
 *     "DEPRECATED117": DEPRECATED117,
 *     "DEPRECATED118": DEPRECATED118,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED116); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED116, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":232
 *     "DEPRECATED115": DEPRECATED115,
 *     "DEPRECATED116": DEPRECATED116,
 *     "DEPRECATED117": DEPRECATED117,             # <<<<<<<<<<<<<<
 *     "DEPRECATED118": DEPRECATED118,
 *     "DEPRECATED119": DEPRECATED119,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED117); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED117, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":233
 *     "DEPRECATED116": DEPRECATED116,
 *     "DEPRECATED117": DEPRECATED117,
 *     "DEPRECATED118": DEPRECATED118,             # <<<<<<<<<<<<<<
 *     "DEPRECATED119": DEPRECATED119,
 *     "DEPRECATED120": DEPRECATED120,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED118); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED118, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":234
 *     "DEPRECATED117": DEPRECATED117,
 *     "DEPRECATED118": DEPRECATED118,
 *     "DEPRECATED119": DEPRECATED119,             # <<<<<<<<<<<<<<
 *     "DEPRECATED120": DEPRECATED120,
 *     "DEPRECATED121": DEPRECATED121,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED119); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED119, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":235
 *     "DEPRECATED118": DEPRECATED118,
 *     "DEPRECATED119": DEPRECATED119,
 *     "DEPRECATED120": DEPRECATED120,             # <<<<<<<<<<<<<<
 *     "DEPRECATED121": DEPRECATED121,
 *     "DEPRECATED122": DEPRECATED122,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED120); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED120, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":236
 *     "DEPRECATED119": DEPRECATED119,
 *     "DEPRECATED120": DEPRECATED120,
 *     "DEPRECATED121": DEPRECATED121,             # <<<<<<<<<<<<<<
 *     "DEPRECATED122": DEPRECATED122,
 *     "DEPRECATED123": DEPRECATED123,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED121); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED121, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":237
 *     "DEPRECATED120": DEPRECATED120,
 *     "DEPRECATED121": DEPRECATED121,
 *     "DEPRECATED122": DEPRECATED122,             # <<<<<<<<<<<<<<
 *     "DEPRECATED123": DEPRECATED123,
 *     "DEPRECATED124": DEPRECATED124,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED122); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED122, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":238
 *     "DEPRECATED121": DEPRECATED121,
 *     "DEPRECATED122": DEPRECATED122,
 *     "DEPRECATED123": DEPRECATED123,             # <<<<<<<<<<<<<<
 *     "DEPRECATED124": DEPRECATED124,
 *     "DEPRECATED125": DEPRECATED125,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED123); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED123, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":239
 *     "DEPRECATED122": DEPRECATED122,
 *     "DEPRECATED123": DEPRECATED123,
 *     "DEPRECATED124": DEPRECATED124,             # <<<<<<<<<<<<<<
 *     "DEPRECATED125": DEPRECATED125,
 *     "DEPRECATED126": DEPRECATED126,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED124); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED124, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":240
 *     "DEPRECATED123": DEPRECATED123,
 *     "DEPRECATED124": DEPRECATED124,
 *     "DEPRECATED125": DEPRECATED125,             # <<<<<<<<<<<<<<
 *     "DEPRECATED126": DEPRECATED126,
 *     "DEPRECATED127": DEPRECATED127,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED125); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED125, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":241
 *     "DEPRECATED124": DEPRECATED124,
 *     "DEPRECATED125": DEPRECATED125,
 *     "DEPRECATED126": DEPRECATED126,             # <<<<<<<<<<<<<<
 *     "DEPRECATED127": DEPRECATED127,
 *     "DEPRECATED128": DEPRECATED128,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED126); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED126, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":242
 *     "DEPRECATED125": DEPRECATED125,
 *     "DEPRECATED126": DEPRECATED126,
 *     "DEPRECATED127": DEPRECATED127,             # <<<<<<<<<<<<<<
 *     "DEPRECATED128": DEPRECATED128,
 *     "DEPRECATED129": DEPRECATED129,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED127); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED127, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":243
 *     "DEPRECATED126": DEPRECATED126,
 *     "DEPRECATED127": DEPRECATED127,
 *     "DEPRECATED128": DEPRECATED128,             # <<<<<<<<<<<<<<
 *     "DEPRECATED129": DEPRECATED129,
 *     "DEPRECATED130": DEPRECATED130,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED128); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED128, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":244
 *     "DEPRECATED127": DEPRECATED127,
 *     "DEPRECATED128": DEPRECATED128,
 *     "DEPRECATED129": DEPRECATED129,             # <<<<<<<<<<<<<<
 *     "DEPRECATED130": DEPRECATED130,
 *     "DEPRECATED131": DEPRECATED131,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED129); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED129, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":245
 *     "DEPRECATED128": DEPRECATED128,
 *     "DEPRECATED129": DEPRECATED129,
 *     "DEPRECATED130": DEPRECATED130,             # <<<<<<<<<<<<<<
 *     "DEPRECATED131": DEPRECATED131,
 *     "DEPRECATED132": DEPRECATED132,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED130); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED130, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":246
 *     "DEPRECATED129": DEPRECATED129,
 *     "DEPRECATED130": DEPRECATED130,
 *     "DEPRECATED131": DEPRECATED131,             # <<<<<<<<<<<<<<
 *     "DEPRECATED132": DEPRECATED132,
 *     "DEPRECATED133": DEPRECATED133,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED131); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED131, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":247
 *     "DEPRECATED130": DEPRECATED130,
 *     "DEPRECATED131": DEPRECATED131,
 *     "DEPRECATED132": DEPRECATED132,             # <<<<<<<<<<<<<<
 *     "DEPRECATED133": DEPRECATED133,
 *     "DEPRECATED134": DEPRECATED134,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED132); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED132, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":248
 *     "DEPRECATED131": DEPRECATED131,
 *     "DEPRECATED132": DEPRECATED132,
 *     "DEPRECATED133": DEPRECATED133,             # <<<<<<<<<<<<<<
 *     "DEPRECATED134": DEPRECATED134,
 *     "DEPRECATED135": DEPRECATED135,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED133); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED133, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":249
 *     "DEPRECATED132": DEPRECATED132,
 *     "DEPRECATED133": DEPRECATED133,
 *     "DEPRECATED134": DEPRECATED134,             # <<<<<<<<<<<<<<
 *     "DEPRECATED135": DEPRECATED135,
 *     "DEPRECATED136": DEPRECATED136,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED134); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED134, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":250
 *     "DEPRECATED133": DEPRECATED133,
 *     "DEPRECATED134": DEPRECATED134,
 *     "DEPRECATED135": DEPRECATED135,             # <<<<<<<<<<<<<<
 *     "DEPRECATED136": DEPRECATED136,
 *     "DEPRECATED137": DEPRECATED137,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED135); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED135, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":251
 *     "DEPRECATED134": DEPRECATED134,
 *     "DEPRECATED135": DEPRECATED135,
 *     "DEPRECATED136": DEPRECATED136,             # <<<<<<<<<<<<<<
 *     "DEPRECATED137": DEPRECATED137,
 *     "DEPRECATED138": DEPRECATED138,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED136); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED136, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":252
 *     "DEPRECATED135": DEPRECATED135,
 *     "DEPRECATED136": DEPRECATED136,
 *     "DEPRECATED137": DEPRECATED137,             # <<<<<<<<<<<<<<
 *     "DEPRECATED138": DEPRECATED138,
 *     "DEPRECATED139": DEPRECATED139,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED137); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED137, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":253
 *     "DEPRECATED136": DEPRECATED136,
 *     "DEPRECATED137": DEPRECATED137,
 *     "DEPRECATED138": DEPRECATED138,             # <<<<<<<<<<<<<<
 *     "DEPRECATED139": DEPRECATED139,
 *     "DEPRECATED140": DEPRECATED140,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED138); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED138, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":254
 *     "DEPRECATED137": DEPRECATED137,
 *     "DEPRECATED138": DEPRECATED138,
 *     "DEPRECATED139": DEPRECATED139,             # <<<<<<<<<<<<<<
 *     "DEPRECATED140": DEPRECATED140,
 *     "DEPRECATED141": DEPRECATED141,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED139); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED139, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":255
 *     "DEPRECATED138": DEPRECATED138,
 *     "DEPRECATED139": DEPRECATED139,
 *     "DEPRECATED140": DEPRECATED140,             # <<<<<<<<<<<<<<
 *     "DEPRECATED141": DEPRECATED141,
 *     "DEPRECATED142": DEPRECATED142,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED140); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED140, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":256
 *     "DEPRECATED139": DEPRECATED139,
 *     "DEPRECATED140": DEPRECATED140,
 *     "DEPRECATED141": DEPRECATED141,             # <<<<<<<<<<<<<<
 *     "DEPRECATED142": DEPRECATED142,
 *     "DEPRECATED143": DEPRECATED143,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED141); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED141, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":257
 *     "DEPRECATED140": DEPRECATED140,
 *     "DEPRECATED141": DEPRECATED141,
 *     "DEPRECATED142": DEPRECATED142,             # <<<<<<<<<<<<<<
 *     "DEPRECATED143": DEPRECATED143,
 *     "DEPRECATED144": DEPRECATED144,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED142); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED142, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":258
 *     "DEPRECATED141": DEPRECATED141,
 *     "DEPRECATED142": DEPRECATED142,
 *     "DEPRECATED143": DEPRECATED143,             # <<<<<<<<<<<<<<
 *     "DEPRECATED144": DEPRECATED144,
 *     "DEPRECATED145": DEPRECATED145,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED143); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED143, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":259
 *     "DEPRECATED142": DEPRECATED142,
 *     "DEPRECATED143": DEPRECATED143,
 *     "DEPRECATED144": DEPRECATED144,             # <<<<<<<<<<<<<<
 *     "DEPRECATED145": DEPRECATED145,
 *     "DEPRECATED146": DEPRECATED146,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED144); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED144, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":260
 *     "DEPRECATED143": DEPRECATED143,
 *     "DEPRECATED144": DEPRECATED144,
 *     "DEPRECATED145": DEPRECATED145,             # <<<<<<<<<<<<<<
 *     "DEPRECATED146": DEPRECATED146,
 *     "DEPRECATED147": DEPRECATED147,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED145); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED145, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":261
 *     "DEPRECATED144": DEPRECATED144,
 *     "DEPRECATED145": DEPRECATED145,
 *     "DEPRECATED146": DEPRECATED146,             # <<<<<<<<<<<<<<
 *     "DEPRECATED147": DEPRECATED147,
 *     "DEPRECATED148": DEPRECATED148,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED146); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED146, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":262
 *     "DEPRECATED145": DEPRECATED145,
 *     "DEPRECATED146": DEPRECATED146,
 *     "DEPRECATED147": DEPRECATED147,             # <<<<<<<<<<<<<<
 *     "DEPRECATED148": DEPRECATED148,
 *     "DEPRECATED149": DEPRECATED149,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED147); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED147, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":263
 *     "DEPRECATED146": DEPRECATED146,
 *     "DEPRECATED147": DEPRECATED147,
 *     "DEPRECATED148": DEPRECATED148,             # <<<<<<<<<<<<<<
 *     "DEPRECATED149": DEPRECATED149,
 *     "DEPRECATED150": DEPRECATED150,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED148); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED148, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":264
 *     "DEPRECATED147": DEPRECATED147,
 *     "DEPRECATED148": DEPRECATED148,
 *     "DEPRECATED149": DEPRECATED149,             # <<<<<<<<<<<<<<
 *     "DEPRECATED150": DEPRECATED150,
 *     "DEPRECATED151": DEPRECATED151,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED149); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED149, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":265
 *     "DEPRECATED148": DEPRECATED148,
 *     "DEPRECATED149": DEPRECATED149,
 *     "DEPRECATED150": DEPRECATED150,             # <<<<<<<<<<<<<<
 *     "DEPRECATED151": DEPRECATED151,
 *     "DEPRECATED152": DEPRECATED152,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED150); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED150, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":266
 *     "DEPRECATED149": DEPRECATED149,
 *     "DEPRECATED150": DEPRECATED150,
 *     "DEPRECATED151": DEPRECATED151,             # <<<<<<<<<<<<<<
 *     "DEPRECATED152": DEPRECATED152,
 *     "DEPRECATED153": DEPRECATED153,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED151); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED151, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":267
 *     "DEPRECATED150": DEPRECATED150,
 *     "DEPRECATED151": DEPRECATED151,
 *     "DEPRECATED152": DEPRECATED152,             # <<<<<<<<<<<<<<
 *     "DEPRECATED153": DEPRECATED153,
 *     "DEPRECATED154": DEPRECATED154,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED152); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED152, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":268
 *     "DEPRECATED151": DEPRECATED151,
 *     "DEPRECATED152": DEPRECATED152,
 *     "DEPRECATED153": DEPRECATED153,             # <<<<<<<<<<<<<<
 *     "DEPRECATED154": DEPRECATED154,
 *     "DEPRECATED155": DEPRECATED155,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED153); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED153, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":269
 *     "DEPRECATED152": DEPRECATED152,
 *     "DEPRECATED153": DEPRECATED153,
 *     "DEPRECATED154": DEPRECATED154,             # <<<<<<<<<<<<<<
 *     "DEPRECATED155": DEPRECATED155,
 *     "DEPRECATED156": DEPRECATED156,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED154); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED154, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":270
 *     "DEPRECATED153": DEPRECATED153,
 *     "DEPRECATED154": DEPRECATED154,
 *     "DEPRECATED155": DEPRECATED155,             # <<<<<<<<<<<<<<
 *     "DEPRECATED156": DEPRECATED156,
 *     "DEPRECATED157": DEPRECATED157,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED155); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED155, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":271
 *     "DEPRECATED154": DEPRECATED154,
 *     "DEPRECATED155": DEPRECATED155,
 *     "DEPRECATED156": DEPRECATED156,             # <<<<<<<<<<<<<<
 *     "DEPRECATED157": DEPRECATED157,
 *     "DEPRECATED158": DEPRECATED158,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED156); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED156, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":272
 *     "DEPRECATED155": DEPRECATED155,
 *     "DEPRECATED156": DEPRECATED156,
 *     "DEPRECATED157": DEPRECATED157,             # <<<<<<<<<<<<<<
 *     "DEPRECATED158": DEPRECATED158,
 *     "DEPRECATED159": DEPRECATED159,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED157); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED157, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":273
 *     "DEPRECATED156": DEPRECATED156,
 *     "DEPRECATED157": DEPRECATED157,
 *     "DEPRECATED158": DEPRECATED158,             # <<<<<<<<<<<<<<
 *     "DEPRECATED159": DEPRECATED159,
 *     "DEPRECATED160": DEPRECATED160,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED158); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED158, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":274
 *     "DEPRECATED157": DEPRECATED157,
 *     "DEPRECATED158": DEPRECATED158,
 *     "DEPRECATED159": DEPRECATED159,             # <<<<<<<<<<<<<<
 *     "DEPRECATED160": DEPRECATED160,
 *     "DEPRECATED161": DEPRECATED161,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED159); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED159, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":275
 *     "DEPRECATED158": DEPRECATED158,
 *     "DEPRECATED159": DEPRECATED159,
 *     "DEPRECATED160": DEPRECATED160,             # <<<<<<<<<<<<<<
 *     "DEPRECATED161": DEPRECATED161,
 *     "DEPRECATED162": DEPRECATED162,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED160); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED160, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":276
 *     "DEPRECATED159": DEPRECATED159,
 *     "DEPRECATED160": DEPRECATED160,
 *     "DEPRECATED161": DEPRECATED161,             # <<<<<<<<<<<<<<
 *     "DEPRECATED162": DEPRECATED162,
 *     "DEPRECATED163": DEPRECATED163,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED161); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED161, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":277
 *     "DEPRECATED160": DEPRECATED160,
 *     "DEPRECATED161": DEPRECATED161,
 *     "DEPRECATED162": DEPRECATED162,             # <<<<<<<<<<<<<<
 *     "DEPRECATED163": DEPRECATED163,
 *     "DEPRECATED164": DEPRECATED164,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED162); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED162, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":278
 *     "DEPRECATED161": DEPRECATED161,
 *     "DEPRECATED162": DEPRECATED162,
 *     "DEPRECATED163": DEPRECATED163,             # <<<<<<<<<<<<<<
 *     "DEPRECATED164": DEPRECATED164,
 *     "DEPRECATED165": DEPRECATED165,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED163); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED163, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":279
 *     "DEPRECATED162": DEPRECATED162,
 *     "DEPRECATED163": DEPRECATED163,
 *     "DEPRECATED164": DEPRECATED164,             # <<<<<<<<<<<<<<
 *     "DEPRECATED165": DEPRECATED165,
 *     "DEPRECATED166": DEPRECATED166,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED164); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED164, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":280
 *     "DEPRECATED163": DEPRECATED163,
 *     "DEPRECATED164": DEPRECATED164,
 *     "DEPRECATED165": DEPRECATED165,             # <<<<<<<<<<<<<<
 *     "DEPRECATED166": DEPRECATED166,
 *     "DEPRECATED167": DEPRECATED167,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED165); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED165, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":281
 *     "DEPRECATED164": DEPRECATED164,
 *     "DEPRECATED165": DEPRECATED165,
 *     "DEPRECATED166": DEPRECATED166,             # <<<<<<<<<<<<<<
 *     "DEPRECATED167": DEPRECATED167,
 *     "DEPRECATED168": DEPRECATED168,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED166); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED166, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":282
 *     "DEPRECATED165": DEPRECATED165,
 *     "DEPRECATED166": DEPRECATED166,
 *     "DEPRECATED167": DEPRECATED167,             # <<<<<<<<<<<<<<
 *     "DEPRECATED168": DEPRECATED168,
 *     "DEPRECATED169": DEPRECATED169,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED167); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED167, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":283
 *     "DEPRECATED166": DEPRECATED166,
 *     "DEPRECATED167": DEPRECATED167,
 *     "DEPRECATED168": DEPRECATED168,             # <<<<<<<<<<<<<<
 *     "DEPRECATED169": DEPRECATED169,
 *     "DEPRECATED170": DEPRECATED170,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED168); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED168, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":284
 *     "DEPRECATED167": DEPRECATED167,
 *     "DEPRECATED168": DEPRECATED168,
 *     "DEPRECATED169": DEPRECATED169,             # <<<<<<<<<<<<<<
 *     "DEPRECATED170": DEPRECATED170,
 *     "DEPRECATED171": DEPRECATED171,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED169); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED169, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":285
 *     "DEPRECATED168": DEPRECATED168,
 *     "DEPRECATED169": DEPRECATED169,
 *     "DEPRECATED170": DEPRECATED170,             # <<<<<<<<<<<<<<
 *     "DEPRECATED171": DEPRECATED171,
 *     "DEPRECATED172": DEPRECATED172,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED170); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED170, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":286
 *     "DEPRECATED169": DEPRECATED169,
 *     "DEPRECATED170": DEPRECATED170,
 *     "DEPRECATED171": DEPRECATED171,             # <<<<<<<<<<<<<<
 *     "DEPRECATED172": DEPRECATED172,
 *     "DEPRECATED173": DEPRECATED173,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED171); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED171, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":287
 *     "DEPRECATED170": DEPRECATED170,
 *     "DEPRECATED171": DEPRECATED171,
 *     "DEPRECATED172": DEPRECATED172,             # <<<<<<<<<<<<<<
 *     "DEPRECATED173": DEPRECATED173,
 *     "DEPRECATED174": DEPRECATED174,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED172); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED172, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":288
 *     "DEPRECATED171": DEPRECATED171,
 *     "DEPRECATED172": DEPRECATED172,
 *     "DEPRECATED173": DEPRECATED173,             # <<<<<<<<<<<<<<
 *     "DEPRECATED174": DEPRECATED174,
 *     "DEPRECATED175": DEPRECATED175,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED173); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED173, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":289
 *     "DEPRECATED172": DEPRECATED172,
 *     "DEPRECATED173": DEPRECATED173,
 *     "DEPRECATED174": DEPRECATED174,             # <<<<<<<<<<<<<<
 *     "DEPRECATED175": DEPRECATED175,
 *     "DEPRECATED176": DEPRECATED176,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED174); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED174, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":290
 *     "DEPRECATED173": DEPRECATED173,
 *     "DEPRECATED174": DEPRECATED174,
 *     "DEPRECATED175": DEPRECATED175,             # <<<<<<<<<<<<<<
 *     "DEPRECATED176": DEPRECATED176,
 *     "DEPRECATED177": DEPRECATED177,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED175); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED175, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":291
 *     "DEPRECATED174": DEPRECATED174,
 *     "DEPRECATED175": DEPRECATED175,
 *     "DEPRECATED176": DEPRECATED176,             # <<<<<<<<<<<<<<
 *     "DEPRECATED177": DEPRECATED177,
 *     "DEPRECATED178": DEPRECATED178,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED176); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED176, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":292
 *     "DEPRECATED175": DEPRECATED175,
 *     "DEPRECATED176": DEPRECATED176,
 *     "DEPRECATED177": DEPRECATED177,             # <<<<<<<<<<<<<<
 *     "DEPRECATED178": DEPRECATED178,
 *     "DEPRECATED179": DEPRECATED179,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED177); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED177, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":293
 *     "DEPRECATED176": DEPRECATED176,
 *     "DEPRECATED177": DEPRECATED177,
 *     "DEPRECATED178": DEPRECATED178,             # <<<<<<<<<<<<<<
 *     "DEPRECATED179": DEPRECATED179,
 *     "DEPRECATED180": DEPRECATED180,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED178); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED178, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":294
 *     "DEPRECATED177": DEPRECATED177,
 *     "DEPRECATED178": DEPRECATED178,
 *     "DEPRECATED179": DEPRECATED179,             # <<<<<<<<<<<<<<
 *     "DEPRECATED180": DEPRECATED180,
 *     "DEPRECATED181": DEPRECATED181,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED179); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED179, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":295
 *     "DEPRECATED178": DEPRECATED178,
 *     "DEPRECATED179": DEPRECATED179,
 *     "DEPRECATED180": DEPRECATED180,             # <<<<<<<<<<<<<<
 *     "DEPRECATED181": DEPRECATED181,
 *     "DEPRECATED182": DEPRECATED182,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED180); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED180, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":296
 *     "DEPRECATED179": DEPRECATED179,
 *     "DEPRECATED180": DEPRECATED180,
 *     "DEPRECATED181": DEPRECATED181,             # <<<<<<<<<<<<<<
 *     "DEPRECATED182": DEPRECATED182,
 *     "DEPRECATED183": DEPRECATED183,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED181); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED181, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":297
 *     "DEPRECATED180": DEPRECATED180,
 *     "DEPRECATED181": DEPRECATED181,
 *     "DEPRECATED182": DEPRECATED182,             # <<<<<<<<<<<<<<
 *     "DEPRECATED183": DEPRECATED183,
 *     "DEPRECATED184": DEPRECATED184,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED182); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED182, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":298
 *     "DEPRECATED181": DEPRECATED181,
 *     "DEPRECATED182": DEPRECATED182,
 *     "DEPRECATED183": DEPRECATED183,             # <<<<<<<<<<<<<<
 *     "DEPRECATED184": DEPRECATED184,
 *     "DEPRECATED185": DEPRECATED185,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED183); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED183, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":299
 *     "DEPRECATED182": DEPRECATED182,
 *     "DEPRECATED183": DEPRECATED183,
 *     "DEPRECATED184": DEPRECATED184,             # <<<<<<<<<<<<<<
 *     "DEPRECATED185": DEPRECATED185,
 *     "DEPRECATED186": DEPRECATED186,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED184); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED184, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":300
 *     "DEPRECATED183": DEPRECATED183,
 *     "DEPRECATED184": DEPRECATED184,
 *     "DEPRECATED185": DEPRECATED185,             # <<<<<<<<<<<<<<
 *     "DEPRECATED186": DEPRECATED186,
 *     "DEPRECATED187": DEPRECATED187,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED185); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED185, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":301
 *     "DEPRECATED184": DEPRECATED184,
 *     "DEPRECATED185": DEPRECATED185,
 *     "DEPRECATED186": DEPRECATED186,             # <<<<<<<<<<<<<<
 *     "DEPRECATED187": DEPRECATED187,
 *     "DEPRECATED188": DEPRECATED188,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED186); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED186, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":302
 *     "DEPRECATED185": DEPRECATED185,
 *     "DEPRECATED186": DEPRECATED186,
 *     "DEPRECATED187": DEPRECATED187,             # <<<<<<<<<<<<<<
 *     "DEPRECATED188": DEPRECATED188,
 *     "DEPRECATED189": DEPRECATED189,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED187); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED187, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":303
 *     "DEPRECATED186": DEPRECATED186,
 *     "DEPRECATED187": DEPRECATED187,
 *     "DEPRECATED188": DEPRECATED188,             # <<<<<<<<<<<<<<
 *     "DEPRECATED189": DEPRECATED189,
 *     "DEPRECATED190": DEPRECATED190,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED188); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED188, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":304
 *     "DEPRECATED187": DEPRECATED187,
 *     "DEPRECATED188": DEPRECATED188,
 *     "DEPRECATED189": DEPRECATED189,             # <<<<<<<<<<<<<<
 *     "DEPRECATED190": DEPRECATED190,
 *     "DEPRECATED191": DEPRECATED191,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED189); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED189, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":305
 *     "DEPRECATED188": DEPRECATED188,
 *     "DEPRECATED189": DEPRECATED189,
 *     "DEPRECATED190": DEPRECATED190,             # <<<<<<<<<<<<<<
 *     "DEPRECATED191": DEPRECATED191,
 *     "DEPRECATED192": DEPRECATED192,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED190); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED190, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":306
 *     "DEPRECATED189": DEPRECATED189,
 *     "DEPRECATED190": DEPRECATED190,
 *     "DEPRECATED191": DEPRECATED191,             # <<<<<<<<<<<<<<
 *     "DEPRECATED192": DEPRECATED192,
 *     "DEPRECATED193": DEPRECATED193,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED191); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED191, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":307
 *     "DEPRECATED190": DEPRECATED190,
 *     "DEPRECATED191": DEPRECATED191,
 *     "DEPRECATED192": DEPRECATED192,             # <<<<<<<<<<<<<<
 *     "DEPRECATED193": DEPRECATED193,
 *     "DEPRECATED194": DEPRECATED194,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED192); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED192, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":308
 *     "DEPRECATED191": DEPRECATED191,
 *     "DEPRECATED192": DEPRECATED192,
 *     "DEPRECATED193": DEPRECATED193,             # <<<<<<<<<<<<<<
 *     "DEPRECATED194": DEPRECATED194,
 *     "DEPRECATED195": DEPRECATED195,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED193); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED193, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":309
 *     "DEPRECATED192": DEPRECATED192,
 *     "DEPRECATED193": DEPRECATED193,
 *     "DEPRECATED194": DEPRECATED194,             # <<<<<<<<<<<<<<
 *     "DEPRECATED195": DEPRECATED195,
 *     "DEPRECATED196": DEPRECATED196,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED194); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED194, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":310
 *     "DEPRECATED193": DEPRECATED193,
 *     "DEPRECATED194": DEPRECATED194,
 *     "DEPRECATED195": DEPRECATED195,             # <<<<<<<<<<<<<<
 *     "DEPRECATED196": DEPRECATED196,
 *     "DEPRECATED197": DEPRECATED197,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED195); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED195, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":311
 *     "DEPRECATED194": DEPRECATED194,
 *     "DEPRECATED195": DEPRECATED195,
 *     "DEPRECATED196": DEPRECATED196,             # <<<<<<<<<<<<<<
 *     "DEPRECATED197": DEPRECATED197,
 *     "DEPRECATED198": DEPRECATED198,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED196); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED196, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":312
 *     "DEPRECATED195": DEPRECATED195,
 *     "DEPRECATED196": DEPRECATED196,
 *     "DEPRECATED197": DEPRECATED197,             # <<<<<<<<<<<<<<
 *     "DEPRECATED198": DEPRECATED198,
 *     "DEPRECATED199": DEPRECATED199,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED197); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED197, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":313
 *     "DEPRECATED196": DEPRECATED196,
 *     "DEPRECATED197": DEPRECATED197,
 *     "DEPRECATED198": DEPRECATED198,             # <<<<<<<<<<<<<<
 *     "DEPRECATED199": DEPRECATED199,
 *     "DEPRECATED200": DEPRECATED200,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED198); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED198, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":314
 *     "DEPRECATED197": DEPRECATED197,
 *     "DEPRECATED198": DEPRECATED198,
 *     "DEPRECATED199": DEPRECATED199,             # <<<<<<<<<<<<<<
 *     "DEPRECATED200": DEPRECATED200,
 *     "DEPRECATED201": DEPRECATED201,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED199); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED199, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":315
 *     "DEPRECATED198": DEPRECATED198,
 *     "DEPRECATED199": DEPRECATED199,
 *     "DEPRECATED200": DEPRECATED200,             # <<<<<<<<<<<<<<
 *     "DEPRECATED201": DEPRECATED201,
 *     "DEPRECATED202": DEPRECATED202,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED200); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED200, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":316
 *     "DEPRECATED199": DEPRECATED199,
 *     "DEPRECATED200": DEPRECATED200,
 *     "DEPRECATED201": DEPRECATED201,             # <<<<<<<<<<<<<<
 *     "DEPRECATED202": DEPRECATED202,
 *     "DEPRECATED203": DEPRECATED203,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED201); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED201, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":317
 *     "DEPRECATED200": DEPRECATED200,
 *     "DEPRECATED201": DEPRECATED201,
 *     "DEPRECATED202": DEPRECATED202,             # <<<<<<<<<<<<<<
 *     "DEPRECATED203": DEPRECATED203,
 *     "DEPRECATED204": DEPRECATED204,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED202); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED202, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":318
 *     "DEPRECATED201": DEPRECATED201,
 *     "DEPRECATED202": DEPRECATED202,
 *     "DEPRECATED203": DEPRECATED203,             # <<<<<<<<<<<<<<
 *     "DEPRECATED204": DEPRECATED204,
 *     "DEPRECATED205": DEPRECATED205,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED203); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED203, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":319
 *     "DEPRECATED202": DEPRECATED202,
 *     "DEPRECATED203": DEPRECATED203,
 *     "DEPRECATED204": DEPRECATED204,             # <<<<<<<<<<<<<<
 *     "DEPRECATED205": DEPRECATED205,
 *     "DEPRECATED206": DEPRECATED206,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED204); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED204, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":320
 *     "DEPRECATED203": DEPRECATED203,
 *     "DEPRECATED204": DEPRECATED204,
 *     "DEPRECATED205": DEPRECATED205,             # <<<<<<<<<<<<<<
 *     "DEPRECATED206": DEPRECATED206,
 *     "DEPRECATED207": DEPRECATED207,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED205); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED205, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":321
 *     "DEPRECATED204": DEPRECATED204,
 *     "DEPRECATED205": DEPRECATED205,
 *     "DEPRECATED206": DEPRECATED206,             # <<<<<<<<<<<<<<
 *     "DEPRECATED207": DEPRECATED207,
 *     "DEPRECATED208": DEPRECATED208,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED206); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED206, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":322
 *     "DEPRECATED205": DEPRECATED205,
 *     "DEPRECATED206": DEPRECATED206,
 *     "DEPRECATED207": DEPRECATED207,             # <<<<<<<<<<<<<<
 *     "DEPRECATED208": DEPRECATED208,
 *     "DEPRECATED209": DEPRECATED209,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED207); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED207, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":323
 *     "DEPRECATED206": DEPRECATED206,
 *     "DEPRECATED207": DEPRECATED207,
 *     "DEPRECATED208": DEPRECATED208,             # <<<<<<<<<<<<<<
 *     "DEPRECATED209": DEPRECATED209,
 *     "DEPRECATED210": DEPRECATED210,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED208); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED208, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":324
 *     "DEPRECATED207": DEPRECATED207,
 *     "DEPRECATED208": DEPRECATED208,
 *     "DEPRECATED209": DEPRECATED209,             # <<<<<<<<<<<<<<
 *     "DEPRECATED210": DEPRECATED210,
 *     "DEPRECATED211": DEPRECATED211,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED209); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED209, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":325
 *     "DEPRECATED208": DEPRECATED208,
 *     "DEPRECATED209": DEPRECATED209,
 *     "DEPRECATED210": DEPRECATED210,             # <<<<<<<<<<<<<<
 *     "DEPRECATED211": DEPRECATED211,
 *     "DEPRECATED212": DEPRECATED212,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED210); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED210, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":326
 *     "DEPRECATED209": DEPRECATED209,
 *     "DEPRECATED210": DEPRECATED210,
 *     "DEPRECATED211": DEPRECATED211,             # <<<<<<<<<<<<<<
 *     "DEPRECATED212": DEPRECATED212,
 *     "DEPRECATED213": DEPRECATED213,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED211); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED211, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":327
 *     "DEPRECATED210": DEPRECATED210,
 *     "DEPRECATED211": DEPRECATED211,
 *     "DEPRECATED212": DEPRECATED212,             # <<<<<<<<<<<<<<
 *     "DEPRECATED213": DEPRECATED213,
 *     "DEPRECATED214": DEPRECATED214,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED212); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED212, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":328
 *     "DEPRECATED211": DEPRECATED211,
 *     "DEPRECATED212": DEPRECATED212,
 *     "DEPRECATED213": DEPRECATED213,             # <<<<<<<<<<<<<<
 *     "DEPRECATED214": DEPRECATED214,
 *     "DEPRECATED215": DEPRECATED215,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED213); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED213, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":329
 *     "DEPRECATED212": DEPRECATED212,
 *     "DEPRECATED213": DEPRECATED213,
 *     "DEPRECATED214": DEPRECATED214,             # <<<<<<<<<<<<<<
 *     "DEPRECATED215": DEPRECATED215,
 *     "DEPRECATED216": DEPRECATED216,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED214); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED214, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":330
 *     "DEPRECATED213": DEPRECATED213,
 *     "DEPRECATED214": DEPRECATED214,
 *     "DEPRECATED215": DEPRECATED215,             # <<<<<<<<<<<<<<
 *     "DEPRECATED216": DEPRECATED216,
 *     "DEPRECATED217": DEPRECATED217,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED215); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED215, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":331
 *     "DEPRECATED214": DEPRECATED214,
 *     "DEPRECATED215": DEPRECATED215,
 *     "DEPRECATED216": DEPRECATED216,             # <<<<<<<<<<<<<<
 *     "DEPRECATED217": DEPRECATED217,
 *     "DEPRECATED218": DEPRECATED218,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED216); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED216, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":332
 *     "DEPRECATED215": DEPRECATED215,
 *     "DEPRECATED216": DEPRECATED216,
 *     "DEPRECATED217": DEPRECATED217,             # <<<<<<<<<<<<<<
 *     "DEPRECATED218": DEPRECATED218,
 *     "DEPRECATED219": DEPRECATED219,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED217); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED217, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":333
 *     "DEPRECATED216": DEPRECATED216,
 *     "DEPRECATED217": DEPRECATED217,
 *     "DEPRECATED218": DEPRECATED218,             # <<<<<<<<<<<<<<
 *     "DEPRECATED219": DEPRECATED219,
 *     "DEPRECATED220": DEPRECATED220,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED218); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED218, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":334
 *     "DEPRECATED217": DEPRECATED217,
 *     "DEPRECATED218": DEPRECATED218,
 *     "DEPRECATED219": DEPRECATED219,             # <<<<<<<<<<<<<<
 *     "DEPRECATED220": DEPRECATED220,
 *     "DEPRECATED221": DEPRECATED221,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED219); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED219, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":335
 *     "DEPRECATED218": DEPRECATED218,
 *     "DEPRECATED219": DEPRECATED219,
 *     "DEPRECATED220": DEPRECATED220,             # <<<<<<<<<<<<<<
 *     "DEPRECATED221": DEPRECATED221,
 *     "DEPRECATED222": DEPRECATED222,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED220); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED220, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":336
 *     "DEPRECATED219": DEPRECATED219,
 *     "DEPRECATED220": DEPRECATED220,
 *     "DEPRECATED221": DEPRECATED221,             # <<<<<<<<<<<<<<
 *     "DEPRECATED222": DEPRECATED222,
 *     "DEPRECATED223": DEPRECATED223,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED221); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED221, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":337
 *     "DEPRECATED220": DEPRECATED220,
 *     "DEPRECATED221": DEPRECATED221,
 *     "DEPRECATED222": DEPRECATED222,             # <<<<<<<<<<<<<<
 *     "DEPRECATED223": DEPRECATED223,
 *     "DEPRECATED224": DEPRECATED224,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED222); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED222, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":338
 *     "DEPRECATED221": DEPRECATED221,
 *     "DEPRECATED222": DEPRECATED222,
 *     "DEPRECATED223": DEPRECATED223,             # <<<<<<<<<<<<<<
 *     "DEPRECATED224": DEPRECATED224,
 *     "DEPRECATED225": DEPRECATED225,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED223); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED223, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":339
 *     "DEPRECATED222": DEPRECATED222,
 *     "DEPRECATED223": DEPRECATED223,
 *     "DEPRECATED224": DEPRECATED224,             # <<<<<<<<<<<<<<
 *     "DEPRECATED225": DEPRECATED225,
 *     "DEPRECATED226": DEPRECATED226,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED224); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED224, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":340
 *     "DEPRECATED223": DEPRECATED223,
 *     "DEPRECATED224": DEPRECATED224,
 *     "DEPRECATED225": DEPRECATED225,             # <<<<<<<<<<<<<<
 *     "DEPRECATED226": DEPRECATED226,
 *     "DEPRECATED227": DEPRECATED227,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED225); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED225, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":341
 *     "DEPRECATED224": DEPRECATED224,
 *     "DEPRECATED225": DEPRECATED225,
 *     "DEPRECATED226": DEPRECATED226,             # <<<<<<<<<<<<<<
 *     "DEPRECATED227": DEPRECATED227,
 *     "DEPRECATED228": DEPRECATED228,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED226); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED226, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":342
 *     "DEPRECATED225": DEPRECATED225,
 *     "DEPRECATED226": DEPRECATED226,
 *     "DEPRECATED227": DEPRECATED227,             # <<<<<<<<<<<<<<
 *     "DEPRECATED228": DEPRECATED228,
 *     "DEPRECATED229": DEPRECATED229,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED227); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED227, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":343
 *     "DEPRECATED226": DEPRECATED226,
 *     "DEPRECATED227": DEPRECATED227,
 *     "DEPRECATED228": DEPRECATED228,             # <<<<<<<<<<<<<<
 *     "DEPRECATED229": DEPRECATED229,
 *     "DEPRECATED230": DEPRECATED230,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED228); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED228, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":344
 *     "DEPRECATED227": DEPRECATED227,
 *     "DEPRECATED228": DEPRECATED228,
 *     "DEPRECATED229": DEPRECATED229,             # <<<<<<<<<<<<<<
 *     "DEPRECATED230": DEPRECATED230,
 *     "DEPRECATED231": DEPRECATED231,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED229); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED229, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":345
 *     "DEPRECATED228": DEPRECATED228,
 *     "DEPRECATED229": DEPRECATED229,
 *     "DEPRECATED230": DEPRECATED230,             # <<<<<<<<<<<<<<
 *     "DEPRECATED231": DEPRECATED231,
 *     "DEPRECATED232": DEPRECATED232,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED230); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED230, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":346
 *     "DEPRECATED229": DEPRECATED229,
 *     "DEPRECATED230": DEPRECATED230,
 *     "DEPRECATED231": DEPRECATED231,             # <<<<<<<<<<<<<<
 *     "DEPRECATED232": DEPRECATED232,
 *     "DEPRECATED233": DEPRECATED233,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED231); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED231, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":347
 *     "DEPRECATED230": DEPRECATED230,
 *     "DEPRECATED231": DEPRECATED231,
 *     "DEPRECATED232": DEPRECATED232,             # <<<<<<<<<<<<<<
 *     "DEPRECATED233": DEPRECATED233,
 *     "DEPRECATED234": DEPRECATED234,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED232); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED232, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":348
 *     "DEPRECATED231": DEPRECATED231,
 *     "DEPRECATED232": DEPRECATED232,
 *     "DEPRECATED233": DEPRECATED233,             # <<<<<<<<<<<<<<
 *     "DEPRECATED234": DEPRECATED234,
 *     "DEPRECATED235": DEPRECATED235,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED233); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED233, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":349
 *     "DEPRECATED232": DEPRECATED232,
 *     "DEPRECATED233": DEPRECATED233,
 *     "DEPRECATED234": DEPRECATED234,             # <<<<<<<<<<<<<<
 *     "DEPRECATED235": DEPRECATED235,
 *     "DEPRECATED236": DEPRECATED236,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED234); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED234, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":350
 *     "DEPRECATED233": DEPRECATED233,
 *     "DEPRECATED234": DEPRECATED234,
 *     "DEPRECATED235": DEPRECATED235,             # <<<<<<<<<<<<<<
 *     "DEPRECATED236": DEPRECATED236,
 *     "DEPRECATED237": DEPRECATED237,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED235); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED235, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":351
 *     "DEPRECATED234": DEPRECATED234,
 *     "DEPRECATED235": DEPRECATED235,
 *     "DEPRECATED236": DEPRECATED236,             # <<<<<<<<<<<<<<
 *     "DEPRECATED237": DEPRECATED237,
 *     "DEPRECATED238": DEPRECATED238,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED236); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED236, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":352
 *     "DEPRECATED235": DEPRECATED235,
 *     "DEPRECATED236": DEPRECATED236,
 *     "DEPRECATED237": DEPRECATED237,             # <<<<<<<<<<<<<<
 *     "DEPRECATED238": DEPRECATED238,
 *     "DEPRECATED239": DEPRECATED239,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED237); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED237, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":353
 *     "DEPRECATED236": DEPRECATED236,
 *     "DEPRECATED237": DEPRECATED237,
 *     "DEPRECATED238": DEPRECATED238,             # <<<<<<<<<<<<<<
 *     "DEPRECATED239": DEPRECATED239,
 *     "DEPRECATED240": DEPRECATED240,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED238); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED238, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":354
 *     "DEPRECATED237": DEPRECATED237,
 *     "DEPRECATED238": DEPRECATED238,
 *     "DEPRECATED239": DEPRECATED239,             # <<<<<<<<<<<<<<
 *     "DEPRECATED240": DEPRECATED240,
 *     "DEPRECATED241": DEPRECATED241,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED239); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED239, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":355
 *     "DEPRECATED238": DEPRECATED238,
 *     "DEPRECATED239": DEPRECATED239,
 *     "DEPRECATED240": DEPRECATED240,             # <<<<<<<<<<<<<<
 *     "DEPRECATED241": DEPRECATED241,
 *     "DEPRECATED242": DEPRECATED242,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED240); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED240, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":356
 *     "DEPRECATED239": DEPRECATED239,
 *     "DEPRECATED240": DEPRECATED240,
 *     "DEPRECATED241": DEPRECATED241,             # <<<<<<<<<<<<<<
 *     "DEPRECATED242": DEPRECATED242,
 *     "DEPRECATED243": DEPRECATED243,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED241); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED241, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":357
 *     "DEPRECATED240": DEPRECATED240,
 *     "DEPRECATED241": DEPRECATED241,
 *     "DEPRECATED242": DEPRECATED242,             # <<<<<<<<<<<<<<
 *     "DEPRECATED243": DEPRECATED243,
 *     "DEPRECATED244": DEPRECATED244,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED242); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED242, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":358
 *     "DEPRECATED241": DEPRECATED241,
 *     "DEPRECATED242": DEPRECATED242,
 *     "DEPRECATED243": DEPRECATED243,             # <<<<<<<<<<<<<<
 *     "DEPRECATED244": DEPRECATED244,
 *     "DEPRECATED245": DEPRECATED245,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED243); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED243, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":359
 *     "DEPRECATED242": DEPRECATED242,
 *     "DEPRECATED243": DEPRECATED243,
 *     "DEPRECATED244": DEPRECATED244,             # <<<<<<<<<<<<<<
 *     "DEPRECATED245": DEPRECATED245,
 *     "DEPRECATED246": DEPRECATED246,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED244); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED244, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":360
 *     "DEPRECATED243": DEPRECATED243,
 *     "DEPRECATED244": DEPRECATED244,
 *     "DEPRECATED245": DEPRECATED245,             # <<<<<<<<<<<<<<
 *     "DEPRECATED246": DEPRECATED246,
 *     "DEPRECATED247": DEPRECATED247,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED245); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED245, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":361
 *     "DEPRECATED244": DEPRECATED244,
 *     "DEPRECATED245": DEPRECATED245,
 *     "DEPRECATED246": DEPRECATED246,             # <<<<<<<<<<<<<<
 *     "DEPRECATED247": DEPRECATED247,
 *     "DEPRECATED248": DEPRECATED248,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED246); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED246, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":362
 *     "DEPRECATED245": DEPRECATED245,
 *     "DEPRECATED246": DEPRECATED246,
 *     "DEPRECATED247": DEPRECATED247,             # <<<<<<<<<<<<<<
 *     "DEPRECATED248": DEPRECATED248,
 *     "DEPRECATED249": DEPRECATED249,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED247); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED247, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":363
 *     "DEPRECATED246": DEPRECATED246,
 *     "DEPRECATED247": DEPRECATED247,
 *     "DEPRECATED248": DEPRECATED248,             # <<<<<<<<<<<<<<
 *     "DEPRECATED249": DEPRECATED249,
 *     "DEPRECATED250": DEPRECATED250,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED248); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED248, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":364
 *     "DEPRECATED247": DEPRECATED247,
 *     "DEPRECATED248": DEPRECATED248,
 *     "DEPRECATED249": DEPRECATED249,             # <<<<<<<<<<<<<<
 *     "DEPRECATED250": DEPRECATED250,
 *     "DEPRECATED251": DEPRECATED251,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED249); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED249, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":365
 *     "DEPRECATED248": DEPRECATED248,
 *     "DEPRECATED249": DEPRECATED249,
 *     "DEPRECATED250": DEPRECATED250,             # <<<<<<<<<<<<<<
 *     "DEPRECATED251": DEPRECATED251,
 *     "DEPRECATED252": DEPRECATED252,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED250); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED250, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":366
 *     "DEPRECATED249": DEPRECATED249,
 *     "DEPRECATED250": DEPRECATED250,
 *     "DEPRECATED251": DEPRECATED251,             # <<<<<<<<<<<<<<
 *     "DEPRECATED252": DEPRECATED252,
 *     "DEPRECATED253": DEPRECATED253,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED251); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED251, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":367
 *     "DEPRECATED250": DEPRECATED250,
 *     "DEPRECATED251": DEPRECATED251,
 *     "DEPRECATED252": DEPRECATED252,             # <<<<<<<<<<<<<<
 *     "DEPRECATED253": DEPRECATED253,
 *     "DEPRECATED254": DEPRECATED254,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED252); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED252, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":368
 *     "DEPRECATED251": DEPRECATED251,
 *     "DEPRECATED252": DEPRECATED252,
 *     "DEPRECATED253": DEPRECATED253,             # <<<<<<<<<<<<<<
 *     "DEPRECATED254": DEPRECATED254,
 *     "DEPRECATED255": DEPRECATED255,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED253); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED253, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":369
 *     "DEPRECATED252": DEPRECATED252,
 *     "DEPRECATED253": DEPRECATED253,
 *     "DEPRECATED254": DEPRECATED254,             # <<<<<<<<<<<<<<
 *     "DEPRECATED255": DEPRECATED255,
 *     "DEPRECATED256": DEPRECATED256,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED254); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED254, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":370
 *     "DEPRECATED253": DEPRECATED253,
 *     "DEPRECATED254": DEPRECATED254,
 *     "DEPRECATED255": DEPRECATED255,             # <<<<<<<<<<<<<<
 *     "DEPRECATED256": DEPRECATED256,
 *     "DEPRECATED257": DEPRECATED257,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED255); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED255, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":371
 *     "DEPRECATED254": DEPRECATED254,
 *     "DEPRECATED255": DEPRECATED255,
 *     "DEPRECATED256": DEPRECATED256,             # <<<<<<<<<<<<<<
 *     "DEPRECATED257": DEPRECATED257,
 *     "DEPRECATED258": DEPRECATED258,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED256); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 371, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED256, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":372
 *     "DEPRECATED255": DEPRECATED255,
 *     "DEPRECATED256": DEPRECATED256,
 *     "DEPRECATED257": DEPRECATED257,             # <<<<<<<<<<<<<<
 *     "DEPRECATED258": DEPRECATED258,
 *     "DEPRECATED259": DEPRECATED259,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED257); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED257, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":373
 *     "DEPRECATED256": DEPRECATED256,
 *     "DEPRECATED257": DEPRECATED257,
 *     "DEPRECATED258": DEPRECATED258,             # <<<<<<<<<<<<<<
 *     "DEPRECATED259": DEPRECATED259,
 *     "DEPRECATED260": DEPRECATED260,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED258); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED258, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":374
 *     "DEPRECATED257": DEPRECATED257,
 *     "DEPRECATED258": DEPRECATED258,
 *     "DEPRECATED259": DEPRECATED259,             # <<<<<<<<<<<<<<
 *     "DEPRECATED260": DEPRECATED260,
 *     "DEPRECATED261": DEPRECATED261,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED259); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED259, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":375
 *     "DEPRECATED258": DEPRECATED258,
 *     "DEPRECATED259": DEPRECATED259,
 *     "DEPRECATED260": DEPRECATED260,             # <<<<<<<<<<<<<<
 *     "DEPRECATED261": DEPRECATED261,
 *     "DEPRECATED262": DEPRECATED262,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED260); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED260, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":376
 *     "DEPRECATED259": DEPRECATED259,
 *     "DEPRECATED260": DEPRECATED260,
 *     "DEPRECATED261": DEPRECATED261,             # <<<<<<<<<<<<<<
 *     "DEPRECATED262": DEPRECATED262,
 *     "DEPRECATED263": DEPRECATED263,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED261); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED261, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":377
 *     "DEPRECATED260": DEPRECATED260,
 *     "DEPRECATED261": DEPRECATED261,
 *     "DEPRECATED262": DEPRECATED262,             # <<<<<<<<<<<<<<
 *     "DEPRECATED263": DEPRECATED263,
 *     "DEPRECATED264": DEPRECATED264,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED262); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED262, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":378
 *     "DEPRECATED261": DEPRECATED261,
 *     "DEPRECATED262": DEPRECATED262,
 *     "DEPRECATED263": DEPRECATED263,             # <<<<<<<<<<<<<<
 *     "DEPRECATED264": DEPRECATED264,
 *     "DEPRECATED265": DEPRECATED265,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED263); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED263, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":379
 *     "DEPRECATED262": DEPRECATED262,
 *     "DEPRECATED263": DEPRECATED263,
 *     "DEPRECATED264": DEPRECATED264,             # <<<<<<<<<<<<<<
 *     "DEPRECATED265": DEPRECATED265,
 *     "DEPRECATED266": DEPRECATED266,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED264); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED264, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":380
 *     "DEPRECATED263": DEPRECATED263,
 *     "DEPRECATED264": DEPRECATED264,
 *     "DEPRECATED265": DEPRECATED265,             # <<<<<<<<<<<<<<
 *     "DEPRECATED266": DEPRECATED266,
 *     "DEPRECATED267": DEPRECATED267,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED265); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED265, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":381
 *     "DEPRECATED264": DEPRECATED264,
 *     "DEPRECATED265": DEPRECATED265,
 *     "DEPRECATED266": DEPRECATED266,             # <<<<<<<<<<<<<<
 *     "DEPRECATED267": DEPRECATED267,
 *     "DEPRECATED268": DEPRECATED268,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED266); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED266, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":382
 *     "DEPRECATED265": DEPRECATED265,
 *     "DEPRECATED266": DEPRECATED266,
 *     "DEPRECATED267": DEPRECATED267,             # <<<<<<<<<<<<<<
 *     "DEPRECATED268": DEPRECATED268,
 *     "DEPRECATED269": DEPRECATED269,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED267); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED267, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":383
 *     "DEPRECATED266": DEPRECATED266,
 *     "DEPRECATED267": DEPRECATED267,
 *     "DEPRECATED268": DEPRECATED268,             # <<<<<<<<<<<<<<
 *     "DEPRECATED269": DEPRECATED269,
 *     "DEPRECATED270": DEPRECATED270,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED268); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED268, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":384
 *     "DEPRECATED267": DEPRECATED267,
 *     "DEPRECATED268": DEPRECATED268,
 *     "DEPRECATED269": DEPRECATED269,             # <<<<<<<<<<<<<<
 *     "DEPRECATED270": DEPRECATED270,
 *     "DEPRECATED271": DEPRECATED271,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED269); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED269, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":385
 *     "DEPRECATED268": DEPRECATED268,
 *     "DEPRECATED269": DEPRECATED269,
 *     "DEPRECATED270": DEPRECATED270,             # <<<<<<<<<<<<<<
 *     "DEPRECATED271": DEPRECATED271,
 *     "DEPRECATED272": DEPRECATED272,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED270); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED270, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":386
 *     "DEPRECATED269": DEPRECATED269,
 *     "DEPRECATED270": DEPRECATED270,
 *     "DEPRECATED271": DEPRECATED271,             # <<<<<<<<<<<<<<
 *     "DEPRECATED272": DEPRECATED272,
 *     "DEPRECATED273": DEPRECATED273,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED271); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED271, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":387
 *     "DEPRECATED270": DEPRECATED270,
 *     "DEPRECATED271": DEPRECATED271,
 *     "DEPRECATED272": DEPRECATED272,             # <<<<<<<<<<<<<<
 *     "DEPRECATED273": DEPRECATED273,
 *     "DEPRECATED274": DEPRECATED274,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED272); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED272, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":388
 *     "DEPRECATED271": DEPRECATED271,
 *     "DEPRECATED272": DEPRECATED272,
 *     "DEPRECATED273": DEPRECATED273,             # <<<<<<<<<<<<<<
 *     "DEPRECATED274": DEPRECATED274,
 *     "DEPRECATED275": DEPRECATED275,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED273); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED273, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":389
 *     "DEPRECATED272": DEPRECATED272,
 *     "DEPRECATED273": DEPRECATED273,
 *     "DEPRECATED274": DEPRECATED274,             # <<<<<<<<<<<<<<
 *     "DEPRECATED275": DEPRECATED275,
 *     "DEPRECATED276": DEPRECATED276,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED274); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED274, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":390
 *     "DEPRECATED273": DEPRECATED273,
 *     "DEPRECATED274": DEPRECATED274,
 *     "DEPRECATED275": DEPRECATED275,             # <<<<<<<<<<<<<<
 *     "DEPRECATED276": DEPRECATED276,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED275); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 390, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED275, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":391
 *     "DEPRECATED274": DEPRECATED274,
 *     "DEPRECATED275": DEPRECATED275,
 *     "DEPRECATED276": DEPRECATED276,             # <<<<<<<<<<<<<<
 * 
 *     "PERSON": PERSON,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DEPRECATED276); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DEPRECATED276, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":393
 *     "DEPRECATED276": DEPRECATED276,
 * 
 *     "PERSON": PERSON,             # <<<<<<<<<<<<<<
 *     "NORP": NORP,
 *     "FACILITY": FACILITY,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PERSON); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PERSON, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":394
 * 
 *     "PERSON": PERSON,
 *     "NORP": NORP,             # <<<<<<<<<<<<<<
 *     "FACILITY": FACILITY,
 *     "ORG": ORG,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_NORP); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_NORP, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":395
 *     "PERSON": PERSON,
 *     "NORP": NORP,
 *     "FACILITY": FACILITY,             # <<<<<<<<<<<<<<
 *     "ORG": ORG,
 *     "GPE": GPE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_FACILITY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_FACILITY, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":396
 *     "NORP": NORP,
 *     "FACILITY": FACILITY,
 *     "ORG": ORG,             # <<<<<<<<<<<<<<
 *     "GPE": GPE,
 *     "LOC": LOC,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ORG); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ORG, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":397
 *     "FACILITY": FACILITY,
 *     "ORG": ORG,
 *     "GPE": GPE,             # <<<<<<<<<<<<<<
 *     "LOC": LOC,
 *     "PRODUCT": PRODUCT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_GPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_GPE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":398
 *     "ORG": ORG,
 *     "GPE": GPE,
 *     "LOC": LOC,             # <<<<<<<<<<<<<<
 *     "PRODUCT": PRODUCT,
 *     "EVENT": EVENT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LOC); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LOC, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":399
 *     "GPE": GPE,
 *     "LOC": LOC,
 *     "PRODUCT": PRODUCT,             # <<<<<<<<<<<<<<
 *     "EVENT": EVENT,
 *     "WORK_OF_ART": WORK_OF_ART,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PRODUCT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PRODUCT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":400
 *     "LOC": LOC,
 *     "PRODUCT": PRODUCT,
 *     "EVENT": EVENT,             # <<<<<<<<<<<<<<
 *     "WORK_OF_ART": WORK_OF_ART,
 *     "LANGUAGE": LANGUAGE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_EVENT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_EVENT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":401
 *     "PRODUCT": PRODUCT,
 *     "EVENT": EVENT,
 *     "WORK_OF_ART": WORK_OF_ART,             # <<<<<<<<<<<<<<
 *     "LANGUAGE": LANGUAGE,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_WORK_OF_ART); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_WORK_OF_ART, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":402
 *     "EVENT": EVENT,
 *     "WORK_OF_ART": WORK_OF_ART,
 *     "LANGUAGE": LANGUAGE,             # <<<<<<<<<<<<<<
 * 
 *     "DATE": DATE,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LANGUAGE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LANGUAGE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":404
 *     "LANGUAGE": LANGUAGE,
 * 
 *     "DATE": DATE,             # <<<<<<<<<<<<<<
 *     "TIME": TIME,
 *     "PERCENT": PERCENT,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_DATE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_DATE, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":405
 * 
 *     "DATE": DATE,
 *     "TIME": TIME,             # <<<<<<<<<<<<<<
 *     "PERCENT": PERCENT,
 *     "MONEY": MONEY,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_TIME); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_TIME, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":406
 *     "DATE": DATE,
 *     "TIME": TIME,
 *     "PERCENT": PERCENT,             # <<<<<<<<<<<<<<
 *     "MONEY": MONEY,
 *     "QUANTITY": QUANTITY,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_PERCENT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_PERCENT, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":407
 *     "TIME": TIME,
 *     "PERCENT": PERCENT,
 *     "MONEY": MONEY,             # <<<<<<<<<<<<<<
 *     "QUANTITY": QUANTITY,
 *     "ORDINAL": ORDINAL,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_MONEY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_MONEY, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":408
 *     "PERCENT": PERCENT,
 *     "MONEY": MONEY,
 *     "QUANTITY": QUANTITY,             # <<<<<<<<<<<<<<
 *     "ORDINAL": ORDINAL,
 *     "CARDINAL": CARDINAL,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_QUANTITY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_QUANTITY, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":409
 *     "MONEY": MONEY,
 *     "QUANTITY": QUANTITY,
 *     "ORDINAL": ORDINAL,             # <<<<<<<<<<<<<<
 *     "CARDINAL": CARDINAL,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ORDINAL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ORDINAL, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":410
 *     "QUANTITY": QUANTITY,
 *     "ORDINAL": ORDINAL,
 *     "CARDINAL": CARDINAL,             # <<<<<<<<<<<<<<
 * 
 *     "acomp": acomp,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_CARDINAL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_CARDINAL, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":412
 *     "CARDINAL": CARDINAL,
 * 
 *     "acomp": acomp,             # <<<<<<<<<<<<<<
 *     "advcl": advcl,
 *     "advmod": advmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_acomp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_acomp, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":413
 * 
 *     "acomp": acomp,
 *     "advcl": advcl,             # <<<<<<<<<<<<<<
 *     "advmod": advmod,
 *     "agent": agent,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_advcl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_advcl, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":414
 *     "acomp": acomp,
 *     "advcl": advcl,
 *     "advmod": advmod,             # <<<<<<<<<<<<<<
 *     "agent": agent,
 *     "amod": amod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_advmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_advmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":415
 *     "advcl": advcl,
 *     "advmod": advmod,
 *     "agent": agent,             # <<<<<<<<<<<<<<
 *     "amod": amod,
 *     "appos": appos,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_agent); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_agent, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":416
 *     "advmod": advmod,
 *     "agent": agent,
 *     "amod": amod,             # <<<<<<<<<<<<<<
 *     "appos": appos,
 *     "attr": attr,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_amod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_amod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":417
 *     "agent": agent,
 *     "amod": amod,
 *     "appos": appos,             # <<<<<<<<<<<<<<
 *     "attr": attr,
 *     "aux": aux,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_appos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_appos, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":418
 *     "amod": amod,
 *     "appos": appos,
 *     "attr": attr,             # <<<<<<<<<<<<<<
 *     "aux": aux,
 *     "auxpass": auxpass,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_attr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 418, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_attr, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":419
 *     "appos": appos,
 *     "attr": attr,
 *     "aux": aux,             # <<<<<<<<<<<<<<
 *     "auxpass": auxpass,
 *     "cc": cc,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_aux); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_aux, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":420
 *     "attr": attr,
 *     "aux": aux,
 *     "auxpass": auxpass,             # <<<<<<<<<<<<<<
 *     "cc": cc,
 *     "ccomp": ccomp,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_auxpass); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_auxpass, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":421
 *     "aux": aux,
 *     "auxpass": auxpass,
 *     "cc": cc,             # <<<<<<<<<<<<<<
 *     "ccomp": ccomp,
 *     "complm": complm,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_cc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 421, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_cc, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":422
 *     "auxpass": auxpass,
 *     "cc": cc,
 *     "ccomp": ccomp,             # <<<<<<<<<<<<<<
 *     "complm": complm,
 *     "conj": conj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_ccomp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ccomp, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":423
 *     "cc": cc,
 *     "ccomp": ccomp,
 *     "complm": complm,             # <<<<<<<<<<<<<<
 *     "conj": conj,
 *     "cop": cop,  # U20
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_complm); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_complm, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":424
 *     "ccomp": ccomp,
 *     "complm": complm,
 *     "conj": conj,             # <<<<<<<<<<<<<<
 *     "cop": cop,  # U20
 *     "csubj": csubj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_conj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_conj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":425
 *     "complm": complm,
 *     "conj": conj,
 *     "cop": cop,  # U20             # <<<<<<<<<<<<<<
 *     "csubj": csubj,
 *     "csubjpass": csubjpass,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_cop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_cop, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":426
 *     "conj": conj,
 *     "cop": cop,  # U20
 *     "csubj": csubj,             # <<<<<<<<<<<<<<
 *     "csubjpass": csubjpass,
 *     "dep": dep,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_csubj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 426, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_csubj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":427
 *     "cop": cop,  # U20
 *     "csubj": csubj,
 *     "csubjpass": csubjpass,             # <<<<<<<<<<<<<<
 *     "dep": dep,
 *     "det": det,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_csubjpass); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_csubjpass, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":428
 *     "csubj": csubj,
 *     "csubjpass": csubjpass,
 *     "dep": dep,             # <<<<<<<<<<<<<<
 *     "det": det,
 *     "dobj": dobj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_dep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_dep, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":429
 *     "csubjpass": csubjpass,
 *     "dep": dep,
 *     "det": det,             # <<<<<<<<<<<<<<
 *     "dobj": dobj,
 *     "expl": expl,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_det); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_det, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":430
 *     "dep": dep,
 *     "det": det,
 *     "dobj": dobj,             # <<<<<<<<<<<<<<
 *     "expl": expl,
 *     "hmod": hmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_dobj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 430, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_dobj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":431
 *     "det": det,
 *     "dobj": dobj,
 *     "expl": expl,             # <<<<<<<<<<<<<<
 *     "hmod": hmod,
 *     "hyph": hyph,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_expl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_expl, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":432
 *     "dobj": dobj,
 *     "expl": expl,
 *     "hmod": hmod,             # <<<<<<<<<<<<<<
 *     "hyph": hyph,
 *     "infmod": infmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_hmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_hmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":433
 *     "expl": expl,
 *     "hmod": hmod,
 *     "hyph": hyph,             # <<<<<<<<<<<<<<
 *     "infmod": infmod,
 *     "intj": intj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_hyph); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_hyph, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":434
 *     "hmod": hmod,
 *     "hyph": hyph,
 *     "infmod": infmod,             # <<<<<<<<<<<<<<
 *     "intj": intj,
 *     "iobj": iobj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_infmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_infmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":435
 *     "hyph": hyph,
 *     "infmod": infmod,
 *     "intj": intj,             # <<<<<<<<<<<<<<
 *     "iobj": iobj,
 *     "mark": mark,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_intj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_intj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":436
 *     "infmod": infmod,
 *     "intj": intj,
 *     "iobj": iobj,             # <<<<<<<<<<<<<<
 *     "mark": mark,
 *     "meta": meta,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_iobj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_iobj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":437
 *     "intj": intj,
 *     "iobj": iobj,
 *     "mark": mark,             # <<<<<<<<<<<<<<
 *     "meta": meta,
 *     "neg": neg,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_mark); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_mark, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":438
 *     "iobj": iobj,
 *     "mark": mark,
 *     "meta": meta,             # <<<<<<<<<<<<<<
 *     "neg": neg,
 *     "nmod": nmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_meta); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_meta, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":439
 *     "mark": mark,
 *     "meta": meta,
 *     "neg": neg,             # <<<<<<<<<<<<<<
 *     "nmod": nmod,
 *     "nn": nn,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_neg); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_neg, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":440
 *     "meta": meta,
 *     "neg": neg,
 *     "nmod": nmod,             # <<<<<<<<<<<<<<
 *     "nn": nn,
 *     "npadvmod": npadvmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_nmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_nmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":441
 *     "neg": neg,
 *     "nmod": nmod,
 *     "nn": nn,             # <<<<<<<<<<<<<<
 *     "npadvmod": npadvmod,
 *     "nsubj": nsubj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_nn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_nn, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":442
 *     "nmod": nmod,
 *     "nn": nn,
 *     "npadvmod": npadvmod,             # <<<<<<<<<<<<<<
 *     "nsubj": nsubj,
 *     "nsubjpass": nsubjpass,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_npadvmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_npadvmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":443
 *     "nn": nn,
 *     "npadvmod": npadvmod,
 *     "nsubj": nsubj,             # <<<<<<<<<<<<<<
 *     "nsubjpass": nsubjpass,
 *     "num": num,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_nsubj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_nsubj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":444
 *     "npadvmod": npadvmod,
 *     "nsubj": nsubj,
 *     "nsubjpass": nsubjpass,             # <<<<<<<<<<<<<<
 *     "num": num,
 *     "number": number,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_nsubjpass); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_nsubjpass, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":445
 *     "nsubj": nsubj,
 *     "nsubjpass": nsubjpass,
 *     "num": num,             # <<<<<<<<<<<<<<
 *     "number": number,
 *     "oprd": oprd,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_num, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":446
 *     "nsubjpass": nsubjpass,
 *     "num": num,
 *     "number": number,             # <<<<<<<<<<<<<<
 *     "oprd": oprd,
 *     "obj": obj,  # U20
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_number); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_number, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":447
 *     "num": num,
 *     "number": number,
 *     "oprd": oprd,             # <<<<<<<<<<<<<<
 *     "obj": obj,  # U20
 *     "obl": obl,  # U20
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_oprd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_oprd, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":448
 *     "number": number,
 *     "oprd": oprd,
 *     "obj": obj,  # U20             # <<<<<<<<<<<<<<
 *     "obl": obl,  # U20
 *     "parataxis": parataxis,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_obj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_obj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":449
 *     "oprd": oprd,
 *     "obj": obj,  # U20
 *     "obl": obl,  # U20             # <<<<<<<<<<<<<<
 *     "parataxis": parataxis,
 *     "partmod": partmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_obl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_obl, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":450
 *     "obj": obj,  # U20
 *     "obl": obl,  # U20
 *     "parataxis": parataxis,             # <<<<<<<<<<<<<<
 *     "partmod": partmod,
 *     "pcomp": pcomp,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_parataxis); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_parataxis, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":451
 *     "obl": obl,  # U20
 *     "parataxis": parataxis,
 *     "partmod": partmod,             # <<<<<<<<<<<<<<
 *     "pcomp": pcomp,
 *     "pobj": pobj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_partmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_partmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":452
 *     "parataxis": parataxis,
 *     "partmod": partmod,
 *     "pcomp": pcomp,             # <<<<<<<<<<<<<<
 *     "pobj": pobj,
 *     "poss": poss,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_pcomp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_pcomp, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":453
 *     "partmod": partmod,
 *     "pcomp": pcomp,
 *     "pobj": pobj,             # <<<<<<<<<<<<<<
 *     "poss": poss,
 *     "possessive": possessive,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_pobj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_pobj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":454
 *     "pcomp": pcomp,
 *     "pobj": pobj,
 *     "poss": poss,             # <<<<<<<<<<<<<<
 *     "possessive": possessive,
 *     "preconj": preconj,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_poss); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_poss, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":455
 *     "pobj": pobj,
 *     "poss": poss,
 *     "possessive": possessive,             # <<<<<<<<<<<<<<
 *     "preconj": preconj,
 *     "prep": prep,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_possessive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_possessive, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":456
 *     "poss": poss,
 *     "possessive": possessive,
 *     "preconj": preconj,             # <<<<<<<<<<<<<<
 *     "prep": prep,
 *     "prt": prt,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_preconj); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_preconj, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":457
 *     "possessive": possessive,
 *     "preconj": preconj,
 *     "prep": prep,             # <<<<<<<<<<<<<<
 *     "prt": prt,
 *     "punct": punct,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_prep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_prep, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":458
 *     "preconj": preconj,
 *     "prep": prep,
 *     "prt": prt,             # <<<<<<<<<<<<<<
 *     "punct": punct,
 *     "quantmod": quantmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_prt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_prt, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":459
 *     "prep": prep,
 *     "prt": prt,
 *     "punct": punct,             # <<<<<<<<<<<<<<
 *     "quantmod": quantmod,
 *     "rcmod": rcmod,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_punct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_punct, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":460
 *     "prt": prt,
 *     "punct": punct,
 *     "quantmod": quantmod,             # <<<<<<<<<<<<<<
 *     "rcmod": rcmod,
 *     "relcl": relcl,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_quantmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_quantmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":461
 *     "punct": punct,
 *     "quantmod": quantmod,
 *     "rcmod": rcmod,             # <<<<<<<<<<<<<<
 *     "relcl": relcl,
 *     "root": root,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_rcmod); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_rcmod, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":462
 *     "quantmod": quantmod,
 *     "rcmod": rcmod,
 *     "relcl": relcl,             # <<<<<<<<<<<<<<
 *     "root": root,
 *     "xcomp": xcomp,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_relcl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_relcl, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":463
 *     "rcmod": rcmod,
 *     "relcl": relcl,
 *     "root": root,             # <<<<<<<<<<<<<<
 *     "xcomp": xcomp,
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_root); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_root, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":464
 *     "relcl": relcl,
 *     "root": root,
 *     "xcomp": xcomp,             # <<<<<<<<<<<<<<
 * 
 *     "acl": acl,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_xcomp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_xcomp, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":466
 *     "xcomp": xcomp,
 * 
 *     "acl": acl,             # <<<<<<<<<<<<<<
 *     "LAW": LAW,
 *     "MORPH": MORPH,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_acl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_acl, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":467
 * 
 *     "acl": acl,
 *     "LAW": LAW,             # <<<<<<<<<<<<<<
 *     "MORPH": MORPH,
 *     "_": _,
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_LAW); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_LAW, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":468
 *     "acl": acl,
 *     "LAW": LAW,
 *     "MORPH": MORPH,             # <<<<<<<<<<<<<<
 *     "_": _,
 * }
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols_MORPH); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_MORPH, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "spacy/symbols.pyx":469
 *     "LAW": LAW,
 *     "MORPH": MORPH,
 *     "_": _,             # <<<<<<<<<<<<<<
 * }
 * 
*/
  __pyx_t_3 = __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(__pyx_e_5spacy_7symbols__); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u__2, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_IDS, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "spacy/symbols.pyx":473
 * 
 * 
 * def sort_nums(x):             # <<<<<<<<<<<<<<
 *     return x[1]
 * 
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_5spacy_7symbols_1sort_nums, 0, __pyx_mstate_global->__pyx_n_u_sort_nums, NULL, __pyx_mstate_global->__pyx_n_u_spacy_symbols, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_sort_nums, __pyx_t_2) < 0) __PYX_ERR(0, 473, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "spacy/symbols.pyx":477
 * 
 * 
 * NAMES = [it[0] for it in sorted(IDS.items(), key=sort_nums)]             # <<<<<<<<<<<<<<
 * # Unfortunate hack here, to work around problem with long cpdef enum
 * # (which is generating an enormous amount of C++ in Cython 0.24+)
*/
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_sorted);
  __pyx_t_5 = __pyx_builtin_sorted; 
  __pyx_t_7 = NULL;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_mstate_global->__pyx_n_u_IDS); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_mstate_global->__pyx_n_u_items); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_10 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_7, NULL};
    __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+__pyx_t_10, (1-__pyx_t_10) | (__pyx_t_10*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
  }
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_mstate_global->__pyx_n_u_sort_nums); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = 1;
  {
    PyObject *__pyx_callargs[2 + ((CYTHON_VECTORCALL) ? 1 : 0)] = {__pyx_t_4, __pyx_t_6};
    __pyx_t_7 = __Pyx_MakeVectorcallBuilderKwds(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__Pyx_VectorcallBuilder_AddArg(__pyx_mstate_global->__pyx_n_u_key, __pyx_t_9, __pyx_t_7, __pyx_callargs+2, 0) < 0) __PYX_ERR(0, 477, __pyx_L1_error)
    __pyx_t_3 = __Pyx_Object_Vectorcall_CallFromBuilder(__pyx_t_5, __pyx_callargs+__pyx_t_10, (2-__pyx_t_10) | (__pyx_t_10*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET), __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_5 = __pyx_t_3; __Pyx_INCREF(__pyx_t_5);
    __pyx_t_11 = 0;
    __pyx_t_12 = NULL;
  } else {
    __pyx_t_11 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_12 = (CYTHON_COMPILING_IN_LIMITED_API) ? PyIter_Next : __Pyx_PyObject_GetIterNextFunc(__pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 477, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_12)) {
      if (likely(PyList_CheckExact(__pyx_t_5))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_5);
          #if !CYTHON_ASSUME_SAFE_SIZE
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 477, __pyx_L1_error)
          #endif
          if (__pyx_t_11 >= __pyx_temp) break;
        }
        __pyx_t_3 = __Pyx_PyList_GetItemRef(__pyx_t_5, __pyx_t_11);
        ++__pyx_t_11;
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_5);
          #if !CYTHON_ASSUME_SAFE_SIZE
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 477, __pyx_L1_error)
          #endif
          if (__pyx_t_11 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = __Pyx_NewRef(PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_11));
        #else
        __pyx_t_3 = __Pyx_PySequence_ITEM(__pyx_t_5, __pyx_t_11);
        #endif
        ++__pyx_t_11;
      }
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
    } else {
      __pyx_t_3 = __pyx_t_12(__pyx_t_5);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) __PYX_ERR(0, 477, __pyx_L1_error)
          PyErr_Clear();
        }
        break;
      }
    }
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_it, __pyx_t_3) < 0) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_it); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyLong_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) __PYX_ERR(0, 477, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_NAMES, __pyx_t_2) < 0) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "spacy/symbols.pyx":481
 * # (which is generating an enormous amount of C++ in Cython 0.24+)
 * # We keep the enum cdef, and just make sure the names are available to Python
 * locals().update(IDS)             # <<<<<<<<<<<<<<
 * 
*/
  __pyx_t_7 = __Pyx_Globals(); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_5 = __pyx_t_7;
  __Pyx_INCREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_IDS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_10 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_2 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_update, __pyx_callargs+__pyx_t_10, (2-__pyx_t_10) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "spacy/symbols.pyx":1
 * # cython: optimize.unpack_method_calls=False             # <<<<<<<<<<<<<<
 * # cython: profile=False
 * IDS = {
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  if (__pyx_m) {
    if (__pyx_mstate->__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init spacy.symbols", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init spacy.symbols");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #else
  return __pyx_m;
  #endif
}
/* #### Code section: pystring_table ### */

typedef struct {
    const char *s;
#if 18 <= 65535
    const unsigned short n;
#elif 18 / 2 < INT_MAX
    const unsigned int n;
#elif 18 / 2 < LONG_MAX
    const unsigned long n;
#else
    const Py_ssize_t n;
#endif
#if 1 <= 31
    const unsigned int encoding : 5;
#elif 1 <= 255
    const unsigned char encoding;
#elif 1 <= 65535
    const unsigned short encoding;
#else
    const Py_ssize_t encoding;
#endif
    const unsigned int is_unicode : 1;
    const unsigned int intern : 1;
} __Pyx_StringTabEntry;
static const char * const __pyx_string_tab_encodings[] = { 0 };
static const __Pyx_StringTabEntry __pyx_string_tab[] = {
  {__pyx_k_, sizeof(__pyx_k_), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_ */
  {__pyx_k_ADJ, sizeof(__pyx_k_ADJ), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ADJ */
  {__pyx_k_ADP, sizeof(__pyx_k_ADP), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ADP */
  {__pyx_k_ADV, sizeof(__pyx_k_ADV), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ADV */
  {__pyx_k_AUX, sizeof(__pyx_k_AUX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_AUX */
  {__pyx_k_CARDINAL, sizeof(__pyx_k_CARDINAL), 0, 1, 1}, /* PyObject cname: __pyx_n_u_CARDINAL */
  {__pyx_k_CCONJ, sizeof(__pyx_k_CCONJ), 0, 1, 1}, /* PyObject cname: __pyx_n_u_CCONJ */
  {__pyx_k_CLUSTER, sizeof(__pyx_k_CLUSTER), 0, 1, 1}, /* PyObject cname: __pyx_n_u_CLUSTER */
  {__pyx_k_CONJ, sizeof(__pyx_k_CONJ), 0, 1, 1}, /* PyObject cname: __pyx_n_u_CONJ */
  {__pyx_k_DATE, sizeof(__pyx_k_DATE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DATE */
  {__pyx_k_DEP, sizeof(__pyx_k_DEP), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEP */
  {__pyx_k_DEPRECATED001, sizeof(__pyx_k_DEPRECATED001), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED001 */
  {__pyx_k_DEPRECATED002, sizeof(__pyx_k_DEPRECATED002), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED002 */
  {__pyx_k_DEPRECATED003, sizeof(__pyx_k_DEPRECATED003), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED003 */
  {__pyx_k_DEPRECATED004, sizeof(__pyx_k_DEPRECATED004), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED004 */
  {__pyx_k_DEPRECATED005, sizeof(__pyx_k_DEPRECATED005), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED005 */
  {__pyx_k_DEPRECATED006, sizeof(__pyx_k_DEPRECATED006), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED006 */
  {__pyx_k_DEPRECATED007, sizeof(__pyx_k_DEPRECATED007), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED007 */
  {__pyx_k_DEPRECATED008, sizeof(__pyx_k_DEPRECATED008), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED008 */
  {__pyx_k_DEPRECATED009, sizeof(__pyx_k_DEPRECATED009), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED009 */
  {__pyx_k_DEPRECATED010, sizeof(__pyx_k_DEPRECATED010), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED010 */
  {__pyx_k_DEPRECATED011, sizeof(__pyx_k_DEPRECATED011), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED011 */
  {__pyx_k_DEPRECATED012, sizeof(__pyx_k_DEPRECATED012), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED012 */
  {__pyx_k_DEPRECATED013, sizeof(__pyx_k_DEPRECATED013), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED013 */
  {__pyx_k_DEPRECATED014, sizeof(__pyx_k_DEPRECATED014), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED014 */
  {__pyx_k_DEPRECATED015, sizeof(__pyx_k_DEPRECATED015), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED015 */
  {__pyx_k_DEPRECATED016, sizeof(__pyx_k_DEPRECATED016), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED016 */
  {__pyx_k_DEPRECATED017, sizeof(__pyx_k_DEPRECATED017), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED017 */
  {__pyx_k_DEPRECATED018, sizeof(__pyx_k_DEPRECATED018), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED018 */
  {__pyx_k_DEPRECATED019, sizeof(__pyx_k_DEPRECATED019), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED019 */
  {__pyx_k_DEPRECATED020, sizeof(__pyx_k_DEPRECATED020), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED020 */
  {__pyx_k_DEPRECATED021, sizeof(__pyx_k_DEPRECATED021), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED021 */
  {__pyx_k_DEPRECATED022, sizeof(__pyx_k_DEPRECATED022), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED022 */
  {__pyx_k_DEPRECATED023, sizeof(__pyx_k_DEPRECATED023), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED023 */
  {__pyx_k_DEPRECATED024, sizeof(__pyx_k_DEPRECATED024), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED024 */
  {__pyx_k_DEPRECATED025, sizeof(__pyx_k_DEPRECATED025), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED025 */
  {__pyx_k_DEPRECATED026, sizeof(__pyx_k_DEPRECATED026), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED026 */
  {__pyx_k_DEPRECATED027, sizeof(__pyx_k_DEPRECATED027), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED027 */
  {__pyx_k_DEPRECATED028, sizeof(__pyx_k_DEPRECATED028), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED028 */
  {__pyx_k_DEPRECATED029, sizeof(__pyx_k_DEPRECATED029), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED029 */
  {__pyx_k_DEPRECATED030, sizeof(__pyx_k_DEPRECATED030), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED030 */
  {__pyx_k_DEPRECATED031, sizeof(__pyx_k_DEPRECATED031), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED031 */
  {__pyx_k_DEPRECATED032, sizeof(__pyx_k_DEPRECATED032), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED032 */
  {__pyx_k_DEPRECATED033, sizeof(__pyx_k_DEPRECATED033), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED033 */
  {__pyx_k_DEPRECATED034, sizeof(__pyx_k_DEPRECATED034), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED034 */
  {__pyx_k_DEPRECATED035, sizeof(__pyx_k_DEPRECATED035), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED035 */
  {__pyx_k_DEPRECATED036, sizeof(__pyx_k_DEPRECATED036), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED036 */
  {__pyx_k_DEPRECATED037, sizeof(__pyx_k_DEPRECATED037), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED037 */
  {__pyx_k_DEPRECATED038, sizeof(__pyx_k_DEPRECATED038), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED038 */
  {__pyx_k_DEPRECATED039, sizeof(__pyx_k_DEPRECATED039), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED039 */
  {__pyx_k_DEPRECATED040, sizeof(__pyx_k_DEPRECATED040), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED040 */
  {__pyx_k_DEPRECATED041, sizeof(__pyx_k_DEPRECATED041), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED041 */
  {__pyx_k_DEPRECATED042, sizeof(__pyx_k_DEPRECATED042), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED042 */
  {__pyx_k_DEPRECATED043, sizeof(__pyx_k_DEPRECATED043), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED043 */
  {__pyx_k_DEPRECATED044, sizeof(__pyx_k_DEPRECATED044), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED044 */
  {__pyx_k_DEPRECATED045, sizeof(__pyx_k_DEPRECATED045), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED045 */
  {__pyx_k_DEPRECATED046, sizeof(__pyx_k_DEPRECATED046), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED046 */
  {__pyx_k_DEPRECATED047, sizeof(__pyx_k_DEPRECATED047), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED047 */
  {__pyx_k_DEPRECATED048, sizeof(__pyx_k_DEPRECATED048), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED048 */
  {__pyx_k_DEPRECATED049, sizeof(__pyx_k_DEPRECATED049), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED049 */
  {__pyx_k_DEPRECATED050, sizeof(__pyx_k_DEPRECATED050), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED050 */
  {__pyx_k_DEPRECATED051, sizeof(__pyx_k_DEPRECATED051), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED051 */
  {__pyx_k_DEPRECATED052, sizeof(__pyx_k_DEPRECATED052), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED052 */
  {__pyx_k_DEPRECATED053, sizeof(__pyx_k_DEPRECATED053), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED053 */
  {__pyx_k_DEPRECATED054, sizeof(__pyx_k_DEPRECATED054), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED054 */
  {__pyx_k_DEPRECATED055, sizeof(__pyx_k_DEPRECATED055), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED055 */
  {__pyx_k_DEPRECATED056, sizeof(__pyx_k_DEPRECATED056), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED056 */
  {__pyx_k_DEPRECATED057, sizeof(__pyx_k_DEPRECATED057), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED057 */
  {__pyx_k_DEPRECATED058, sizeof(__pyx_k_DEPRECATED058), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED058 */
  {__pyx_k_DEPRECATED059, sizeof(__pyx_k_DEPRECATED059), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED059 */
  {__pyx_k_DEPRECATED060, sizeof(__pyx_k_DEPRECATED060), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED060 */
  {__pyx_k_DEPRECATED061, sizeof(__pyx_k_DEPRECATED061), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED061 */
  {__pyx_k_DEPRECATED062, sizeof(__pyx_k_DEPRECATED062), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED062 */
  {__pyx_k_DEPRECATED063, sizeof(__pyx_k_DEPRECATED063), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED063 */
  {__pyx_k_DEPRECATED064, sizeof(__pyx_k_DEPRECATED064), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED064 */
  {__pyx_k_DEPRECATED065, sizeof(__pyx_k_DEPRECATED065), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED065 */
  {__pyx_k_DEPRECATED066, sizeof(__pyx_k_DEPRECATED066), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED066 */
  {__pyx_k_DEPRECATED067, sizeof(__pyx_k_DEPRECATED067), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED067 */
  {__pyx_k_DEPRECATED068, sizeof(__pyx_k_DEPRECATED068), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED068 */
  {__pyx_k_DEPRECATED069, sizeof(__pyx_k_DEPRECATED069), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED069 */
  {__pyx_k_DEPRECATED070, sizeof(__pyx_k_DEPRECATED070), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED070 */
  {__pyx_k_DEPRECATED071, sizeof(__pyx_k_DEPRECATED071), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED071 */
  {__pyx_k_DEPRECATED072, sizeof(__pyx_k_DEPRECATED072), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED072 */
  {__pyx_k_DEPRECATED073, sizeof(__pyx_k_DEPRECATED073), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED073 */
  {__pyx_k_DEPRECATED074, sizeof(__pyx_k_DEPRECATED074), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED074 */
  {__pyx_k_DEPRECATED075, sizeof(__pyx_k_DEPRECATED075), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED075 */
  {__pyx_k_DEPRECATED076, sizeof(__pyx_k_DEPRECATED076), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED076 */
  {__pyx_k_DEPRECATED077, sizeof(__pyx_k_DEPRECATED077), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED077 */
  {__pyx_k_DEPRECATED078, sizeof(__pyx_k_DEPRECATED078), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED078 */
  {__pyx_k_DEPRECATED079, sizeof(__pyx_k_DEPRECATED079), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED079 */
  {__pyx_k_DEPRECATED080, sizeof(__pyx_k_DEPRECATED080), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED080 */
  {__pyx_k_DEPRECATED081, sizeof(__pyx_k_DEPRECATED081), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED081 */
  {__pyx_k_DEPRECATED082, sizeof(__pyx_k_DEPRECATED082), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED082 */
  {__pyx_k_DEPRECATED083, sizeof(__pyx_k_DEPRECATED083), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED083 */
  {__pyx_k_DEPRECATED084, sizeof(__pyx_k_DEPRECATED084), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED084 */
  {__pyx_k_DEPRECATED085, sizeof(__pyx_k_DEPRECATED085), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED085 */
  {__pyx_k_DEPRECATED086, sizeof(__pyx_k_DEPRECATED086), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED086 */
  {__pyx_k_DEPRECATED087, sizeof(__pyx_k_DEPRECATED087), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED087 */
  {__pyx_k_DEPRECATED088, sizeof(__pyx_k_DEPRECATED088), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED088 */
  {__pyx_k_DEPRECATED089, sizeof(__pyx_k_DEPRECATED089), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED089 */
  {__pyx_k_DEPRECATED090, sizeof(__pyx_k_DEPRECATED090), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED090 */
  {__pyx_k_DEPRECATED091, sizeof(__pyx_k_DEPRECATED091), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED091 */
  {__pyx_k_DEPRECATED092, sizeof(__pyx_k_DEPRECATED092), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED092 */
  {__pyx_k_DEPRECATED093, sizeof(__pyx_k_DEPRECATED093), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED093 */
  {__pyx_k_DEPRECATED094, sizeof(__pyx_k_DEPRECATED094), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED094 */
  {__pyx_k_DEPRECATED095, sizeof(__pyx_k_DEPRECATED095), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED095 */
  {__pyx_k_DEPRECATED096, sizeof(__pyx_k_DEPRECATED096), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED096 */
  {__pyx_k_DEPRECATED097, sizeof(__pyx_k_DEPRECATED097), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED097 */
  {__pyx_k_DEPRECATED098, sizeof(__pyx_k_DEPRECATED098), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED098 */
  {__pyx_k_DEPRECATED099, sizeof(__pyx_k_DEPRECATED099), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED099 */
  {__pyx_k_DEPRECATED100, sizeof(__pyx_k_DEPRECATED100), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED100 */
  {__pyx_k_DEPRECATED101, sizeof(__pyx_k_DEPRECATED101), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED101 */
  {__pyx_k_DEPRECATED102, sizeof(__pyx_k_DEPRECATED102), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED102 */
  {__pyx_k_DEPRECATED103, sizeof(__pyx_k_DEPRECATED103), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED103 */
  {__pyx_k_DEPRECATED104, sizeof(__pyx_k_DEPRECATED104), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED104 */
  {__pyx_k_DEPRECATED105, sizeof(__pyx_k_DEPRECATED105), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED105 */
  {__pyx_k_DEPRECATED106, sizeof(__pyx_k_DEPRECATED106), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED106 */
  {__pyx_k_DEPRECATED107, sizeof(__pyx_k_DEPRECATED107), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED107 */
  {__pyx_k_DEPRECATED108, sizeof(__pyx_k_DEPRECATED108), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED108 */
  {__pyx_k_DEPRECATED109, sizeof(__pyx_k_DEPRECATED109), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED109 */
  {__pyx_k_DEPRECATED110, sizeof(__pyx_k_DEPRECATED110), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED110 */
  {__pyx_k_DEPRECATED111, sizeof(__pyx_k_DEPRECATED111), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED111 */
  {__pyx_k_DEPRECATED112, sizeof(__pyx_k_DEPRECATED112), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED112 */
  {__pyx_k_DEPRECATED113, sizeof(__pyx_k_DEPRECATED113), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED113 */
  {__pyx_k_DEPRECATED114, sizeof(__pyx_k_DEPRECATED114), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED114 */
  {__pyx_k_DEPRECATED115, sizeof(__pyx_k_DEPRECATED115), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED115 */
  {__pyx_k_DEPRECATED116, sizeof(__pyx_k_DEPRECATED116), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED116 */
  {__pyx_k_DEPRECATED117, sizeof(__pyx_k_DEPRECATED117), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED117 */
  {__pyx_k_DEPRECATED118, sizeof(__pyx_k_DEPRECATED118), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED118 */
  {__pyx_k_DEPRECATED119, sizeof(__pyx_k_DEPRECATED119), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED119 */
  {__pyx_k_DEPRECATED120, sizeof(__pyx_k_DEPRECATED120), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED120 */
  {__pyx_k_DEPRECATED121, sizeof(__pyx_k_DEPRECATED121), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED121 */
  {__pyx_k_DEPRECATED122, sizeof(__pyx_k_DEPRECATED122), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED122 */
  {__pyx_k_DEPRECATED123, sizeof(__pyx_k_DEPRECATED123), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED123 */
  {__pyx_k_DEPRECATED124, sizeof(__pyx_k_DEPRECATED124), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED124 */
  {__pyx_k_DEPRECATED125, sizeof(__pyx_k_DEPRECATED125), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED125 */
  {__pyx_k_DEPRECATED126, sizeof(__pyx_k_DEPRECATED126), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED126 */
  {__pyx_k_DEPRECATED127, sizeof(__pyx_k_DEPRECATED127), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED127 */
  {__pyx_k_DEPRECATED128, sizeof(__pyx_k_DEPRECATED128), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED128 */
  {__pyx_k_DEPRECATED129, sizeof(__pyx_k_DEPRECATED129), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED129 */
  {__pyx_k_DEPRECATED130, sizeof(__pyx_k_DEPRECATED130), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED130 */
  {__pyx_k_DEPRECATED131, sizeof(__pyx_k_DEPRECATED131), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED131 */
  {__pyx_k_DEPRECATED132, sizeof(__pyx_k_DEPRECATED132), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED132 */
  {__pyx_k_DEPRECATED133, sizeof(__pyx_k_DEPRECATED133), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED133 */
  {__pyx_k_DEPRECATED134, sizeof(__pyx_k_DEPRECATED134), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED134 */
  {__pyx_k_DEPRECATED135, sizeof(__pyx_k_DEPRECATED135), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED135 */
  {__pyx_k_DEPRECATED136, sizeof(__pyx_k_DEPRECATED136), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED136 */
  {__pyx_k_DEPRECATED137, sizeof(__pyx_k_DEPRECATED137), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED137 */
  {__pyx_k_DEPRECATED138, sizeof(__pyx_k_DEPRECATED138), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED138 */
  {__pyx_k_DEPRECATED139, sizeof(__pyx_k_DEPRECATED139), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED139 */
  {__pyx_k_DEPRECATED140, sizeof(__pyx_k_DEPRECATED140), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED140 */
  {__pyx_k_DEPRECATED141, sizeof(__pyx_k_DEPRECATED141), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED141 */
  {__pyx_k_DEPRECATED142, sizeof(__pyx_k_DEPRECATED142), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED142 */
  {__pyx_k_DEPRECATED143, sizeof(__pyx_k_DEPRECATED143), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED143 */
  {__pyx_k_DEPRECATED144, sizeof(__pyx_k_DEPRECATED144), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED144 */
  {__pyx_k_DEPRECATED145, sizeof(__pyx_k_DEPRECATED145), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED145 */
  {__pyx_k_DEPRECATED146, sizeof(__pyx_k_DEPRECATED146), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED146 */
  {__pyx_k_DEPRECATED147, sizeof(__pyx_k_DEPRECATED147), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED147 */
  {__pyx_k_DEPRECATED148, sizeof(__pyx_k_DEPRECATED148), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED148 */
  {__pyx_k_DEPRECATED149, sizeof(__pyx_k_DEPRECATED149), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED149 */
  {__pyx_k_DEPRECATED150, sizeof(__pyx_k_DEPRECATED150), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED150 */
  {__pyx_k_DEPRECATED151, sizeof(__pyx_k_DEPRECATED151), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED151 */
  {__pyx_k_DEPRECATED152, sizeof(__pyx_k_DEPRECATED152), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED152 */
  {__pyx_k_DEPRECATED153, sizeof(__pyx_k_DEPRECATED153), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED153 */
  {__pyx_k_DEPRECATED154, sizeof(__pyx_k_DEPRECATED154), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED154 */
  {__pyx_k_DEPRECATED155, sizeof(__pyx_k_DEPRECATED155), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED155 */
  {__pyx_k_DEPRECATED156, sizeof(__pyx_k_DEPRECATED156), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED156 */
  {__pyx_k_DEPRECATED157, sizeof(__pyx_k_DEPRECATED157), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED157 */
  {__pyx_k_DEPRECATED158, sizeof(__pyx_k_DEPRECATED158), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED158 */
  {__pyx_k_DEPRECATED159, sizeof(__pyx_k_DEPRECATED159), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED159 */
  {__pyx_k_DEPRECATED160, sizeof(__pyx_k_DEPRECATED160), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED160 */
  {__pyx_k_DEPRECATED161, sizeof(__pyx_k_DEPRECATED161), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED161 */
  {__pyx_k_DEPRECATED162, sizeof(__pyx_k_DEPRECATED162), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED162 */
  {__pyx_k_DEPRECATED163, sizeof(__pyx_k_DEPRECATED163), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED163 */
  {__pyx_k_DEPRECATED164, sizeof(__pyx_k_DEPRECATED164), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED164 */
  {__pyx_k_DEPRECATED165, sizeof(__pyx_k_DEPRECATED165), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED165 */
  {__pyx_k_DEPRECATED166, sizeof(__pyx_k_DEPRECATED166), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED166 */
  {__pyx_k_DEPRECATED167, sizeof(__pyx_k_DEPRECATED167), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED167 */
  {__pyx_k_DEPRECATED168, sizeof(__pyx_k_DEPRECATED168), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED168 */
  {__pyx_k_DEPRECATED169, sizeof(__pyx_k_DEPRECATED169), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED169 */
  {__pyx_k_DEPRECATED170, sizeof(__pyx_k_DEPRECATED170), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED170 */
  {__pyx_k_DEPRECATED171, sizeof(__pyx_k_DEPRECATED171), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED171 */
  {__pyx_k_DEPRECATED172, sizeof(__pyx_k_DEPRECATED172), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED172 */
  {__pyx_k_DEPRECATED173, sizeof(__pyx_k_DEPRECATED173), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED173 */
  {__pyx_k_DEPRECATED174, sizeof(__pyx_k_DEPRECATED174), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED174 */
  {__pyx_k_DEPRECATED175, sizeof(__pyx_k_DEPRECATED175), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED175 */
  {__pyx_k_DEPRECATED176, sizeof(__pyx_k_DEPRECATED176), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED176 */
  {__pyx_k_DEPRECATED177, sizeof(__pyx_k_DEPRECATED177), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED177 */
  {__pyx_k_DEPRECATED178, sizeof(__pyx_k_DEPRECATED178), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED178 */
  {__pyx_k_DEPRECATED179, sizeof(__pyx_k_DEPRECATED179), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED179 */
  {__pyx_k_DEPRECATED180, sizeof(__pyx_k_DEPRECATED180), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED180 */
  {__pyx_k_DEPRECATED181, sizeof(__pyx_k_DEPRECATED181), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED181 */
  {__pyx_k_DEPRECATED182, sizeof(__pyx_k_DEPRECATED182), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED182 */
  {__pyx_k_DEPRECATED183, sizeof(__pyx_k_DEPRECATED183), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED183 */
  {__pyx_k_DEPRECATED184, sizeof(__pyx_k_DEPRECATED184), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED184 */
  {__pyx_k_DEPRECATED185, sizeof(__pyx_k_DEPRECATED185), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED185 */
  {__pyx_k_DEPRECATED186, sizeof(__pyx_k_DEPRECATED186), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED186 */
  {__pyx_k_DEPRECATED187, sizeof(__pyx_k_DEPRECATED187), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED187 */
  {__pyx_k_DEPRECATED188, sizeof(__pyx_k_DEPRECATED188), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED188 */
  {__pyx_k_DEPRECATED189, sizeof(__pyx_k_DEPRECATED189), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED189 */
  {__pyx_k_DEPRECATED190, sizeof(__pyx_k_DEPRECATED190), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED190 */
  {__pyx_k_DEPRECATED191, sizeof(__pyx_k_DEPRECATED191), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED191 */
  {__pyx_k_DEPRECATED192, sizeof(__pyx_k_DEPRECATED192), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED192 */
  {__pyx_k_DEPRECATED193, sizeof(__pyx_k_DEPRECATED193), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED193 */
  {__pyx_k_DEPRECATED194, sizeof(__pyx_k_DEPRECATED194), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED194 */
  {__pyx_k_DEPRECATED195, sizeof(__pyx_k_DEPRECATED195), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED195 */
  {__pyx_k_DEPRECATED196, sizeof(__pyx_k_DEPRECATED196), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED196 */
  {__pyx_k_DEPRECATED197, sizeof(__pyx_k_DEPRECATED197), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED197 */
  {__pyx_k_DEPRECATED198, sizeof(__pyx_k_DEPRECATED198), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED198 */
  {__pyx_k_DEPRECATED199, sizeof(__pyx_k_DEPRECATED199), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED199 */
  {__pyx_k_DEPRECATED200, sizeof(__pyx_k_DEPRECATED200), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED200 */
  {__pyx_k_DEPRECATED201, sizeof(__pyx_k_DEPRECATED201), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED201 */
  {__pyx_k_DEPRECATED202, sizeof(__pyx_k_DEPRECATED202), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED202 */
  {__pyx_k_DEPRECATED203, sizeof(__pyx_k_DEPRECATED203), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED203 */
  {__pyx_k_DEPRECATED204, sizeof(__pyx_k_DEPRECATED204), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED204 */
  {__pyx_k_DEPRECATED205, sizeof(__pyx_k_DEPRECATED205), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED205 */
  {__pyx_k_DEPRECATED206, sizeof(__pyx_k_DEPRECATED206), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED206 */
  {__pyx_k_DEPRECATED207, sizeof(__pyx_k_DEPRECATED207), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED207 */
  {__pyx_k_DEPRECATED208, sizeof(__pyx_k_DEPRECATED208), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED208 */
  {__pyx_k_DEPRECATED209, sizeof(__pyx_k_DEPRECATED209), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED209 */
  {__pyx_k_DEPRECATED210, sizeof(__pyx_k_DEPRECATED210), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED210 */
  {__pyx_k_DEPRECATED211, sizeof(__pyx_k_DEPRECATED211), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED211 */
  {__pyx_k_DEPRECATED212, sizeof(__pyx_k_DEPRECATED212), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED212 */
  {__pyx_k_DEPRECATED213, sizeof(__pyx_k_DEPRECATED213), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED213 */
  {__pyx_k_DEPRECATED214, sizeof(__pyx_k_DEPRECATED214), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED214 */
  {__pyx_k_DEPRECATED215, sizeof(__pyx_k_DEPRECATED215), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED215 */
  {__pyx_k_DEPRECATED216, sizeof(__pyx_k_DEPRECATED216), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED216 */
  {__pyx_k_DEPRECATED217, sizeof(__pyx_k_DEPRECATED217), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED217 */
  {__pyx_k_DEPRECATED218, sizeof(__pyx_k_DEPRECATED218), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED218 */
  {__pyx_k_DEPRECATED219, sizeof(__pyx_k_DEPRECATED219), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED219 */
  {__pyx_k_DEPRECATED220, sizeof(__pyx_k_DEPRECATED220), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED220 */
  {__pyx_k_DEPRECATED221, sizeof(__pyx_k_DEPRECATED221), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED221 */
  {__pyx_k_DEPRECATED222, sizeof(__pyx_k_DEPRECATED222), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED222 */
  {__pyx_k_DEPRECATED223, sizeof(__pyx_k_DEPRECATED223), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED223 */
  {__pyx_k_DEPRECATED224, sizeof(__pyx_k_DEPRECATED224), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED224 */
  {__pyx_k_DEPRECATED225, sizeof(__pyx_k_DEPRECATED225), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED225 */
  {__pyx_k_DEPRECATED226, sizeof(__pyx_k_DEPRECATED226), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED226 */
  {__pyx_k_DEPRECATED227, sizeof(__pyx_k_DEPRECATED227), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED227 */
  {__pyx_k_DEPRECATED228, sizeof(__pyx_k_DEPRECATED228), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED228 */
  {__pyx_k_DEPRECATED229, sizeof(__pyx_k_DEPRECATED229), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED229 */
  {__pyx_k_DEPRECATED230, sizeof(__pyx_k_DEPRECATED230), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED230 */
  {__pyx_k_DEPRECATED231, sizeof(__pyx_k_DEPRECATED231), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED231 */
  {__pyx_k_DEPRECATED232, sizeof(__pyx_k_DEPRECATED232), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED232 */
  {__pyx_k_DEPRECATED233, sizeof(__pyx_k_DEPRECATED233), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED233 */
  {__pyx_k_DEPRECATED234, sizeof(__pyx_k_DEPRECATED234), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED234 */
  {__pyx_k_DEPRECATED235, sizeof(__pyx_k_DEPRECATED235), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED235 */
  {__pyx_k_DEPRECATED236, sizeof(__pyx_k_DEPRECATED236), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED236 */
  {__pyx_k_DEPRECATED237, sizeof(__pyx_k_DEPRECATED237), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED237 */
  {__pyx_k_DEPRECATED238, sizeof(__pyx_k_DEPRECATED238), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED238 */
  {__pyx_k_DEPRECATED239, sizeof(__pyx_k_DEPRECATED239), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED239 */
  {__pyx_k_DEPRECATED240, sizeof(__pyx_k_DEPRECATED240), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED240 */
  {__pyx_k_DEPRECATED241, sizeof(__pyx_k_DEPRECATED241), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED241 */
  {__pyx_k_DEPRECATED242, sizeof(__pyx_k_DEPRECATED242), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED242 */
  {__pyx_k_DEPRECATED243, sizeof(__pyx_k_DEPRECATED243), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED243 */
  {__pyx_k_DEPRECATED244, sizeof(__pyx_k_DEPRECATED244), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED244 */
  {__pyx_k_DEPRECATED245, sizeof(__pyx_k_DEPRECATED245), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED245 */
  {__pyx_k_DEPRECATED246, sizeof(__pyx_k_DEPRECATED246), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED246 */
  {__pyx_k_DEPRECATED247, sizeof(__pyx_k_DEPRECATED247), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED247 */
  {__pyx_k_DEPRECATED248, sizeof(__pyx_k_DEPRECATED248), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED248 */
  {__pyx_k_DEPRECATED249, sizeof(__pyx_k_DEPRECATED249), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED249 */
  {__pyx_k_DEPRECATED250, sizeof(__pyx_k_DEPRECATED250), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED250 */
  {__pyx_k_DEPRECATED251, sizeof(__pyx_k_DEPRECATED251), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED251 */
  {__pyx_k_DEPRECATED252, sizeof(__pyx_k_DEPRECATED252), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED252 */
  {__pyx_k_DEPRECATED253, sizeof(__pyx_k_DEPRECATED253), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED253 */
  {__pyx_k_DEPRECATED254, sizeof(__pyx_k_DEPRECATED254), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED254 */
  {__pyx_k_DEPRECATED255, sizeof(__pyx_k_DEPRECATED255), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED255 */
  {__pyx_k_DEPRECATED256, sizeof(__pyx_k_DEPRECATED256), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED256 */
  {__pyx_k_DEPRECATED257, sizeof(__pyx_k_DEPRECATED257), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED257 */
  {__pyx_k_DEPRECATED258, sizeof(__pyx_k_DEPRECATED258), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED258 */
  {__pyx_k_DEPRECATED259, sizeof(__pyx_k_DEPRECATED259), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED259 */
  {__pyx_k_DEPRECATED260, sizeof(__pyx_k_DEPRECATED260), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED260 */
  {__pyx_k_DEPRECATED261, sizeof(__pyx_k_DEPRECATED261), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED261 */
  {__pyx_k_DEPRECATED262, sizeof(__pyx_k_DEPRECATED262), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED262 */
  {__pyx_k_DEPRECATED263, sizeof(__pyx_k_DEPRECATED263), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED263 */
  {__pyx_k_DEPRECATED264, sizeof(__pyx_k_DEPRECATED264), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED264 */
  {__pyx_k_DEPRECATED265, sizeof(__pyx_k_DEPRECATED265), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED265 */
  {__pyx_k_DEPRECATED266, sizeof(__pyx_k_DEPRECATED266), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED266 */
  {__pyx_k_DEPRECATED267, sizeof(__pyx_k_DEPRECATED267), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED267 */
  {__pyx_k_DEPRECATED268, sizeof(__pyx_k_DEPRECATED268), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED268 */
  {__pyx_k_DEPRECATED269, sizeof(__pyx_k_DEPRECATED269), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED269 */
  {__pyx_k_DEPRECATED270, sizeof(__pyx_k_DEPRECATED270), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED270 */
  {__pyx_k_DEPRECATED271, sizeof(__pyx_k_DEPRECATED271), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED271 */
  {__pyx_k_DEPRECATED272, sizeof(__pyx_k_DEPRECATED272), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED272 */
  {__pyx_k_DEPRECATED273, sizeof(__pyx_k_DEPRECATED273), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED273 */
  {__pyx_k_DEPRECATED274, sizeof(__pyx_k_DEPRECATED274), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED274 */
  {__pyx_k_DEPRECATED275, sizeof(__pyx_k_DEPRECATED275), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED275 */
  {__pyx_k_DEPRECATED276, sizeof(__pyx_k_DEPRECATED276), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DEPRECATED276 */
  {__pyx_k_DET, sizeof(__pyx_k_DET), 0, 1, 1}, /* PyObject cname: __pyx_n_u_DET */
  {__pyx_k_ENT_ID, sizeof(__pyx_k_ENT_ID), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ENT_ID */
  {__pyx_k_ENT_IOB, sizeof(__pyx_k_ENT_IOB), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ENT_IOB */
  {__pyx_k_ENT_KB_ID, sizeof(__pyx_k_ENT_KB_ID), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ENT_KB_ID */
  {__pyx_k_ENT_TYPE, sizeof(__pyx_k_ENT_TYPE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ENT_TYPE */
  {__pyx_k_EOL, sizeof(__pyx_k_EOL), 0, 1, 1}, /* PyObject cname: __pyx_n_u_EOL */
  {__pyx_k_EVENT, sizeof(__pyx_k_EVENT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_EVENT */
  {__pyx_k_FACILITY, sizeof(__pyx_k_FACILITY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FACILITY */
  {__pyx_k_FLAG19, sizeof(__pyx_k_FLAG19), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG19 */
  {__pyx_k_FLAG20, sizeof(__pyx_k_FLAG20), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG20 */
  {__pyx_k_FLAG21, sizeof(__pyx_k_FLAG21), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG21 */
  {__pyx_k_FLAG22, sizeof(__pyx_k_FLAG22), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG22 */
  {__pyx_k_FLAG23, sizeof(__pyx_k_FLAG23), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG23 */
  {__pyx_k_FLAG24, sizeof(__pyx_k_FLAG24), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG24 */
  {__pyx_k_FLAG25, sizeof(__pyx_k_FLAG25), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG25 */
  {__pyx_k_FLAG26, sizeof(__pyx_k_FLAG26), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG26 */
  {__pyx_k_FLAG27, sizeof(__pyx_k_FLAG27), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG27 */
  {__pyx_k_FLAG28, sizeof(__pyx_k_FLAG28), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG28 */
  {__pyx_k_FLAG29, sizeof(__pyx_k_FLAG29), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG29 */
  {__pyx_k_FLAG30, sizeof(__pyx_k_FLAG30), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG30 */
  {__pyx_k_FLAG31, sizeof(__pyx_k_FLAG31), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG31 */
  {__pyx_k_FLAG32, sizeof(__pyx_k_FLAG32), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG32 */
  {__pyx_k_FLAG33, sizeof(__pyx_k_FLAG33), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG33 */
  {__pyx_k_FLAG34, sizeof(__pyx_k_FLAG34), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG34 */
  {__pyx_k_FLAG35, sizeof(__pyx_k_FLAG35), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG35 */
  {__pyx_k_FLAG36, sizeof(__pyx_k_FLAG36), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG36 */
  {__pyx_k_FLAG37, sizeof(__pyx_k_FLAG37), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG37 */
  {__pyx_k_FLAG38, sizeof(__pyx_k_FLAG38), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG38 */
  {__pyx_k_FLAG39, sizeof(__pyx_k_FLAG39), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG39 */
  {__pyx_k_FLAG40, sizeof(__pyx_k_FLAG40), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG40 */
  {__pyx_k_FLAG41, sizeof(__pyx_k_FLAG41), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG41 */
  {__pyx_k_FLAG42, sizeof(__pyx_k_FLAG42), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG42 */
  {__pyx_k_FLAG43, sizeof(__pyx_k_FLAG43), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG43 */
  {__pyx_k_FLAG44, sizeof(__pyx_k_FLAG44), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG44 */
  {__pyx_k_FLAG45, sizeof(__pyx_k_FLAG45), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG45 */
  {__pyx_k_FLAG46, sizeof(__pyx_k_FLAG46), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG46 */
  {__pyx_k_FLAG47, sizeof(__pyx_k_FLAG47), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG47 */
  {__pyx_k_FLAG48, sizeof(__pyx_k_FLAG48), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG48 */
  {__pyx_k_FLAG49, sizeof(__pyx_k_FLAG49), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG49 */
  {__pyx_k_FLAG50, sizeof(__pyx_k_FLAG50), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG50 */
  {__pyx_k_FLAG51, sizeof(__pyx_k_FLAG51), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG51 */
  {__pyx_k_FLAG52, sizeof(__pyx_k_FLAG52), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG52 */
  {__pyx_k_FLAG53, sizeof(__pyx_k_FLAG53), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG53 */
  {__pyx_k_FLAG54, sizeof(__pyx_k_FLAG54), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG54 */
  {__pyx_k_FLAG55, sizeof(__pyx_k_FLAG55), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG55 */
  {__pyx_k_FLAG56, sizeof(__pyx_k_FLAG56), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG56 */
  {__pyx_k_FLAG57, sizeof(__pyx_k_FLAG57), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG57 */
  {__pyx_k_FLAG58, sizeof(__pyx_k_FLAG58), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG58 */
  {__pyx_k_FLAG59, sizeof(__pyx_k_FLAG59), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG59 */
  {__pyx_k_FLAG60, sizeof(__pyx_k_FLAG60), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG60 */
  {__pyx_k_FLAG61, sizeof(__pyx_k_FLAG61), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG61 */
  {__pyx_k_FLAG62, sizeof(__pyx_k_FLAG62), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG62 */
  {__pyx_k_FLAG63, sizeof(__pyx_k_FLAG63), 0, 1, 1}, /* PyObject cname: __pyx_n_u_FLAG63 */
  {__pyx_k_GPE, sizeof(__pyx_k_GPE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_GPE */
  {__pyx_k_HEAD, sizeof(__pyx_k_HEAD), 0, 1, 1}, /* PyObject cname: __pyx_n_u_HEAD */
  {__pyx_k_ID, sizeof(__pyx_k_ID), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ID */
  {__pyx_k_IDS, sizeof(__pyx_k_IDS), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IDS */
  {__pyx_k_IDX, sizeof(__pyx_k_IDX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IDX */
  {__pyx_k_INTJ, sizeof(__pyx_k_INTJ), 0, 1, 1}, /* PyObject cname: __pyx_n_u_INTJ */
  {__pyx_k_IS_ALPHA, sizeof(__pyx_k_IS_ALPHA), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_ALPHA */
  {__pyx_k_IS_ASCII, sizeof(__pyx_k_IS_ASCII), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_ASCII */
  {__pyx_k_IS_BRACKET, sizeof(__pyx_k_IS_BRACKET), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_BRACKET */
  {__pyx_k_IS_CURRENCY, sizeof(__pyx_k_IS_CURRENCY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_CURRENCY */
  {__pyx_k_IS_DIGIT, sizeof(__pyx_k_IS_DIGIT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_DIGIT */
  {__pyx_k_IS_LEFT_PUNCT, sizeof(__pyx_k_IS_LEFT_PUNCT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_LEFT_PUNCT */
  {__pyx_k_IS_LOWER, sizeof(__pyx_k_IS_LOWER), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_LOWER */
  {__pyx_k_IS_OOV_DEPRECATED, sizeof(__pyx_k_IS_OOV_DEPRECATED), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_OOV_DEPRECATED */
  {__pyx_k_IS_PUNCT, sizeof(__pyx_k_IS_PUNCT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_PUNCT */
  {__pyx_k_IS_QUOTE, sizeof(__pyx_k_IS_QUOTE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_QUOTE */
  {__pyx_k_IS_RIGHT_PUNCT, sizeof(__pyx_k_IS_RIGHT_PUNCT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_RIGHT_PUNCT */
  {__pyx_k_IS_SPACE, sizeof(__pyx_k_IS_SPACE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_SPACE */
  {__pyx_k_IS_STOP, sizeof(__pyx_k_IS_STOP), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_STOP */
  {__pyx_k_IS_TITLE, sizeof(__pyx_k_IS_TITLE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_TITLE */
  {__pyx_k_IS_UPPER, sizeof(__pyx_k_IS_UPPER), 0, 1, 1}, /* PyObject cname: __pyx_n_u_IS_UPPER */
  {__pyx_k_LANG, sizeof(__pyx_k_LANG), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LANG */
  {__pyx_k_LANGUAGE, sizeof(__pyx_k_LANGUAGE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LANGUAGE */
  {__pyx_k_LAW, sizeof(__pyx_k_LAW), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LAW */
  {__pyx_k_LEMMA, sizeof(__pyx_k_LEMMA), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LEMMA */
  {__pyx_k_LENGTH, sizeof(__pyx_k_LENGTH), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LENGTH */
  {__pyx_k_LIKE_EMAIL, sizeof(__pyx_k_LIKE_EMAIL), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LIKE_EMAIL */
  {__pyx_k_LIKE_NUM, sizeof(__pyx_k_LIKE_NUM), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LIKE_NUM */
  {__pyx_k_LIKE_URL, sizeof(__pyx_k_LIKE_URL), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LIKE_URL */
  {__pyx_k_LOC, sizeof(__pyx_k_LOC), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LOC */
  {__pyx_k_LOWER, sizeof(__pyx_k_LOWER), 0, 1, 1}, /* PyObject cname: __pyx_n_u_LOWER */
  {__pyx_k_MONEY, sizeof(__pyx_k_MONEY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MONEY */
  {__pyx_k_MORPH, sizeof(__pyx_k_MORPH), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MORPH */
  {__pyx_k_NAMES, sizeof(__pyx_k_NAMES), 0, 1, 1}, /* PyObject cname: __pyx_n_u_NAMES */
  {__pyx_k_NORM, sizeof(__pyx_k_NORM), 0, 1, 1}, /* PyObject cname: __pyx_n_u_NORM */
  {__pyx_k_NORP, sizeof(__pyx_k_NORP), 0, 1, 1}, /* PyObject cname: __pyx_n_u_NORP */
  {__pyx_k_NOUN, sizeof(__pyx_k_NOUN), 0, 1, 1}, /* PyObject cname: __pyx_n_u_NOUN */
  {__pyx_k_NUM, sizeof(__pyx_k_NUM), 0, 1, 1}, /* PyObject cname: __pyx_n_u_NUM */
  {__pyx_k_ORDINAL, sizeof(__pyx_k_ORDINAL), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ORDINAL */
  {__pyx_k_ORG, sizeof(__pyx_k_ORG), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ORG */
  {__pyx_k_ORTH, sizeof(__pyx_k_ORTH), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ORTH */
  {__pyx_k_PART, sizeof(__pyx_k_PART), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PART */
  {__pyx_k_PERCENT, sizeof(__pyx_k_PERCENT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PERCENT */
  {__pyx_k_PERSON, sizeof(__pyx_k_PERSON), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PERSON */
  {__pyx_k_POS, sizeof(__pyx_k_POS), 0, 1, 1}, /* PyObject cname: __pyx_n_u_POS */
  {__pyx_k_PREFIX, sizeof(__pyx_k_PREFIX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PREFIX */
  {__pyx_k_PROB, sizeof(__pyx_k_PROB), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PROB */
  {__pyx_k_PRODUCT, sizeof(__pyx_k_PRODUCT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PRODUCT */
  {__pyx_k_PRON, sizeof(__pyx_k_PRON), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PRON */
  {__pyx_k_PROPN, sizeof(__pyx_k_PROPN), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PROPN */
  {__pyx_k_PUNCT, sizeof(__pyx_k_PUNCT), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PUNCT */
  {__pyx_k_QUANTITY, sizeof(__pyx_k_QUANTITY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_QUANTITY */
  {__pyx_k_SCONJ, sizeof(__pyx_k_SCONJ), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SCONJ */
  {__pyx_k_SENT_START, sizeof(__pyx_k_SENT_START), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SENT_START */
  {__pyx_k_SHAPE, sizeof(__pyx_k_SHAPE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SHAPE */
  {__pyx_k_SPACE, sizeof(__pyx_k_SPACE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SPACE */
  {__pyx_k_SPACY, sizeof(__pyx_k_SPACY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SPACY */
  {__pyx_k_SUFFIX, sizeof(__pyx_k_SUFFIX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SUFFIX */
  {__pyx_k_SYM, sizeof(__pyx_k_SYM), 0, 1, 1}, /* PyObject cname: __pyx_n_u_SYM */
  {__pyx_k_TAG, sizeof(__pyx_k_TAG), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TAG */
  {__pyx_k_TIME, sizeof(__pyx_k_TIME), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TIME */
  {__pyx_k_VERB, sizeof(__pyx_k_VERB), 0, 1, 1}, /* PyObject cname: __pyx_n_u_VERB */
  {__pyx_k_WORK_OF_ART, sizeof(__pyx_k_WORK_OF_ART), 0, 1, 1}, /* PyObject cname: __pyx_n_u_WORK_OF_ART */
  {__pyx_k_X, sizeof(__pyx_k_X), 0, 1, 1}, /* PyObject cname: __pyx_n_u_X */
  {__pyx_k__2, sizeof(__pyx_k__2), 0, 1, 1}, /* PyObject cname: __pyx_n_u__2 */
  {__pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0}, /* PyObject cname: __pyx_kp_u__3 */
  {__pyx_k_acl, sizeof(__pyx_k_acl), 0, 1, 1}, /* PyObject cname: __pyx_n_u_acl */
  {__pyx_k_acomp, sizeof(__pyx_k_acomp), 0, 1, 1}, /* PyObject cname: __pyx_n_u_acomp */
  {__pyx_k_advcl, sizeof(__pyx_k_advcl), 0, 1, 1}, /* PyObject cname: __pyx_n_u_advcl */
  {__pyx_k_advmod, sizeof(__pyx_k_advmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_advmod */
  {__pyx_k_agent, sizeof(__pyx_k_agent), 0, 1, 1}, /* PyObject cname: __pyx_n_u_agent */
  {__pyx_k_amod, sizeof(__pyx_k_amod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_amod */
  {__pyx_k_appos, sizeof(__pyx_k_appos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_appos */
  {__pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 1, 1}, /* PyObject cname: __pyx_n_u_asyncio_coroutines */
  {__pyx_k_attr, sizeof(__pyx_k_attr), 0, 1, 1}, /* PyObject cname: __pyx_n_u_attr */
  {__pyx_k_aux, sizeof(__pyx_k_aux), 0, 1, 1}, /* PyObject cname: __pyx_n_u_aux */
  {__pyx_k_auxpass, sizeof(__pyx_k_auxpass), 0, 1, 1}, /* PyObject cname: __pyx_n_u_auxpass */
  {__pyx_k_cc, sizeof(__pyx_k_cc), 0, 1, 1}, /* PyObject cname: __pyx_n_u_cc */
  {__pyx_k_ccomp, sizeof(__pyx_k_ccomp), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ccomp */
  {__pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 1, 1}, /* PyObject cname: __pyx_n_u_cline_in_traceback */
  {__pyx_k_complm, sizeof(__pyx_k_complm), 0, 1, 1}, /* PyObject cname: __pyx_n_u_complm */
  {__pyx_k_conj, sizeof(__pyx_k_conj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_conj */
  {__pyx_k_cop, sizeof(__pyx_k_cop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_cop */
  {__pyx_k_csubj, sizeof(__pyx_k_csubj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_csubj */
  {__pyx_k_csubjpass, sizeof(__pyx_k_csubjpass), 0, 1, 1}, /* PyObject cname: __pyx_n_u_csubjpass */
  {__pyx_k_dep, sizeof(__pyx_k_dep), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dep */
  {__pyx_k_det, sizeof(__pyx_k_det), 0, 1, 1}, /* PyObject cname: __pyx_n_u_det */
  {__pyx_k_dobj, sizeof(__pyx_k_dobj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dobj */
  {__pyx_k_expl, sizeof(__pyx_k_expl), 0, 1, 1}, /* PyObject cname: __pyx_n_u_expl */
  {__pyx_k_func, sizeof(__pyx_k_func), 0, 1, 1}, /* PyObject cname: __pyx_n_u_func */
  {__pyx_k_hmod, sizeof(__pyx_k_hmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_hmod */
  {__pyx_k_hyph, sizeof(__pyx_k_hyph), 0, 1, 1}, /* PyObject cname: __pyx_n_u_hyph */
  {__pyx_k_infmod, sizeof(__pyx_k_infmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_infmod */
  {__pyx_k_intj, sizeof(__pyx_k_intj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_intj */
  {__pyx_k_iobj, sizeof(__pyx_k_iobj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_iobj */
  {__pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_coroutine */
  {__pyx_k_it, sizeof(__pyx_k_it), 0, 1, 1}, /* PyObject cname: __pyx_n_u_it */
  {__pyx_k_items, sizeof(__pyx_k_items), 0, 1, 1}, /* PyObject cname: __pyx_n_u_items */
  {__pyx_k_key, sizeof(__pyx_k_key), 0, 1, 1}, /* PyObject cname: __pyx_n_u_key */
  {__pyx_k_main, sizeof(__pyx_k_main), 0, 1, 1}, /* PyObject cname: __pyx_n_u_main */
  {__pyx_k_mark, sizeof(__pyx_k_mark), 0, 1, 1}, /* PyObject cname: __pyx_n_u_mark */
  {__pyx_k_meta, sizeof(__pyx_k_meta), 0, 1, 1}, /* PyObject cname: __pyx_n_u_meta */
  {__pyx_k_module, sizeof(__pyx_k_module), 0, 1, 1}, /* PyObject cname: __pyx_n_u_module */
  {__pyx_k_name, sizeof(__pyx_k_name), 0, 1, 1}, /* PyObject cname: __pyx_n_u_name */
  {__pyx_k_neg, sizeof(__pyx_k_neg), 0, 1, 1}, /* PyObject cname: __pyx_n_u_neg */
  {__pyx_k_nmod, sizeof(__pyx_k_nmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_nmod */
  {__pyx_k_nn, sizeof(__pyx_k_nn), 0, 1, 1}, /* PyObject cname: __pyx_n_u_nn */
  {__pyx_k_npadvmod, sizeof(__pyx_k_npadvmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_npadvmod */
  {__pyx_k_nsubj, sizeof(__pyx_k_nsubj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_nsubj */
  {__pyx_k_nsubjpass, sizeof(__pyx_k_nsubjpass), 0, 1, 1}, /* PyObject cname: __pyx_n_u_nsubjpass */
  {__pyx_k_num, sizeof(__pyx_k_num), 0, 1, 1}, /* PyObject cname: __pyx_n_u_num */
  {__pyx_k_number, sizeof(__pyx_k_number), 0, 1, 1}, /* PyObject cname: __pyx_n_u_number */
  {__pyx_k_obj, sizeof(__pyx_k_obj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_obj */
  {__pyx_k_obl, sizeof(__pyx_k_obl), 0, 1, 1}, /* PyObject cname: __pyx_n_u_obl */
  {__pyx_k_oprd, sizeof(__pyx_k_oprd), 0, 1, 1}, /* PyObject cname: __pyx_n_u_oprd */
  {__pyx_k_parataxis, sizeof(__pyx_k_parataxis), 0, 1, 1}, /* PyObject cname: __pyx_n_u_parataxis */
  {__pyx_k_partmod, sizeof(__pyx_k_partmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_partmod */
  {__pyx_k_pcomp, sizeof(__pyx_k_pcomp), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pcomp */
  {__pyx_k_pobj, sizeof(__pyx_k_pobj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pobj */
  {__pyx_k_pop, sizeof(__pyx_k_pop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pop */
  {__pyx_k_poss, sizeof(__pyx_k_poss), 0, 1, 1}, /* PyObject cname: __pyx_n_u_poss */
  {__pyx_k_possessive, sizeof(__pyx_k_possessive), 0, 1, 1}, /* PyObject cname: __pyx_n_u_possessive */
  {__pyx_k_preconj, sizeof(__pyx_k_preconj), 0, 1, 1}, /* PyObject cname: __pyx_n_u_preconj */
  {__pyx_k_prep, sizeof(__pyx_k_prep), 0, 1, 1}, /* PyObject cname: __pyx_n_u_prep */
  {__pyx_k_prt, sizeof(__pyx_k_prt), 0, 1, 1}, /* PyObject cname: __pyx_n_u_prt */
  {__pyx_k_punct, sizeof(__pyx_k_punct), 0, 1, 1}, /* PyObject cname: __pyx_n_u_punct */
  {__pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 1, 1}, /* PyObject cname: __pyx_n_u_qualname */
  {__pyx_k_quantmod, sizeof(__pyx_k_quantmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_quantmod */
  {__pyx_k_rcmod, sizeof(__pyx_k_rcmod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rcmod */
  {__pyx_k_relcl, sizeof(__pyx_k_relcl), 0, 1, 1}, /* PyObject cname: __pyx_n_u_relcl */
  {__pyx_k_root, sizeof(__pyx_k_root), 0, 1, 1}, /* PyObject cname: __pyx_n_u_root */
  {__pyx_k_sort_nums, sizeof(__pyx_k_sort_nums), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sort_nums */
  {__pyx_k_sorted, sizeof(__pyx_k_sorted), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sorted */
  {__pyx_k_spacy_symbols, sizeof(__pyx_k_spacy_symbols), 0, 1, 1}, /* PyObject cname: __pyx_n_u_spacy_symbols */
  {__pyx_k_spacy_symbols_pyx, sizeof(__pyx_k_spacy_symbols_pyx), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_spacy_symbols_pyx */
  {__pyx_k_test, sizeof(__pyx_k_test), 0, 1, 1}, /* PyObject cname: __pyx_n_u_test */
  {__pyx_k_update, sizeof(__pyx_k_update), 0, 1, 1}, /* PyObject cname: __pyx_n_u_update */
  {__pyx_k_x, sizeof(__pyx_k_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_x */
  {__pyx_k_xcomp, sizeof(__pyx_k_xcomp), 0, 1, 1}, /* PyObject cname: __pyx_n_u_xcomp */
  {0, 0, 0, 0, 0}
};
/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names);

/* #### Code section: cached_builtins ### */

static int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __pyx_builtin_sorted = __Pyx_GetBuiltinName(__pyx_mstate->__pyx_n_u_sorted); if (!__pyx_builtin_sorted) __PYX_ERR(0, 477, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);
  __Pyx_RefNannyFinishContext();
  return 0;
}
/* #### Code section: init_constants ### */

static int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __pyx_mstate->__pyx_umethod_PyDict_Type_pop.type = (PyObject*)&PyDict_Type;
  __pyx_mstate->__pyx_umethod_PyDict_Type_pop.method_name = &__pyx_mstate->__pyx_n_u_pop;
  if (__Pyx_InitStrings(__pyx_string_tab, __pyx_mstate->__pyx_string_tab, __pyx_string_tab_encodings) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_codeobjects ### */
\
        typedef struct {
            unsigned int argcount : 1;
            unsigned int num_posonly_args : 1;
            unsigned int num_kwonly_args : 1;
            unsigned int nlocals : 1;
            unsigned int flags : 10;
            unsigned int first_line : 9;
            unsigned int line_table_length : 8;
        } __Pyx_PyCode_New_function_description;
/* NewCodeObj.proto */
static PyObject* __Pyx_PyCode_New(
        const __Pyx_PyCode_New_function_description descr,
        PyObject * const *varnames,
        PyObject *filename,
        PyObject *funcname,
        const char *line_table,
        PyObject *tuple_dedup_map
);


static int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate) {
  PyObject* tuple_dedup_map = PyDict_New();
  if (unlikely(!tuple_dedup_map)) return -1;
  {
    const __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 473, 11};
    PyObject* const varnames[] = {__pyx_mstate->__pyx_n_u_x};
    __pyx_mstate_global->__pyx_codeobj_tab[0] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_spacy_symbols_pyx, __pyx_mstate->__pyx_n_u_sort_nums, __pyx_k_1AQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[0])) goto bad;
  }
  Py_DECREF(tuple_dedup_map);
  return 0;
  bad:
  Py_DECREF(tuple_dedup_map);
  return -1;
}
/* #### Code section: init_globals ### */

static int __Pyx_InitGlobals(void) {
  /* PythonCompatibility.init */
  if (likely(__Pyx_init_co_variables() == 0)); else

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  /* CachedMethodType.init */
  #if CYTHON_COMPILING_IN_LIMITED_API
{
    PyObject *typesModule=NULL;
    typesModule = PyImport_ImportModule("types");
    if (typesModule) {
        __pyx_mstate_global->__Pyx_CachedMethodType = PyObject_GetAttrString(typesModule, "MethodType");
        Py_DECREF(typesModule);
    }
} // error handling follows
#endif

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d0000
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
            "name '%U' is not defined", name);
    }
    return result;
}

/* TupleAndListFromArray */
#if !CYTHON_COMPILING_IN_CPYTHON && CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    Py_ssize_t i;
    if (n <= 0) {
        return __Pyx_NewRef(__pyx_mstate_global->__pyx_empty_tuple);
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    for (i = 0; i < n; i++) {
        if (unlikely(__Pyx_PyTuple_SET_ITEM(res, i, src[i]) < 0)) {
            Py_DECREF(res);
            return NULL;
        }
        Py_INCREF(src[i]);
    }
    return res;
}
#elif CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return __Pyx_NewRef(__pyx_mstate_global->__pyx_empty_tuple);
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_GRAAL ||\
        !(CYTHON_ASSUME_SAFE_SIZE && CYTHON_ASSUME_SAFE_MACROS)
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_GRAAL
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length, length2;
        int kind;
        void *data1, *data2;
        #if !CYTHON_COMPILING_IN_LIMITED_API
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        #endif
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        #if !CYTHON_ASSUME_SAFE_SIZE
        if (unlikely(length < 0)) return -1;
        #endif
        length2 = __Pyx_PyUnicode_GET_LENGTH(s2);
        #if !CYTHON_ASSUME_SAFE_SIZE
        if (unlikely(length2 < 0)) return -1;
        #endif
        if (length != length2) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    return (equals == Py_EQ);
return_ne:
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = __Pyx_PyTuple_GET_SIZE(kwnames);
    #if !CYTHON_ASSUME_SAFE_SIZE
    if (unlikely(n == -1)) return NULL;
    #endif
    for (i = 0; i < n; i++)
    {
        PyObject *namei = __Pyx_PyTuple_GET_ITEM(kwnames, i);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(!namei)) return NULL;
        #endif
        if (s == namei) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        PyObject *namei = __Pyx_PyTuple_GET_ITEM(kwnames, i);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(!namei)) return NULL;
        #endif
        int eq = __Pyx_PyUnicode_Equals(s, namei, Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs;
    PyObject *dict;
#if !CYTHON_ASSUME_SAFE_SIZE
    nkwargs = PyTuple_Size(kwnames);
    if (unlikely(nkwargs < 0)) return NULL;
#else
    nkwargs = PyTuple_GET_SIZE(kwnames);
#endif
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
#if !CYTHON_ASSUME_SAFE_MACROS
        PyObject *key = PyTuple_GetItem(kwnames, i);
        if (!key) goto bad;
#else
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
#endif
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject *const *args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
    PyObject *kwdefs;
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    if (
            co->co_kwonlyargcount == 0 &&
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) != (0)) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
#if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API
  #if PY_VERSION_HEX < 0x03090000
    #define __Pyx_PyVectorcall_Function(callable) _PyVectorcall_Function(callable)
  #elif CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE vectorcallfunc __Pyx_PyVectorcall_Function(PyObject *callable) {
    PyTypeObject *tp = Py_TYPE(callable);
    #if defined(__Pyx_CyFunction_USED)
    if (__Pyx_CyFunction_CheckExact(callable)) {
        return __Pyx_CyFunction_func_vectorcall(callable);
    }
    #endif
    if (!PyType_HasFeature(tp, Py_TPFLAGS_HAVE_VECTORCALL)) {
        return NULL;
    }
    assert(PyCallable_Check(callable));
    Py_ssize_t offset = tp->tp_vectorcall_offset;
    assert(offset > 0);
    vectorcallfunc ptr;
    memcpy(&ptr, (char *) callable + offset, sizeof(ptr));
    return ptr;
}
  #else
    #define __Pyx_PyVectorcall_Function(callable) PyVectorcall_Function(callable)
  #endif
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject *const *args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API
        vectorcallfunc f = __Pyx_PyVectorcall_Function(func);
        if (f) {
            return f(func, args, _nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, _nargs, NULL);
        }
        #elif CYTHON_COMPILING_IN_LIMITED_API && CYTHON_VECTORCALL
        return PyObject_Vectorcall(func, args, _nargs, NULL);
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_mstate_global->__pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* UnpackUnboundCMethod */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030C0000
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
    PyObject *result;
    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
    if (unlikely(!selfless_args)) return NULL;
    result = PyObject_Call(method, selfless_args, kwargs);
    Py_DECREF(selfless_args);
    return result;
}
#elif CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03090000
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject **args, Py_ssize_t nargs, PyObject *kwnames) {
        return _PyObject_Vectorcall
            (method, args ? args+1 : NULL, nargs ? nargs-1 : 0, kwnames);
}
#else
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *const *args, Py_ssize_t nargs, PyObject *kwnames) {
    return
#if PY_VERSION_HEX < 0x03090000
    _PyObject_Vectorcall
#else
    PyObject_Vectorcall
#endif
        (method, args ? args+1 : NULL, nargs ? (size_t) nargs-1 : 0, kwnames);
}
#endif
static PyMethodDef __Pyx_UnboundCMethod_Def = {
     "CythonUnboundCMethod",
     __PYX_REINTERPRET_FUNCION(PyCFunction, __Pyx_SelflessCall),
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030C0000
     METH_VARARGS | METH_KEYWORDS,
#else
     METH_FASTCALL | METH_KEYWORDS,
#endif
     NULL
};
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method, *result=NULL;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    result = method;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    } else
#endif
#if CYTHON_COMPILING_IN_PYPY
#else
    if (PyCFunction_Check(method))
#endif
    {
        PyObject *self;
        int self_found;
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        self = PyObject_GetAttrString(method, "__self__");
        if (!self) {
            PyErr_Clear();
        }
#else
        self = PyCFunction_GET_SELF(method);
#endif
        self_found = (self && self != Py_None);
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        Py_XDECREF(self);
#endif
        if (self_found) {
            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);
            if (unlikely(!unbound_method)) return -1;
            Py_DECREF(method);
            result = unbound_method;
        }
    }
#if !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    if (unlikely(target->method)) {
        Py_DECREF(result);
    } else
#endif
    target->method = result;
    return 0;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    int was_initialized = __Pyx_CachedCFunction_GetAndSetInitializing(cfunc);
    if (likely(was_initialized == 2 && cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            return __Pyx_CallCFunctionFast(cfunc, self, args, 2);
        }
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return __Pyx_CallCFunctionFastWithKeywords(cfunc, self, args, 2, NULL);
    }
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    else if (unlikely(was_initialized == 1)) {
        __Pyx_CachedCFunction tmp_cfunc = {
#ifndef __cplusplus
            0
#endif
        };
        tmp_cfunc.type = cfunc->type;
        tmp_cfunc.method_name = cfunc->method_name;
        return __Pyx__CallUnboundCMethod2(&tmp_cfunc, self, arg1, arg2);
    }
#endif
    PyObject *result = __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
    __Pyx_CachedCFunction_SetFinishedInitializing(cfunc);
    return result;
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        PyObject *result = NULL;
        PyObject *args = PyTuple_New(2);
        if (unlikely(!args)) return NULL;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = __Pyx_CallCFunctionWithKeywords(cfunc, self, args, NULL);
        else
            result = __Pyx_CallCFunction(cfunc, self, args);
        Py_DECREF(args);
        return result;
    }
#endif
    {
        PyObject *args[4] = {NULL, self, arg1, arg2};
        return __Pyx_PyObject_FastCall(cfunc->method, args+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
    }
}

/* ParseKeywords */
static int __Pyx_ValidateDuplicatePosArgs(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    const char* function_name)
{
    PyObject ** const *name = argnames;
    while (name != first_kw_arg) {
        PyObject *key = **name;
        int found = PyDict_Contains(kwds, key);
        if (unlikely(found)) {
            if (found == 1) __Pyx_RaiseDoubleKeywordsError(function_name, key);
            goto bad;
        }
        name++;
    }
    return 0;
bad:
    return -1;
}
#if CYTHON_USE_UNICODE_INTERNALS
static CYTHON_INLINE int __Pyx_UnicodeKeywordsEqual(PyObject *s1, PyObject *s2) {
    int kind;
    Py_ssize_t len = PyUnicode_GET_LENGTH(s1);
    if (len != PyUnicode_GET_LENGTH(s2)) return 0;
    kind = PyUnicode_KIND(s1);
    if (kind != PyUnicode_KIND(s2)) return 0;
    const void *data1 = PyUnicode_DATA(s1);
    const void *data2 = PyUnicode_DATA(s2);
    return (memcmp(data1, data2, (size_t) len * (size_t) kind) == 0);
}
#endif
static int __Pyx_MatchKeywordArg_str(
    PyObject *key,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    size_t *index_found,
    const char *function_name)
{
    PyObject ** const *name;
    #if CYTHON_USE_UNICODE_INTERNALS
    Py_hash_t key_hash = ((PyASCIIObject*)key)->hash;
    if (unlikely(key_hash == -1)) {
        key_hash = PyObject_Hash(key);
        if (unlikely(key_hash == -1))
            goto bad;
    }
    #endif
    name = first_kw_arg;
    while (*name) {
        PyObject *name_str = **name;
        #if CYTHON_USE_UNICODE_INTERNALS
        if (key_hash == ((PyASCIIObject*)name_str)->hash && __Pyx_UnicodeKeywordsEqual(name_str, key)) {
            *index_found = (size_t) (name - argnames);
            return 1;
        }
        #else
        #if CYTHON_ASSUME_SAFE_SIZE
        if (PyUnicode_GET_LENGTH(name_str) == PyUnicode_GET_LENGTH(key))
        #endif
        {
            int cmp = PyUnicode_Compare(name_str, key);
            if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
            if (cmp == 0) {
                *index_found = (size_t) (name - argnames);
                return 1;
            }
        }
        #endif
        name++;
    }
    name = argnames;
    while (name != first_kw_arg) {
        PyObject *name_str = **name;
        #if CYTHON_USE_UNICODE_INTERNALS
        if (unlikely(key_hash == ((PyASCIIObject*)name_str)->hash)) {
            if (__Pyx_UnicodeKeywordsEqual(name_str, key))
                goto arg_passed_twice;
        }
        #else
        #if CYTHON_ASSUME_SAFE_SIZE
        if (PyUnicode_GET_LENGTH(name_str) == PyUnicode_GET_LENGTH(key))
        #endif
        {
            if (unlikely(name_str == key)) goto arg_passed_twice;
            int cmp = PyUnicode_Compare(name_str, key);
            if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
            if (cmp == 0) goto arg_passed_twice;
        }
        #endif
        name++;
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
bad:
    return -1;
}
static int __Pyx_MatchKeywordArg_nostr(
    PyObject *key,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    size_t *index_found,
    const char *function_name)
{
    PyObject ** const *name;
    if (unlikely(!PyUnicode_Check(key))) goto invalid_keyword_type;
    name = first_kw_arg;
    while (*name) {
        int cmp = PyObject_RichCompareBool(**name, key, Py_EQ);
        if (cmp == 1) {
            *index_found = (size_t) (name - argnames);
            return 1;
        }
        if (unlikely(cmp == -1)) goto bad;
        name++;
    }
    name = argnames;
    while (name != first_kw_arg) {
        int cmp = PyObject_RichCompareBool(**name, key, Py_EQ);
        if (unlikely(cmp != 0)) {
            if (cmp == 1) goto arg_passed_twice;
            else goto bad;
        }
        name++;
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
bad:
    return -1;
}
static CYTHON_INLINE int __Pyx_MatchKeywordArg(
    PyObject *key,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    size_t *index_found,
    const char *function_name)
{
    return likely(PyUnicode_CheckExact(key)) ?
        __Pyx_MatchKeywordArg_str(key, argnames, first_kw_arg, index_found, function_name) :
        __Pyx_MatchKeywordArg_nostr(key, argnames, first_kw_arg, index_found, function_name);
}
static void __Pyx_RejectUnknownKeyword(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    const char *function_name)
{
    Py_ssize_t pos = 0;
    PyObject *key = NULL;
    __Pyx_BEGIN_CRITICAL_SECTION(kwds);
    while (PyDict_Next(kwds, &pos, &key, NULL)) {
        PyObject** const *name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (!*name) {
            #if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
            #endif
            size_t index_found = 0;
            int cmp = __Pyx_MatchKeywordArg(key, argnames, first_kw_arg, &index_found, function_name);
            if (cmp != 1) {
                if (cmp == 0) {
                    PyErr_Format(PyExc_TypeError,
                        "%s() got an unexpected keyword argument '%U'",
                        function_name, key);
                }
                #if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(key);
                #endif
                break;
            }
            #if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(key);
            #endif
        }
    }
    __Pyx_END_CRITICAL_SECTION();
    assert(PyErr_Occurred());
}
static int __Pyx_ParseKeywordDict(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject *values[],
    Py_ssize_t num_pos_args,
    Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs)
{
    PyObject** const *name;
    PyObject** const *first_kw_arg = argnames + num_pos_args;
    Py_ssize_t extracted = 0;
#if !CYTHON_COMPILING_IN_PYPY || defined(PyArg_ValidateKeywordArguments)
    if (unlikely(!PyArg_ValidateKeywordArguments(kwds))) return -1;
#endif
    name = first_kw_arg;
    while (*name && num_kwargs > extracted) {
        PyObject * key = **name;
        PyObject *value;
        int found = 0;
        #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
        found = PyDict_GetItemRef(kwds, key, &value);
        #else
        value = PyDict_GetItemWithError(kwds, key);
        if (value) {
            Py_INCREF(value);
            found = 1;
        } else {
            if (unlikely(PyErr_Occurred())) goto bad;
        }
        #endif
        if (found) {
            if (unlikely(found < 0)) goto bad;
            values[name-argnames] = value;
            extracted++;
        }
        name++;
    }
    if (num_kwargs > extracted) {
        if (ignore_unknown_kwargs) {
            if (unlikely(__Pyx_ValidateDuplicatePosArgs(kwds, argnames, first_kw_arg, function_name) == -1))
                goto bad;
        } else {
            __Pyx_RejectUnknownKeyword(kwds, argnames, first_kw_arg, function_name);
            goto bad;
        }
    }
    return 0;
bad:
    return -1;
}
static int __Pyx_ParseKeywordDictToDict(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject** const *name;
    PyObject** const *first_kw_arg = argnames + num_pos_args;
    Py_ssize_t len;
#if !CYTHON_COMPILING_IN_PYPY || defined(PyArg_ValidateKeywordArguments)
    if (unlikely(!PyArg_ValidateKeywordArguments(kwds))) return -1;
#endif
    if (PyDict_Update(kwds2, kwds) < 0) goto bad;
    name = first_kw_arg;
    while (*name) {
        PyObject *key = **name;
        PyObject *value;
#if !CYTHON_COMPILING_IN_LIMITED_API && (PY_VERSION_HEX >= 0x030d00A2 || defined(PyDict_Pop))
        int found = PyDict_Pop(kwds2, key, &value);
        if (found) {
            if (unlikely(found < 0)) goto bad;
            values[name-argnames] = value;
        }
#elif __PYX_LIMITED_VERSION_HEX >= 0x030d0000
        int found = PyDict_GetItemRef(kwds2, key, &value);
        if (found) {
            if (unlikely(found < 0)) goto bad;
            values[name-argnames] = value;
            if (unlikely(PyDict_DelItem(kwds2, key) < 0)) goto bad;
        }
#else
    #if CYTHON_COMPILING_IN_CPYTHON
        value = _PyDict_Pop(kwds2, key, kwds2);
    #else
        value = __Pyx_CallUnboundCMethod2(&__pyx_mstate_global->__pyx_umethod_PyDict_Type_pop, kwds2, key, kwds2);
    #endif
        if (value == kwds2) {
            Py_DECREF(value);
        } else {
            if (unlikely(!value)) goto bad;
            values[name-argnames] = value;
        }
#endif
        name++;
    }
    len = PyDict_Size(kwds2);
    if (len > 0) {
        return __Pyx_ValidateDuplicatePosArgs(kwds, argnames, first_kw_arg, function_name);
    } else if (unlikely(len == -1)) {
        goto bad;
    }
    return 0;
bad:
    return -1;
}
static int __Pyx_ParseKeywordsTuple(
    PyObject *kwds,
    PyObject * const *kwvalues,
    PyObject ** const argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs)
{
    PyObject *key = NULL;
    PyObject** const * name;
    PyObject** const *first_kw_arg = argnames + num_pos_args;
    for (Py_ssize_t pos = 0; pos < num_kwargs; pos++) {
#if CYTHON_AVOID_BORROWED_REFS
        key = __Pyx_PySequence_ITEM(kwds, pos);
#else
        key = __Pyx_PyTuple_GET_ITEM(kwds, pos);
#endif
#if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(!key)) goto bad;
#endif
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            PyObject *value = kwvalues[pos];
            values[name-argnames] = __Pyx_NewRef(value);
        } else {
            size_t index_found = 0;
            int cmp = __Pyx_MatchKeywordArg(key, argnames, first_kw_arg, &index_found, function_name);
            if (cmp == 1) {
                PyObject *value = kwvalues[pos];
                values[index_found] = __Pyx_NewRef(value);
            } else {
                if (unlikely(cmp == -1)) goto bad;
                if (kwds2) {
                    PyObject *value = kwvalues[pos];
                    if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                } else if (!ignore_unknown_kwargs) {
                    goto invalid_keyword;
                }
            }
        }
        #if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(key);
        key = NULL;
        #endif
    }
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    goto bad;
bad:
    #if CYTHON_AVOID_BORROWED_REFS
    Py_XDECREF(key);
    #endif
    return -1;
}
static int __Pyx_ParseKeywords(
    PyObject *kwds,
    PyObject * const *kwvalues,
    PyObject ** const argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs)
{
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds)))
        return __Pyx_ParseKeywordsTuple(kwds, kwvalues, argnames, kwds2, values, num_pos_args, num_kwargs, function_name, ignore_unknown_kwargs);
    else if (kwds2)
        return __Pyx_ParseKeywordDictToDict(kwds, argnames, kwds2, values, num_pos_args, function_name);
    else
        return __Pyx_ParseKeywordDict(kwds, argnames, values, num_pos_args, num_kwargs, function_name, ignore_unknown_kwargs);
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE && !CYTHON_AVOID_BORROWED_REFS && !CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyLong_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyLong_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            return __Pyx_PyList_GetItemRef(o, n);
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyLong_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyLong_FromSsize_t(i));
}

/* FixUpExtensionType */
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef(__PYX_ABI_MODULE_NAME);
}

/* dict_setdefault */
static CYTHON_INLINE PyObject *__Pyx_PyDict_SetDefault(PyObject *d, PyObject *key, PyObject *default_value,
                                                       int is_safe_type) {
    PyObject* value;
    CYTHON_MAYBE_UNUSED_VAR(is_safe_type);
#if CYTHON_COMPILING_IN_LIMITED_API
    value = PyObject_CallMethod(d, "setdefault", "OO", key, default_value);
#elif PY_VERSION_HEX >= 0x030d0000
    PyDict_SetDefaultRef(d, key, default_value, &value);
#else
    value = PyDict_SetDefault(d, key, default_value);
    if (unlikely(!value)) return NULL;
    Py_INCREF(value);
#endif
    return value;
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t expected_basicsize) {
    Py_ssize_t basicsize;
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
    if (unlikely(!py_basicsize)) return -1;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = NULL;
    if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) return -1;
#else
    basicsize = ((PyTypeObject*) cached_type)->tp_basicsize;
#endif
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module = NULL, *cached_type = NULL, *abi_module_dict, *new_cached_type, *py_object_name;
    int get_item_ref_result;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    py_object_name = PyUnicode_FromString(object_name);
    if (!py_object_name) return NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) goto done;
    abi_module_dict = PyModule_GetDict(abi_module);
    if (!abi_module_dict) goto done;
    get_item_ref_result = __Pyx_PyDict_GetItemRef(abi_module_dict, py_object_name, &cached_type);
    if (get_item_ref_result == 1) {
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    } else if (unlikely(get_item_ref_result == -1)) {
        goto bad;
    }
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    new_cached_type = __Pyx_PyDict_SetDefault(abi_module_dict, py_object_name, cached_type, 1);
    if (unlikely(new_cached_type != cached_type)) {
        if (unlikely(!new_cached_type)) goto bad;
        Py_DECREF(cached_type);
        cached_type = new_cached_type;
        if (__Pyx_VerifyCachedType(
                cached_type,
                object_name,
                spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    } else {
        Py_DECREF(new_cached_type);
    }
done:
    Py_XDECREF(abi_module);
    Py_DECREF(py_object_name);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CallTypeTraverse */
#if !CYTHON_USE_TYPE_SPECS || (!CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x03090000)
#else
static int __Pyx_call_type_traverse(PyObject *o, int always_call, visitproc visit, void *arg) {
    #if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x03090000
    if (__Pyx_get_runtime_version() < 0x03090000) return 0;
    #endif
    if (!always_call) {
        PyTypeObject *base = __Pyx_PyObject_GetSlot(o, tp_base, PyTypeObject*);
        unsigned long flags = PyType_GetFlags(base);
        if (flags & Py_TPFLAGS_HEAPTYPE) {
            return 0;
        }
    }
    Py_VISIT((PyObject*)Py_TYPE(o));
    return 0;
}
#endif

/* PyMethodNew */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *result;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    #if __PYX_LIMITED_VERSION_HEX >= 0x030C0000
    {
        PyObject *args[] = {func, self};
        result = PyObject_Vectorcall(__pyx_mstate_global->__Pyx_CachedMethodType, args, 2, NULL);
    }
    #else
    result = PyObject_CallFunctionObjArgs(__pyx_mstate_global->__Pyx_CachedMethodType, func, self, NULL);
    #endif
    return result;
}
#else
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    #if !CYTHON_ASSUME_SAFE_SIZE
    Py_ssize_t nkw = PyDict_Size(kw);
    if (unlikely(nkw == -1)) return NULL;
    #else
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    #endif
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &=
        #if CYTHON_COMPILING_IN_LIMITED_API
            PyType_GetFlags(Py_TYPE(key));
        #else
            Py_TYPE(key)->tp_flags;
        #endif
        Py_INCREF(key);
        Py_INCREF(value);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(PyTuple_SetItem(kwnames, i, key) < 0)) goto cleanup;
        #else
        PyTuple_SET_ITEM(kwnames, i, key);
        #endif
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    Py_ssize_t kw_size =
        likely(kw == NULL) ?
        0 :
#if !CYTHON_ASSUME_SAFE_SIZE
        PyDict_Size(kw);
#else
        PyDict_GET_SIZE(kw);
#endif
    if (kw_size == 0) {
        return vc(func, args, nargs, NULL);
    }
#if !CYTHON_ASSUME_SAFE_SIZE
    else if (unlikely(kw_size == -1)) {
        return NULL;
    }
#endif
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunctionNoMethod(PyObject *func, void (*cfunc)(void)) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void (*cfunc)(void)) {
    if ((PyObject*)Py_TYPE(func) == __pyx_mstate_global->__Pyx_CachedMethodType) {
        int result;
        PyObject *newFunc = PyObject_GetAttr(func, __pyx_mstate_global->__pyx_n_u_func);
        if (unlikely(!newFunc)) {
            PyErr_Clear(); // It's only an optimization, so don't throw an error
            return 0;
        }
        result = __Pyx__IsSameCyOrCFunctionNoMethod(newFunc, cfunc);
        Py_DECREF(newFunc);
        return result;
    }
    return __Pyx__IsSameCyOrCFunctionNoMethod(func, cfunc);
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void (*cfunc)(void)) {
    if (PyMethod_Check(func)) {
        func = PyMethod_GET_FUNCTION(func);
    }
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc_locked(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure) {
    PyObject *result;
    CYTHON_UNUSED_VAR(closure);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_doc_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name_locked(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#else
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    PyObject *result = NULL;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_name_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    PyObject *result;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    Py_INCREF(op->func_qualname);
    result = op->func_qualname;
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict_locked(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    PyObject *result;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_dict_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults_locked(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = NULL;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_defaults_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults_locked(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_kwdefaults_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations_locked(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject *result;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_annotations_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine_value(__pyx_CyFunctionObject *op) {
    int is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
    if (is_coroutine) {
        PyObject *is_coroutine_value, *module, *fromlist, *marker = __pyx_mstate_global->__pyx_n_u_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_mstate_global->__pyx_n_u_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(is_coroutine_value)) {
            return is_coroutine_value;
        }
ignore:
        PyErr_Clear();
    }
    return __Pyx_PyBool_FromLong(is_coroutine);
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    PyObject *result;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    result = __Pyx_CyFunction_get_is_coroutine_value(op);
    if (unlikely(!result))
        return NULL;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    if (op->func_is_coroutine) {
        Py_DECREF(result);
        result = __Pyx_NewRef(op->func_is_coroutine);
    } else {
        op->func_is_coroutine = __Pyx_NewRef(result);
    }
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static void __Pyx_CyFunction_raise_argument_count_error(__pyx_CyFunctionObject *func, const char* message, Py_ssize_t size) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_name = __Pyx_CyFunction_get_name(func, NULL);
    if (!py_name) return;
    PyErr_Format(PyExc_TypeError,
        "%.200S() %s (%" CYTHON_FORMAT_SSIZE_T "d given)",
        py_name, message, size);
    Py_DECREF(py_name);
#else
    const char* name = ((PyCFunctionObject*)func)->m_ml->ml_name;
    PyErr_Format(PyExc_TypeError,
        "%.200s() %s (%" CYTHON_FORMAT_SSIZE_T "d given)",
        name, message, size);
#endif
}
static void __Pyx_CyFunction_raise_type_error(__pyx_CyFunctionObject *func, const char* message) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_name = __Pyx_CyFunction_get_name(func, NULL);
    if (!py_name) return;
    PyErr_Format(PyExc_TypeError,
        "%.200S() %s",
        py_name, message);
    Py_DECREF(py_name);
#else
    const char* name = ((PyCFunctionObject*)func)->m_ml->ml_name;
    PyErr_Format(PyExc_TypeError,
        "%.200s() %s",
        name, message);
#endif
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {"func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {"__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {"func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {"__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {"__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {"func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {"__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {"func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {"__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {"func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {"__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {"func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {"__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {"func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {"__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {"__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {"__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {"_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
    {"__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL || CYTHON_COMPILING_IN_LIMITED_API
    {"__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
    {"__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {"__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    PyObject *result = NULL;
    CYTHON_UNUSED_VAR(args);
    __Pyx_BEGIN_CRITICAL_SECTION(m);
    Py_INCREF(m->func_qualname);
    result = m->func_qualname;
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    Py_CLEAR(m->defaults);
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    {
        int e = __Pyx_call_type_traverse((PyObject*)m, 1, visit, arg);
        if (e) return e;
    }
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    __Pyx_VISIT_CONST(m->func_name);
    __Pyx_VISIT_CONST(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    __Pyx_VISIT_CONST(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    Py_VISIT(m->defaults);
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
    PyObject *repr;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    repr = PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
    __Pyx_END_CRITICAL_SECTION();
    return repr;
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void(*)(void))meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_SIZE
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
            __Pyx_CyFunction_raise_argument_count_error(
                (__pyx_CyFunctionObject*)func,
                "takes no arguments", size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_SIZE
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            __Pyx_CyFunction_raise_argument_count_error(
                (__pyx_CyFunctionObject*)func,
                "takes exactly one argument", size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
    __Pyx_CyFunction_raise_type_error(
        (__pyx_CyFunctionObject*)func, "takes no keyword arguments");
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_SIZE
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(argc < 0)) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            __Pyx_CyFunction_raise_type_error(
                cyfunc, "needs an argument");
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(__Pyx_PyTuple_GET_SIZE(kwnames))) {
        __Pyx_CyFunction_raise_type_error(
            cyfunc, "takes no keyword arguments");
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        __Pyx_CyFunction_raise_argument_count_error(
            cyfunc, "takes no arguments", nargs);
        return NULL;
    }
    return meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        __Pyx_CyFunction_raise_argument_count_error(
            cyfunc, "takes exactly one argument", nargs);
        return NULL;
    }
    return meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if CYTHON_METH_FASTCALL
#if defined(Py_TPFLAGS_HAVE_VECTORCALL)
    Py_TPFLAGS_HAVE_VECTORCALL |
#elif defined(_Py_TPFLAGS_HAVE_VECTORCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
#endif // CYTHON_METH_FASTCALL
#if PY_VERSION_HEX >= 0x030A0000
    Py_TPFLAGS_IMMUTABLETYPE |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
static int __pyx_CyFunction_init(PyObject *module) {
    __pyx_mstatetype *mstate = __Pyx_PyModule_GetState(module);
    mstate->__pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
    if (unlikely(mstate->__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_InitDefaults(PyObject *func, PyTypeObject *defaults_type) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_CallObject((PyObject*)defaults_type, NULL); // _PyObject_New(defaults_type);
    if (unlikely(!m->defaults))
        return NULL;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_mstate_global->__pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        if (!PyErr_Occurred())
            PyErr_SetNone(PyExc_NameError);
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
    PyErr_Clear();
#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    if (unlikely(__Pyx_PyDict_GetItemRef(__pyx_mstate_global->__pyx_d, name, &result) == -1)) PyErr_Clear();
    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return result;
    }
#else
    result = _PyDict_GetItem_KnownHash(__pyx_mstate_global->__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectVectorCallKwBuilder */
#if CYTHON_VECTORCALL
static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    (void)__Pyx_PyObject_FastCallDict;
    if (__Pyx_PyTuple_SET_ITEM(builder, n, key) != (0)) return -1;
    Py_INCREF(key);
    args[n] = value;
    return 0;
}
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    (void)__Pyx_VectorcallBuilder_AddArgStr;
    if (unlikely(!PyUnicode_Check(key))) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        return -1;
    }
    return __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n);
}
static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    PyObject *pyKey = PyUnicode_FromString(key);
    if (!pyKey) return -1;
    return __Pyx_VectorcallBuilder_AddArg(pyKey, value, builder, args, n);
}
#else // CYTHON_VECTORCALL
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, CYTHON_UNUSED PyObject **args, CYTHON_UNUSED int n) {
    if (unlikely(!PyUnicode_Check(key))) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        return -1;
    }
    return PyDict_SetItem(builder, key, value);
}
#endif

/* PyObjectFastCallMethod */
#if !CYTHON_VECTORCALL || PY_VERSION_HEX < 0x03090000
static PyObject *__Pyx_PyObject_FastCallMethod(PyObject *name, PyObject *const *args, size_t nargsf) {
    PyObject *result;
    PyObject *attr = PyObject_GetAttr(args[0], name);
    if (unlikely(!attr))
        return NULL;
    result = __Pyx_PyObject_FastCall(attr, args+1, nargsf - 1);
    Py_DECREF(attr);
    return result;
}
#endif

/* CLineInTraceback */
#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_mstate_global->__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_mstate_global->__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __Pyx_BEGIN_CRITICAL_SECTION(*cython_runtime_dict);
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_mstate_global->__pyx_n_u_cline_in_traceback))
        Py_XINCREF(use_cline);
        __Pyx_END_CRITICAL_SECTION();
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_INCREF(use_cline);
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    Py_XDECREF(use_cline);
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static __Pyx_CachedCodeObjectType *__pyx__find_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line) {
    __Pyx_CachedCodeObjectType* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!code_cache->entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);
    if (unlikely(pos >= code_cache->count) || unlikely(code_cache->entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = code_cache->entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line) {
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS
    (void)__pyx__find_code_object;
    return NULL; // Most implementation should have atomics. But otherwise, don't make it thread-safe, just miss.
#else
    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_nonatomic_int_type old_count = __pyx_atomic_incr_acq_rel(&code_cache->accessor_count);
    if (old_count < 0) {
        __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);
        return NULL;
    }
#endif
    __Pyx_CachedCodeObjectType *result = __pyx__find_code_object(code_cache, code_line);
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);
#endif
    return result;
#endif
}
static void __pyx__insert_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line, __Pyx_CachedCodeObjectType* code_object)
{
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = code_cache->entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            code_cache->entries = entries;
            code_cache->max_count = 64;
            code_cache->count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);
    if ((pos < code_cache->count) && unlikely(code_cache->entries[pos].code_line == code_line)) {
        __Pyx_CachedCodeObjectType* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_INCREF(code_object);
        Py_DECREF(tmp);
        return;
    }
    if (code_cache->count == code_cache->max_count) {
        int new_max = code_cache->max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            code_cache->entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        code_cache->entries = entries;
        code_cache->max_count = new_max;
    }
    for (i=code_cache->count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    code_cache->count++;
    Py_INCREF(code_object);
}
static void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object) {
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS
    (void)__pyx__insert_code_object;
    return; // Most implementation should have atomics. But otherwise, don't make it thread-safe, just fail.
#else
    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_nonatomic_int_type expected = 0;
    if (!__pyx_atomic_int_cmp_exchange(&code_cache->accessor_count, &expected, INT_MIN)) {
        return;
    }
#endif
    __pyx__insert_code_object(code_cache, code_line, code_object);
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_sub(&code_cache->accessor_count, INT_MIN);
#endif
#endif
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API && !defined(PYPY_VERSION)
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result = PyObject_Call(replace, __pyx_mstate_global->__pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!code_object) {
        code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
        if (unlikely(!code_object)) goto bad;
        py_py_line = PyLong_FromLong(py_line);
        if (unlikely(!py_py_line)) goto bad;
        py_funcname = PyUnicode_FromString(funcname);
        if (unlikely(!py_funcname)) goto bad;
        dict = PyDict_New();
        if (unlikely(!dict)) goto bad;
        {
            PyObject *old_code_object = code_object;
            code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
            Py_DECREF(old_code_object);
        }
        if (unlikely(!code_object)) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, code_object);
    } else {
        dict = PyDict_New();
    }
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    if (c_line) {
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
    }
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_mstate_global->__pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum____pyx_t_5spacy_7symbols_symbol_t(enum __pyx_t_5spacy_7symbols_symbol_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum __pyx_t_5spacy_7symbols_symbol_t neg_one = (enum __pyx_t_5spacy_7symbols_symbol_t) -1, const_zero = (enum __pyx_t_5spacy_7symbols_symbol_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum __pyx_t_5spacy_7symbols_symbol_t) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_7symbols_symbol_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#if defined(HAVE_LONG_LONG) && !CYTHON_COMPILING_IN_PYPY
        } else if (sizeof(enum __pyx_t_5spacy_7symbols_symbol_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum __pyx_t_5spacy_7symbols_symbol_t) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum __pyx_t_5spacy_7symbols_symbol_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(enum __pyx_t_5spacy_7symbols_symbol_t),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(enum __pyx_t_5spacy_7symbols_symbol_t));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#if defined(HAVE_LONG_LONG) && !CYTHON_COMPILING_IN_PYPY
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
    if (likely(PyUnicode_Check(n)))
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* Globals */
static PyObject* __Pyx_Globals(void) {
    return __Pyx_NewRef(__pyx_mstate_global->__pyx_d);
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030d0000
static __Pyx_TypeName
__Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp)
{
    PyObject *module = NULL, *name = NULL, *result = NULL;
    #if __PYX_LIMITED_VERSION_HEX < 0x030b0000
    name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_mstate_global->__pyx_n_u_qualname);
    #else
    name = PyType_GetQualName(tp);
    #endif
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) goto bad;
    module = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_mstate_global->__pyx_n_u_module);
    if (unlikely(module == NULL) || unlikely(!PyUnicode_Check(module))) goto bad;
    if (PyUnicode_CompareWithASCIIString(module, "builtins") == 0) {
        result = name;
        name = NULL;
        goto done;
    }
    result = PyUnicode_FromFormat("%U.%U", module, name);
    if (unlikely(result == NULL)) goto bad;
  done:
    Py_XDECREF(name);
    Py_XDECREF(module);
    return result;
  bad:
    PyErr_Clear();
    if (name) {
        result = name;
        name = NULL;
    } else {
        result = __Pyx_NewRef(__pyx_mstate_global->__pyx_kp_u__3);
    }
    goto done;
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyLong_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (long) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(long) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(long) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        long val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (long) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (long) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (long) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (long) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((long) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((long) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (long) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyLong_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (int) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(int) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(int) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        int val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (int) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (int) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (int) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (int) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((int) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((int) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (int) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* GetRuntimeVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030b0000
    return Py_Version & ~0xFFUL;
#else
    static unsigned long __Pyx_cached_runtime_version = 0;
    if (__Pyx_cached_runtime_version == 0) {
        const char* rt_version = Py_GetVersion();
        unsigned long version = 0;
        unsigned long factor = 0x01000000UL;
        unsigned int digit = 0;
        int i = 0;
        while (factor) {
            while ('0' <= rt_version[i] && rt_version[i] <= '9') {
                digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
                ++i;
            }
            version += factor * digit;
            if (rt_version[i] != '.')
                break;
            digit = 0;
            factor >>= 8;
            ++i;
        }
        __Pyx_cached_runtime_version = version;
    }
    return __Pyx_cached_runtime_version;
#endif
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* NewCodeObj */
#if CYTHON_COMPILING_IN_LIMITED_API
    static PyObject* __Pyx__PyCode_New(int a, int p, int k, int l, int s, int f,
                                       PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                       PyObject *fv, PyObject *cell, PyObject* fn,
                                       PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030b0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030b0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOOOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
#elif PY_VERSION_HEX >= 0x030B0000
  static PyCodeObject* __Pyx__PyCode_New(int a, int p, int k, int l, int s, int f,
                                         PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                         PyObject *fv, PyObject *cell, PyObject* fn,
                                         PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, __pyx_mstate_global->__pyx_empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx__PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx__PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
static PyObject* __Pyx_PyCode_New(
        const __Pyx_PyCode_New_function_description descr,
        PyObject * const *varnames,
        PyObject *filename,
        PyObject *funcname,
        const char *line_table,
        PyObject *tuple_dedup_map
) {
    PyObject *code_obj = NULL, *varnames_tuple_dedup = NULL, *code_bytes = NULL, *line_table_bytes = NULL;
    Py_ssize_t var_count = (Py_ssize_t) descr.nlocals;
    PyObject *varnames_tuple = PyTuple_New(var_count);
    if (unlikely(!varnames_tuple)) return NULL;
    for (Py_ssize_t i=0; i < var_count; i++) {
        Py_INCREF(varnames[i]);
        if (__Pyx_PyTuple_SET_ITEM(varnames_tuple, i, varnames[i]) != (0)) goto done;
    }
    #if CYTHON_COMPILING_IN_LIMITED_API
    varnames_tuple_dedup = PyDict_GetItem(tuple_dedup_map, varnames_tuple);
    if (!varnames_tuple_dedup) {
        if (unlikely(PyDict_SetItem(tuple_dedup_map, varnames_tuple, varnames_tuple) < 0)) goto done;
        varnames_tuple_dedup = varnames_tuple;
    }
    #else
    varnames_tuple_dedup = PyDict_SetDefault(tuple_dedup_map, varnames_tuple, varnames_tuple);
    if (unlikely(!varnames_tuple_dedup)) goto done;
    #endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(varnames_tuple_dedup);
    #endif
    if (__PYX_LIMITED_VERSION_HEX >= (0x030b0000) && line_table != NULL
        && !CYTHON_COMPILING_IN_GRAAL) {
        line_table_bytes = PyBytes_FromStringAndSize(line_table, descr.line_table_length);
        if (unlikely(!line_table_bytes)) goto done;
        Py_ssize_t code_len = (descr.line_table_length * 2 + 4) & ~3;
        code_bytes = PyBytes_FromStringAndSize(NULL, code_len);
        if (unlikely(!code_bytes)) goto done;
        char* c_code_bytes = PyBytes_AsString(code_bytes);
        if (unlikely(!c_code_bytes)) goto done;
        memset(c_code_bytes, 0, (size_t) code_len);
    }
    code_obj = (PyObject*) __Pyx__PyCode_New(
        (int) descr.argcount,
        (int) descr.num_posonly_args,
        (int) descr.num_kwonly_args,
        (int) descr.nlocals,
        0,
        (int) descr.flags,
        code_bytes ? code_bytes : __pyx_mstate_global->__pyx_empty_bytes,
        __pyx_mstate_global->__pyx_empty_tuple,
        __pyx_mstate_global->__pyx_empty_tuple,
        varnames_tuple_dedup,
        __pyx_mstate_global->__pyx_empty_tuple,
        __pyx_mstate_global->__pyx_empty_tuple,
        filename,
        funcname,
        (int) descr.first_line,
        (__PYX_LIMITED_VERSION_HEX >= (0x030b0000) && line_table_bytes) ? line_table_bytes : __pyx_mstate_global->__pyx_empty_bytes
    );
done:
    Py_XDECREF(code_bytes);
    Py_XDECREF(line_table_bytes);
    #if CYTHON_AVOID_BORROWED_REFS
    Py_XDECREF(varnames_tuple_dedup);
    #endif
    Py_DECREF(varnames_tuple);
    return code_obj;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names) {
    while (t->s) {
        PyObject *str;
        if (t->is_unicode) {
            if (t->intern) {
                str = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                str = PyUnicode_Decode(t->s, t->n - 1, encoding_names[t->encoding], NULL);
            } else {
                str = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            str = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        if (!str)
            return -1;
        *target = str;
        if (PyObject_Hash(str) == -1)
            return -1;
        ++t;
        ++target;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    {
        const char* result;
        Py_ssize_t unicode_length;
        CYTHON_MAYBE_UNUSED_VAR(unicode_length); // only for __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        #if __PYX_LIMITED_VERSION_HEX < 0x030A0000
        if (unlikely(PyArg_Parse(o, "s#", &result, length) < 0)) return NULL;
        #else
        result = PyUnicode_AsUTF8AndSize(o, length);
        #endif
        #if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        unicode_length = PyUnicode_GetLength(o);
        if (unlikely(unicode_length < 0)) return NULL;
        if (unlikely(unicode_length != *length)) {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
        #endif
        return result;
    }
#else
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
}
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
    if (PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
    if (PyByteArray_Check(o)) {
#if (CYTHON_ASSUME_SAFE_SIZE && CYTHON_ASSUME_SAFE_MACROS) || (CYTHON_COMPILING_IN_PYPY && (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE)))
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
#else
        *length = PyByteArray_Size(o);
        if (*length == -1) return NULL;
        return PyByteArray_AsString(o);
#endif
    } else
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_LongWrongResultType(PyObject* result) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(result));
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
    PyErr_Format(PyExc_TypeError,
                 "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ")",
                 result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  PyObject *res = NULL;
  if (likely(PyLong_Check(x)))
      return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  if (likely(m && m->nb_int)) {
      res = m->nb_int(x);
  }
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
      res = PyNumber_Long(x);
  }
#endif
  if (likely(res)) {
      if (unlikely(!PyLong_CheckExact(res))) {
          return __Pyx_PyNumber_LongWrongResultType(res);
      }
  }
  else if (!PyErr_Occurred()) {
      PyErr_SetString(PyExc_TypeError,
                      "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyLong_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyLong_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b) {
    CYTHON_UNUSED_VAR(b);
    return __Pyx_NewRef(Py_None);
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t ival) {
    return PyLong_FromSize_t(ival);
}


/* MultiPhaseInitModuleState */
#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE
#ifndef CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
#if (CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX >= 0x030C0000)
  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 1
#else
  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 0
#endif
#endif
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE && !CYTHON_ATOMICS
#error "Module state with PEP489 requires atomics. Currently that's one of\
 C11, C++11, gcc atomic intrinsics or MSVC atomic intrinsics"
#endif
#if !CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
#define __Pyx_ModuleStateLookup_Lock()
#define __Pyx_ModuleStateLookup_Unlock()
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d0000
static PyMutex __Pyx_ModuleStateLookup_mutex = {0};
#define __Pyx_ModuleStateLookup_Lock() PyMutex_Lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() PyMutex_Unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(__cplusplus) && __cplusplus >= 201103L
#include <mutex>
static std::mutex __Pyx_ModuleStateLookup_mutex;
#define __Pyx_ModuleStateLookup_Lock() __Pyx_ModuleStateLookup_mutex.lock()
#define __Pyx_ModuleStateLookup_Unlock() __Pyx_ModuleStateLookup_mutex.unlock()
#elif defined(__STDC_VERSION__) && (__STDC_VERSION__ > 201112L) && !defined(__STDC_NO_THREADS__)
#include <threads.h>
static mtx_t __Pyx_ModuleStateLookup_mutex;
static once_flag __Pyx_ModuleStateLookup_mutex_once_flag = ONCE_FLAG_INIT;
static void __Pyx_ModuleStateLookup_initialize_mutex(void) {
    mtx_init(&__Pyx_ModuleStateLookup_mutex, mtx_plain);
}
#define __Pyx_ModuleStateLookup_Lock()\
  call_once(&__Pyx_ModuleStateLookup_mutex_once_flag, __Pyx_ModuleStateLookup_initialize_mutex);\
  mtx_lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() mtx_unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(HAVE_PTHREAD_H)
#include <pthread.h>
static pthread_mutex_t __Pyx_ModuleStateLookup_mutex = PTHREAD_MUTEX_INITIALIZER;
#define __Pyx_ModuleStateLookup_Lock() pthread_mutex_lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() pthread_mutex_unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(_WIN32)
#include <Windows.h>  // synchapi.h on its own doesn't work
static SRWLOCK __Pyx_ModuleStateLookup_mutex = SRWLOCK_INIT;
#define __Pyx_ModuleStateLookup_Lock() AcquireSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() ReleaseSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)
#else
#error "No suitable lock available for CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE.\
 Requires C standard >= C11, or C++ standard >= C++11,\
 or pthreads, or the Windows 32 API, or Python >= 3.13."
#endif
typedef struct {
    int64_t id;
    PyObject *module;
} __Pyx_InterpreterIdAndModule;
typedef struct {
    char interpreter_id_as_index;
    Py_ssize_t count;
    Py_ssize_t allocated;
    __Pyx_InterpreterIdAndModule table[1];
} __Pyx_ModuleStateLookupData;
#define __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE 32
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static __pyx_atomic_int_type __Pyx_ModuleStateLookup_read_counter = 0;
#endif
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static __pyx_atomic_ptr_type __Pyx_ModuleStateLookup_data = 0;
#else
static __Pyx_ModuleStateLookupData* __Pyx_ModuleStateLookup_data = NULL;
#endif
static __Pyx_InterpreterIdAndModule* __Pyx_State_FindModuleStateLookupTableLowerBound(
        __Pyx_InterpreterIdAndModule* table,
        Py_ssize_t count,
        int64_t interpreterId) {
    __Pyx_InterpreterIdAndModule* begin = table;
    __Pyx_InterpreterIdAndModule* end = begin + count;
    if (begin->id == interpreterId) {
        return begin;
    }
    while ((end - begin) > __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {
        __Pyx_InterpreterIdAndModule* halfway = begin + (end - begin)/2;
        if (halfway->id == interpreterId) {
            return halfway;
        }
        if (halfway->id < interpreterId) {
            begin = halfway;
        } else {
            end = halfway;
        }
    }
    for (; begin < end; ++begin) {
        if (begin->id >= interpreterId) return begin;
    }
    return begin;
}
static PyObject *__Pyx_State_FindModule(CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return NULL;
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData* data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);
    {
        __pyx_atomic_incr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
        if (likely(data)) {
            __Pyx_ModuleStateLookupData* new_data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_acquire(&__Pyx_ModuleStateLookup_data);
            if (likely(data == new_data)) {
                goto read_finished;
            }
        }
        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
        __Pyx_ModuleStateLookup_Lock();
        __pyx_atomic_incr_relaxed(&__Pyx_ModuleStateLookup_read_counter);
        data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);
        __Pyx_ModuleStateLookup_Unlock();
    }
  read_finished:;
#else
    __Pyx_ModuleStateLookupData* data = __Pyx_ModuleStateLookup_data;
#endif
    __Pyx_InterpreterIdAndModule* found = NULL;
    if (unlikely(!data)) goto end;
    if (data->interpreter_id_as_index) {
        if (interpreter_id < data->count) {
            found = data->table+interpreter_id;
        }
    } else {
        found = __Pyx_State_FindModuleStateLookupTableLowerBound(
            data->table, data->count, interpreter_id);
    }
  end:
    {
        PyObject *result=NULL;
        if (found && found->id == interpreter_id) {
            result = found->module;
        }
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
#endif
        return result;
    }
}
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static void __Pyx_ModuleStateLookup_wait_until_no_readers(void) {
    while (__pyx_atomic_load(&__Pyx_ModuleStateLookup_read_counter) != 0);
}
#else
#define __Pyx_ModuleStateLookup_wait_until_no_readers()
#endif
static int __Pyx_State_AddModuleInterpIdAsIndex(__Pyx_ModuleStateLookupData **old_data, PyObject* module, int64_t interpreter_id) {
    Py_ssize_t to_allocate = (*old_data)->allocated;
    while (to_allocate <= interpreter_id) {
        if (to_allocate == 0) to_allocate = 1;
        else to_allocate *= 2;
    }
    __Pyx_ModuleStateLookupData *new_data = *old_data;
    if (to_allocate != (*old_data)->allocated) {
         new_data = (__Pyx_ModuleStateLookupData *)realloc(
            *old_data,
            sizeof(__Pyx_ModuleStateLookupData)+(to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));
        if (!new_data) {
            PyErr_NoMemory();
            return -1;
        }
        for (Py_ssize_t i = new_data->allocated; i < to_allocate; ++i) {
            new_data->table[i].id = i;
            new_data->table[i].module = NULL;
        }
        new_data->allocated = to_allocate;
    }
    new_data->table[interpreter_id].module = module;
    if (new_data->count < interpreter_id+1) {
        new_data->count = interpreter_id+1;
    }
    *old_data = new_data;
    return 0;
}
static void __Pyx_State_ConvertFromInterpIdAsIndex(__Pyx_ModuleStateLookupData *data) {
    __Pyx_InterpreterIdAndModule *read = data->table;
    __Pyx_InterpreterIdAndModule *write = data->table;
    __Pyx_InterpreterIdAndModule *end = read + data->count;
    for (; read<end; ++read) {
        if (read->module) {
            write->id = read->id;
            write->module = read->module;
            ++write;
        }
    }
    data->count = write - data->table;
    for (; write<end; ++write) {
        write->id = 0;
        write->module = NULL;
    }
    data->interpreter_id_as_index = 0;
}
static int __Pyx_State_AddModule(PyObject* module, CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return -1;
    int result = 0;
    __Pyx_ModuleStateLookup_Lock();
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData *old_data = (__Pyx_ModuleStateLookupData *)
            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);
#else
    __Pyx_ModuleStateLookupData *old_data = __Pyx_ModuleStateLookup_data;
#endif
    __Pyx_ModuleStateLookupData *new_data = old_data;
    if (!new_data) {
        new_data = (__Pyx_ModuleStateLookupData *)calloc(1, sizeof(__Pyx_ModuleStateLookupData));
        if (!new_data) {
            result = -1;
            PyErr_NoMemory();
            goto end;
        }
        new_data->allocated = 1;
        new_data->interpreter_id_as_index = 1;
    }
    __Pyx_ModuleStateLookup_wait_until_no_readers();
    if (new_data->interpreter_id_as_index) {
        if (interpreter_id < __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {
            result = __Pyx_State_AddModuleInterpIdAsIndex(&new_data, module, interpreter_id);
            goto end;
        }
        __Pyx_State_ConvertFromInterpIdAsIndex(new_data);
    }
    {
        Py_ssize_t insert_at = 0;
        {
            __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(
                new_data->table, new_data->count, interpreter_id);
            assert(lower_bound);
            insert_at = lower_bound - new_data->table;
            if (unlikely(insert_at < new_data->count && lower_bound->id == interpreter_id)) {
                lower_bound->module = module;
                goto end;  // already in table, nothing more to do
            }
        }
        if (new_data->count+1 >= new_data->allocated) {
            Py_ssize_t to_allocate = (new_data->count+1)*2;
            new_data =
                (__Pyx_ModuleStateLookupData*)realloc(
                    new_data,
                    sizeof(__Pyx_ModuleStateLookupData) +
                    (to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));
            if (!new_data) {
                result = -1;
                new_data = old_data;
                PyErr_NoMemory();
                goto end;
            }
            new_data->allocated = to_allocate;
        }
        ++new_data->count;
        int64_t last_id = interpreter_id;
        PyObject *last_module = module;
        for (Py_ssize_t i=insert_at; i<new_data->count; ++i) {
            int64_t current_id = new_data->table[i].id;
            new_data->table[i].id = last_id;
            last_id = current_id;
            PyObject *current_module = new_data->table[i].module;
            new_data->table[i].module = last_module;
            last_module = current_module;
        }
    }
  end:
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, new_data);
#else
    __Pyx_ModuleStateLookup_data = new_data;
#endif
    __Pyx_ModuleStateLookup_Unlock();
    return result;
}
static int __Pyx_State_RemoveModule(CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return -1;
    __Pyx_ModuleStateLookup_Lock();
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData *data = (__Pyx_ModuleStateLookupData *)
            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);
#else
    __Pyx_ModuleStateLookupData *data = __Pyx_ModuleStateLookup_data;
#endif
    if (data->interpreter_id_as_index) {
        if (interpreter_id < data->count) {
            data->table[interpreter_id].module = NULL;
        }
        goto done;
    }
    {
        __Pyx_ModuleStateLookup_wait_until_no_readers();
        __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(
            data->table, data->count, interpreter_id);
        if (!lower_bound) goto done;
        if (lower_bound->id != interpreter_id) goto done;
        __Pyx_InterpreterIdAndModule *end = data->table+data->count;
        for (;lower_bound<end-1; ++lower_bound) {
            lower_bound->id = (lower_bound+1)->id;
            lower_bound->module = (lower_bound+1)->module;
        }
    }
    --data->count;
    if (data->count == 0) {
        free(data);
        data = NULL;
    }
  done:
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, data);
#else
    __Pyx_ModuleStateLookup_data = data;
#endif
    __Pyx_ModuleStateLookup_Unlock();
    return 0;
}
#endif

/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
